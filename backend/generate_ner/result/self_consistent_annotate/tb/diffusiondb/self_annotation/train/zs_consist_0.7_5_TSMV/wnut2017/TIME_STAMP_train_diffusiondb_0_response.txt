{'idx': '0', 'sentence': "RT @ZodiacFacts : #ZodiacFacts As an #Aries romance isn't about what you're after -- it 's about taking chances , exploring and keeping an ...", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: RT @ZodiacFacts : #ZodiacFacts As an #Aries romance isn\'t about what you\'re after -- it \'s about taking chances , exploring and keeping an ...\nAnswer: ', 'responses': ['[]', '[]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {}, 'avg': 0}}
{'idx': '1', 'sentence': 'The EYE of the Storm .... The Calm Before It ...', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: The EYE of the Storm .... The Calm Before It ...\nAnswer: ', 'responses': ['[{"EYE": "creative-work"}, {"Storm": "creative-work"}, {"Calm": "creative-work"}]', '[{"EYE of the Storm": "creative-work"}]', '[{"EYE of the Storm": "creative-work"}]', '[{"EYE": "creative-work"}, {"Storm": "creative-work"}, {"Calm": "creative-work"}]', '[{"EYE of the Storm": "creative-work"}]'], 'prediction_per_consist': [{'EYE': 'creative-work', 'Storm': 'creative-work', 'Calm': 'creative-work'}, {'EYE of the Storm': 'creative-work'}, {'EYE of the Storm': 'creative-work'}, {'EYE': 'creative-work', 'Storm': 'creative-work', 'Calm': 'creative-work'}, {'EYE of the Storm': 'creative-work'}], 'prediction': {'EYE of the Storm': 'creative-work'}, 'consistency_score': {'entities': {('EYE of the Storm', 'creative-work'): 3}, 'avg': 3.0}, 'consistency_score_SC_all_ans': {'entities': {('EYE', 'creative-work'): 2, ('Storm', 'creative-work'): 2, ('Calm', 'creative-work'): 2, ('EYE of the Storm', 'creative-work'): 3}, 'avg': 2.25}}
{'idx': '2', 'sentence': 'RT @m_candelaria : The amazing Follow Friday Train : @Sketchjobs @lollieshopping @philadelphiabn @elainebiss @TableMatters10 @STALKmyPRETT ...', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: RT @m_candelaria : The amazing Follow Friday Train : @Sketchjobs @lollieshopping @philadelphiabn @elainebiss @TableMatters10 @STALKmyPRETT ...\nAnswer: ', 'responses': ['[{"Sketchjobs": "person"}, {"lollieshopping": "person"}, {"philadelphiabn": "person"}, {"elainebiss": "person"}, {"TableMatters10": "group"}, {"STALKmyPRETT": "group"}]', '[{"Sketchjobs": "person"}, {"lollieshopping": "person"}, {"philadelphiabn": "location"}, {"elainebiss": "person"}, {"TableMatters10": "group"}, {"STALKmyPRETT": "group"}]', '[{"m_candelaria": "person"}, {"Sketchjobs": "group"}, {"lollieshopping": "group"}, {"philadelphiabn": "group"}, {"elainebiss": "group"}, {"TableMatters10": "group"}, {"STALKmyPRETT": "group"}]', '[]', '[{"m_candelaria": "person"}, {"Sketchjobs": "person"}, {"lollieshopping": "person"}, {"philadelphiabn": "person"}, {"elainebiss": "person"}, {"TableMatters10": "person"}, {"STALKmyPRETT": "person"}]'], 'prediction_per_consist': [{'Sketchjobs': 'person', 'lollieshopping': 'person', 'philadelphiabn': 'person', 'elainebiss': 'person', 'TableMatters10': 'group', 'STALKmyPRETT': 'group'}, {'Sketchjobs': 'person', 'lollieshopping': 'person', 'philadelphiabn': 'location', 'elainebiss': 'person', 'TableMatters10': 'group', 'STALKmyPRETT': 'group'}, {'m_candelaria': 'person', 'Sketchjobs': 'group', 'lollieshopping': 'group', 'philadelphiabn': 'group', 'elainebiss': 'group', 'TableMatters10': 'group', 'STALKmyPRETT': 'group'}, {}, {'m_candelaria': 'person', 'Sketchjobs': 'person', 'lollieshopping': 'person', 'philadelphiabn': 'person', 'elainebiss': 'person', 'TableMatters10': 'person', 'STALKmyPRETT': 'person'}], 'prediction': {'Sketchjobs': 'person', 'lollieshopping': 'person', 'philadelphiabn': 'person', 'elainebiss': 'person', 'TableMatters10': 'group', 'STALKmyPRETT': 'group'}, 'consistency_score': {'entities': {('Sketchjobs', 'person'): 3, ('lollieshopping', 'person'): 3, ('philadelphiabn', 'person'): 2, ('elainebiss', 'person'): 3, ('TableMatters10', 'group'): 3, ('STALKmyPRETT', 'group'): 3}, 'avg': 2.8333333333333335}, 'consistency_score_SC_all_ans': {'entities': {('Sketchjobs', 'person'): 3, ('lollieshopping', 'person'): 3, ('philadelphiabn', 'person'): 2, ('elainebiss', 'person'): 3, ('TableMatters10', 'group'): 3, ('STALKmyPRETT', 'group'): 3, ('philadelphiabn', 'location'): 1, ('m_candelaria', 'person'): 2, ('Sketchjobs', 'group'): 1, ('lollieshopping', 'group'): 1, ('philadelphiabn', 'group'): 1, ('elainebiss', 'group'): 1, ('TableMatters10', 'person'): 1, ('STALKmyPRETT', 'person'): 1}, 'avg': 1.8571428571428572}}
{'idx': '3', 'sentence': 'I liked a YouTube video -- Family Guy - Songs Named After a Girl http://youtu.be/ErPsx8zdnX4?a', 'label': "{'YouTube': 'corporation', 'Family Guy': 'creative-work'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: I liked a YouTube video -- Family Guy - Songs Named After a Girl http://youtu.be/ErPsx8zdnX4?a\nAnswer: ', 'responses': ['[{"YouTube": "product"}, {"Family Guy": "creative-work"}]', '[{"YouTube": "corporation"}, {"Family Guy": "creative-work"}, {"Songs Named After a Girl": "creative-work"}]', '[{"YouTube": "corporation"}, {"Family Guy": "creative-work"}, {"Songs Named After a Girl": "creative-work"}]', '[{"YouTube": "corporation"}, {"Family Guy": "creative-work"}]', '[{"YouTube": "corporation"}, {"Family Guy": "creative-work"}]'], 'prediction_per_consist': [{'YouTube': 'product', 'Family Guy': 'creative-work'}, {'YouTube': 'corporation', 'Family Guy': 'creative-work', 'Songs Named After a Girl': 'creative-work'}, {'YouTube': 'corporation', 'Family Guy': 'creative-work', 'Songs Named After a Girl': 'creative-work'}, {'YouTube': 'corporation', 'Family Guy': 'creative-work'}, {'YouTube': 'corporation', 'Family Guy': 'creative-work'}], 'prediction': {'YouTube': 'corporation', 'Family Guy': 'creative-work'}, 'consistency_score': {'entities': {('YouTube', 'corporation'): 4, ('Family Guy', 'creative-work'): 5}, 'avg': 4.5}, 'consistency_score_SC_all_ans': {'entities': {('YouTube', 'product'): 1, ('Family Guy', 'creative-work'): 5, ('YouTube', 'corporation'): 4, ('Songs Named After a Girl', 'creative-work'): 2}, 'avg': 3.0}}
{'idx': '4', 'sentence': 'Report : Michael Vick Will Start for Eagles on Sunday http://t.co/UqXcSXT', 'label': "{'Michael Vick': 'person', 'Eagles': 'group'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Report : Michael Vick Will Start for Eagles on Sunday http://t.co/UqXcSXT\nAnswer: ', 'responses': ['[{"Michael Vick": "person"}, {"Eagles": "group"}]', '[{"Michael Vick": "person"}, {"Eagles": "group"}]', '[{"Michael Vick": "person"}, {"Eagles": "group"}]', '[{"Michael Vick": "person"}, {"Eagles": "group"}]', '[{"Michael Vick": "person"}, {"Eagles": "group"}]'], 'prediction_per_consist': [{'Michael Vick': 'person', 'Eagles': 'group'}, {'Michael Vick': 'person', 'Eagles': 'group'}, {'Michael Vick': 'person', 'Eagles': 'group'}, {'Michael Vick': 'person', 'Eagles': 'group'}, {'Michael Vick': 'person', 'Eagles': 'group'}], 'prediction': {'Michael Vick': 'person', 'Eagles': 'group'}, 'consistency_score': {'entities': {('Michael Vick', 'person'): 5, ('Eagles', 'group'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Michael Vick', 'person'): 5, ('Eagles', 'group'): 5}, 'avg': 5.0}}
{'idx': '5', 'sentence': 'RT @DGCLEAN : This weeks daily Deal is a twofer 1 : window cleaning $4 per window with a $100 minimum or as an add on to a ......', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: RT @DGCLEAN : This weeks daily Deal is a twofer 1 : window cleaning $4 per window with a $100 minimum or as an add on to a ......\nAnswer: ', 'responses': ['[{"DGCLEAN": "group"}]', '[{"window cleaning": "product"}]', '[{"DGCLEAN": "corporation"}]', '[{"DGCLEAN": "corporation"}]', '[{"DGCLEAN": "corporation"}]'], 'prediction_per_consist': [{'DGCLEAN': 'group'}, {'window cleaning': 'product'}, {'DGCLEAN': 'corporation'}, {'DGCLEAN': 'corporation'}, {'DGCLEAN': 'corporation'}], 'prediction': {'DGCLEAN': 'corporation'}, 'consistency_score': {'entities': {('DGCLEAN', 'corporation'): 3}, 'avg': 3.0}, 'consistency_score_SC_all_ans': {'entities': {('DGCLEAN', 'group'): 1, ('window cleaning', 'product'): 1, ('DGCLEAN', 'corporation'): 3}, 'avg': 1.6666666666666667}}
{'idx': '6', 'sentence': "The Town might be one of the best movies I have seen all year . So , so good . And don't worry Ben , we already forgave you for Gigli . Really .", 'label': "{'The Town': 'creative-work', 'Ben': 'person', 'Gigli': 'creative-work'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: The Town might be one of the best movies I have seen all year . So , so good . And don\'t worry Ben , we already forgave you for Gigli . Really .\nAnswer: ', 'responses': ['[{"The Town": "creative-work"}, {"Ben": "person"}, {"Gigli": "creative-work"}]', '[{"The Town": "creative-work"}, {"Ben": "person"}, {"Gigli": "creative-work"}]', '[{"The Town": "creative-work"}, {"Ben": "person"}, {"Gigli": "creative-work"}]', '[{"The Town": "creative-work"}, {"Ben": "person"}, {"Gigli": "creative-work"}]', '[{"The Town": "creative-work"}, {"Ben": "person"}, {"Gigli": "creative-work"}]'], 'prediction_per_consist': [{'The Town': 'creative-work', 'Ben': 'person', 'Gigli': 'creative-work'}, {'The Town': 'creative-work', 'Ben': 'person', 'Gigli': 'creative-work'}, {'The Town': 'creative-work', 'Ben': 'person', 'Gigli': 'creative-work'}, {'The Town': 'creative-work', 'Ben': 'person', 'Gigli': 'creative-work'}, {'The Town': 'creative-work', 'Ben': 'person', 'Gigli': 'creative-work'}], 'prediction': {'The Town': 'creative-work', 'Ben': 'person', 'Gigli': 'creative-work'}, 'consistency_score': {'entities': {('The Town', 'creative-work'): 5, ('Ben', 'person'): 5, ('Gigli', 'creative-work'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('The Town', 'creative-work'): 5, ('Ben', 'person'): 5, ('Gigli', 'creative-work'): 5}, 'avg': 5.0}}
{'idx': '7', 'sentence': "Men 's soccer vs . Crown College at home tomorrow at 2 pm . Come support your Eagles ! Praying for you guys !", 'label': "{'Crown College': 'group', 'Eagles': 'group'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Men \'s soccer vs . Crown College at home tomorrow at 2 pm . Come support your Eagles ! Praying for you guys !\nAnswer: ', 'responses': ['[{"Crown College": "location"}, {"Eagles": "group"}]', '[{"Crown College": "location"}, {"Eagles": "group"}]', '[{"Crown College": "location"}, {"Eagles": "group"}]', '[{"Crown College": "location"}, {"Eagles": "group"}]', '[{"Crown College": "location"}, {"Eagles": "group"}]'], 'prediction_per_consist': [{'Crown College': 'location', 'Eagles': 'group'}, {'Crown College': 'location', 'Eagles': 'group'}, {'Crown College': 'location', 'Eagles': 'group'}, {'Crown College': 'location', 'Eagles': 'group'}, {'Crown College': 'location', 'Eagles': 'group'}], 'prediction': {'Crown College': 'location', 'Eagles': 'group'}, 'consistency_score': {'entities': {('Crown College', 'location'): 5, ('Eagles', 'group'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Crown College', 'location'): 5, ('Eagles', 'group'): 5}, 'avg': 5.0}}
{'idx': '8', 'sentence': '" You may have given up on me , but I\'m not given up on you ." -The Boy You Use To Love', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: " You may have given up on me , but I\'m not given up on you ." -The Boy You Use To Love\nAnswer: ', 'responses': ['[{"The Boy You Use To Love": "person"}]', '[{"The Boy You Use To Love": "creative-work"}]', '[{"The Boy You Use To Love": "creative-work"}]', '[{"The Boy You Use To Love": "person"}]', '[{"The Boy You Use To Love": "person"}]'], 'prediction_per_consist': [{'The Boy You Use To Love': 'person'}, {'The Boy You Use To Love': 'creative-work'}, {'The Boy You Use To Love': 'creative-work'}, {'The Boy You Use To Love': 'person'}, {'The Boy You Use To Love': 'person'}], 'prediction': {'The Boy You Use To Love': 'person'}, 'consistency_score': {'entities': {('The Boy You Use To Love', 'person'): 3}, 'avg': 3.0}, 'consistency_score_SC_all_ans': {'entities': {('The Boy You Use To Love', 'person'): 3, ('The Boy You Use To Love', 'creative-work'): 2}, 'avg': 2.5}}
{'idx': '9', 'sentence': "@xiaomai_ Kom deze maand denk ik niet , next week Parijs , en allemaal toetsen en presentaties enzo &gt; . &lt; '....", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @xiaomai_ Kom deze maand denk ik niet , next week Parijs , en allemaal toetsen en presentaties enzo &gt; . &lt; \'....\nAnswer: ', 'responses': ['[{"xiaomai": "person"}, {"Parijs": "location"}]', '[{"xiaomai": "person"}, {"Parijs": "location"}]', '[{"xiaomai": "person"}, {"Parijs": "location"}]', '[{"xiaomai_": "person"}, {"Parijs": "location"}]', '[{"xiaomai": "person"}, {"Parijs": "location"}]'], 'prediction_per_consist': [{'xiaomai': 'person', 'Parijs': 'location'}, {'xiaomai': 'person', 'Parijs': 'location'}, {'xiaomai': 'person', 'Parijs': 'location'}, {'xiaomai_': 'person', 'Parijs': 'location'}, {'xiaomai': 'person', 'Parijs': 'location'}], 'prediction': {'xiaomai': 'person', 'Parijs': 'location'}, 'consistency_score': {'entities': {('xiaomai', 'person'): 4, ('Parijs', 'location'): 5}, 'avg': 4.5}, 'consistency_score_SC_all_ans': {'entities': {('xiaomai', 'person'): 4, ('Parijs', 'location'): 5, ('xiaomai_', 'person'): 1}, 'avg': 3.3333333333333335}}
{'idx': '10', 'sentence': 'Sleeping time . Morgenochtend maar even de Koperdoos een schoonmaakbeurtje geven ...', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Sleeping time . Morgenochtend maar even de Koperdoos een schoonmaakbeurtje geven ...\nAnswer: ', 'responses': ['[{"Koperdoos": "product"}]', '[]', '[]', '[{"Koperdoos": "product"}]', '[]'], 'prediction_per_consist': [{'Koperdoos': 'product'}, {}, {}, {'Koperdoos': 'product'}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {('Koperdoos', 'product'): 2}, 'avg': 2.0}}
{'idx': '11', 'sentence': "&quot; her lips , her lips i could kiss them all day if she'd let me ... hahahaha &quot; lol sooooooooo cute &lt; 3", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: &quot; her lips , her lips i could kiss them all day if she\'d let me ... hahahaha &quot; lol sooooooooo cute &lt; 3\nAnswer: ', 'responses': ['[]', '[{"her lips": "creative-work"}]', '[{"her lips": "creative-work"}]', '[]', '[{"her lips": "creative-work"}]'], 'prediction_per_consist': [{}, {'her lips': 'creative-work'}, {'her lips': 'creative-work'}, {}, {'her lips': 'creative-work'}], 'prediction': {'her lips': 'creative-work'}, 'consistency_score': {'entities': {('her lips', 'creative-work'): 3}, 'avg': 3.0}, 'consistency_score_SC_all_ans': {'entities': {('her lips', 'creative-work'): 3}, 'avg': 3.0}}
{'idx': '12', 'sentence': 'When Lari and I went to Futoosh , the owner gave us our drinks for free !', 'label': "{'Lari': 'person', 'Futoosh': 'location'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: When Lari and I went to Futoosh , the owner gave us our drinks for free !\nAnswer: ', 'responses': ['[{"Lari": "person"}, {"Futoosh": "location"}]', '[{"Lari": "person"}, {"Futoosh": "location"}]', '[{"Lari": "person"}, {"Futoosh": "location"}]', '[{"Lari": "person"}, {"Futoosh": "location"}]', '[{"Lari": "person"}, {"Futoosh": "location"}]'], 'prediction_per_consist': [{'Lari': 'person', 'Futoosh': 'location'}, {'Lari': 'person', 'Futoosh': 'location'}, {'Lari': 'person', 'Futoosh': 'location'}, {'Lari': 'person', 'Futoosh': 'location'}, {'Lari': 'person', 'Futoosh': 'location'}], 'prediction': {'Lari': 'person', 'Futoosh': 'location'}, 'consistency_score': {'entities': {('Lari', 'person'): 5, ('Futoosh', 'location'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Lari', 'person'): 5, ('Futoosh', 'location'): 5}, 'avg': 5.0}}
{'idx': '13', 'sentence': "&quot; When you don't get what you want , you suffer . If you get it , you suffer too since you can't hold on to it forever .&quot; ~ Peaceful Warrior", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: &quot; When you don\'t get what you want , you suffer . If you get it , you suffer too since you can\'t hold on to it forever .&quot; ~ Peaceful Warrior\nAnswer: ', 'responses': ['[]', '[]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {}, 'avg': 0}}
{'idx': '14', 'sentence': '@aplusk What made you laugh ? This did , courtesy of @rainnwilson http://www.officetally.com/rainn-wilson-and-friends-seattle-oct-23', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @aplusk What made you laugh ? This did , courtesy of @rainnwilson http://www.officetally.com/rainn-wilson-and-friends-seattle-oct-23\nAnswer: ', 'responses': ['[{"@aplusk": "person"}, {"@rainnwilson": "person"}, {"Seattle": "location"}]', '[{"@aplusk": "person"}, {"@rainnwilson": "person"}, {"http://www.officetally.com/rainn-wilson-and-friends-seattle-oct-23": "location"}]', '[{"@aplusk": "person"}, {"@rainnwilson": "person"}, {"Seattle": "location"}]', '[{"aplusk": "person"}, {"rainnwilson": "person"}, {"Seattle": "location"}]', '[{"@aplusk": "person"}, {"@rainnwilson": "person"}, {"Seattle": "location"}]'], 'prediction_per_consist': [{'@aplusk': 'person', '@rainnwilson': 'person', 'Seattle': 'location'}, {'@aplusk': 'person', '@rainnwilson': 'person', 'http://www.officetally.com/rainn-wilson-and-friends-seattle-oct-23': 'location'}, {'@aplusk': 'person', '@rainnwilson': 'person', 'Seattle': 'location'}, {'aplusk': 'person', 'rainnwilson': 'person', 'Seattle': 'location'}, {'@aplusk': 'person', '@rainnwilson': 'person', 'Seattle': 'location'}], 'prediction': {'@aplusk': 'person', '@rainnwilson': 'person', 'Seattle': 'location'}, 'consistency_score': {'entities': {('@aplusk', 'person'): 4, ('@rainnwilson', 'person'): 4, ('Seattle', 'location'): 4}, 'avg': 4.0}, 'consistency_score_SC_all_ans': {'entities': {('@aplusk', 'person'): 4, ('@rainnwilson', 'person'): 4, ('Seattle', 'location'): 4, ('http://www.officetally.com/rainn-wilson-and-friends-seattle-oct-23', 'location'): 1, ('aplusk', 'person'): 1, ('rainnwilson', 'person'): 1}, 'avg': 2.5}}
{'idx': '15', 'sentence': 'Time magazine wrote an article saying the rumor touch is for fags', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Time magazine wrote an article saying the rumor touch is for fags\nAnswer: ', 'responses': ['[{"Time magazine": "corporation"}]', '[{"Time magazine": "corporation"}]', '[{"Time magazine": "corporation"}]', '[{"Time magazine": "corporation"}]', '[{"Time magazine": "corporation"}]'], 'prediction_per_consist': [{'Time magazine': 'corporation'}, {'Time magazine': 'corporation'}, {'Time magazine': 'corporation'}, {'Time magazine': 'corporation'}, {'Time magazine': 'corporation'}], 'prediction': {'Time magazine': 'corporation'}, 'consistency_score': {'entities': {('Time magazine', 'corporation'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Time magazine', 'corporation'): 5}, 'avg': 5.0}}
{'idx': '16', 'sentence': "Do n't Have Time To Stop In ??? Then , Check Out Our Quick Full Service Drive Thru Window :)", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Do n\'t Have Time To Stop In ??? Then , Check Out Our Quick Full Service Drive Thru Window :)\nAnswer: ', 'responses': ['[]', '[]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {}, 'avg': 0}}
{'idx': '17', 'sentence': '@_AsToldByBV well i wrote you like 6 times this week ! urgh . RACHELLE im gonnauh kill YOU tonite !', 'label': "{'RACHELLE': 'person'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @_AsToldByBV well i wrote you like 6 times this week ! urgh . RACHELLE im gonnauh kill YOU tonite !\nAnswer: ', 'responses': ['[{"RACHELLE": "person"}]', '[{"RACHELLE": "person"}]', '[{"RACHELLE": "person"}]', '[{"RACHELLE": "person"}]', '[{"RACHELLE": "person"}]'], 'prediction_per_consist': [{'RACHELLE': 'person'}, {'RACHELLE': 'person'}, {'RACHELLE': 'person'}, {'RACHELLE': 'person'}, {'RACHELLE': 'person'}], 'prediction': {'RACHELLE': 'person'}, 'consistency_score': {'entities': {('RACHELLE', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('RACHELLE', 'person'): 5}, 'avg': 5.0}}
{'idx': '18', 'sentence': "@lilwhitebear @GrouchoDuke I'm not kidding ! I used a book which was published in 2008 ( last year) ... it was an awesome book !", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @lilwhitebear @GrouchoDuke I\'m not kidding ! I used a book which was published in 2008 ( last year) ... it was an awesome book !\nAnswer: ', 'responses': ['[{"GrouchoDuke": "person"}, {"2008": "creative-work"}]', '[{"lilwhitebear": "person"}, {"GrouchoDuke": "person"}]', '[{"GrouchoDuke": "person"}, {"2008": "creative-work"}]', '[{"GrouchoDuke": "person"}, {"2008": "creative-work"}]', '[{"GrouchoDuke": "person"}, {"2008": "creative-work"}]'], 'prediction_per_consist': [{'GrouchoDuke': 'person', '2008': 'creative-work'}, {'lilwhitebear': 'person', 'GrouchoDuke': 'person'}, {'GrouchoDuke': 'person', '2008': 'creative-work'}, {'GrouchoDuke': 'person', '2008': 'creative-work'}, {'GrouchoDuke': 'person', '2008': 'creative-work'}], 'prediction': {'GrouchoDuke': 'person', '2008': 'creative-work'}, 'consistency_score': {'entities': {('GrouchoDuke', 'person'): 5, ('2008', 'creative-work'): 4}, 'avg': 4.5}, 'consistency_score_SC_all_ans': {'entities': {('GrouchoDuke', 'person'): 5, ('2008', 'creative-work'): 4, ('lilwhitebear', 'person'): 1}, 'avg': 3.3333333333333335}}
{'idx': '19', 'sentence': 'RT @TRAEABN Headed to Shreveport then Lake Charles -might as well shoot through dat #BMT after the slab show in Lake Charles ..', 'label': "{'Shreveport': 'location', 'Lake Charles': 'location'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: RT @TRAEABN Headed to Shreveport then Lake Charles -might as well shoot through dat #BMT after the slab show in Lake Charles ..\nAnswer: ', 'responses': ['[{"TRAEABN": "person"}, {"Shreveport": "location"}, {"Lake Charles": "location"}, {"BMT": "group"}]', '[{"TRAEABN": "person"}, {"Shreveport": "location"}, {"Lake Charles": "location"}, {"BMT": "group"}]', '[{"TRAEABN": "person"}, {"Shreveport": "location"}, {"Lake Charles": "location"}, {"BMT": "group"}]', '[{"TRAEABN": "person"}, {"Shreveport": "location"}, {"Lake Charles": "location"}, {"BMT": "location"}]', '[{"Shreveport": "location"}, {"Lake Charles": "location"}, {"BMT": "group"}]'], 'prediction_per_consist': [{'TRAEABN': 'person', 'Shreveport': 'location', 'Lake Charles': 'location', 'BMT': 'group'}, {'TRAEABN': 'person', 'Shreveport': 'location', 'Lake Charles': 'location', 'BMT': 'group'}, {'TRAEABN': 'person', 'Shreveport': 'location', 'Lake Charles': 'location', 'BMT': 'group'}, {'TRAEABN': 'person', 'Shreveport': 'location', 'Lake Charles': 'location', 'BMT': 'location'}, {'Shreveport': 'location', 'Lake Charles': 'location', 'BMT': 'group'}], 'prediction': {'TRAEABN': 'person', 'Shreveport': 'location', 'Lake Charles': 'location', 'BMT': 'group'}, 'consistency_score': {'entities': {('TRAEABN', 'person'): 4, ('Shreveport', 'location'): 5, ('Lake Charles', 'location'): 5, ('BMT', 'group'): 4}, 'avg': 4.5}, 'consistency_score_SC_all_ans': {'entities': {('TRAEABN', 'person'): 4, ('Shreveport', 'location'): 5, ('Lake Charles', 'location'): 5, ('BMT', 'group'): 4, ('BMT', 'location'): 1}, 'avg': 3.8}}
{'idx': '20', 'sentence': 'I just took " ( ALL PARTS ) Your a normal belieber .... what happens when you find J ..." and got : Part 1 : Holidays !! Try it : http://bit.ly/aOcpG6', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: I just took " ( ALL PARTS ) Your a normal belieber .... what happens when you find J ..." and got : Part 1 : Holidays !! Try it : http://bit.ly/aOcpG6\nAnswer: ', 'responses': ['[]', '[{"J": "person"}]', '[]', '[{"J": "person"}]', '[{"belieber": "group"}]'], 'prediction_per_consist': [{}, {'J': 'person'}, {}, {'J': 'person'}, {'belieber': 'group'}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {('J', 'person'): 2, ('belieber', 'group'): 1}, 'avg': 1.5}}
{'idx': '21', 'sentence': 'tonight at The Lodge : braised bison shortribs , kabocha squash risotto http://twitpic.com/2pdu4g', 'label': "{'The Lodge': 'location'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: tonight at The Lodge : braised bison shortribs , kabocha squash risotto http://twitpic.com/2pdu4g\nAnswer: ', 'responses': ['[]', '[{"The Lodge": "location"}]', '[{"The Lodge": "location"}]', '[{"The Lodge": "location"}]', '[{"The Lodge": "location"}]'], 'prediction_per_consist': [{}, {'The Lodge': 'location'}, {'The Lodge': 'location'}, {'The Lodge': 'location'}, {'The Lodge': 'location'}], 'prediction': {'The Lodge': 'location'}, 'consistency_score': {'entities': {('The Lodge', 'location'): 4}, 'avg': 4.0}, 'consistency_score_SC_all_ans': {'entities': {('The Lodge', 'location'): 4}, 'avg': 4.0}}
{'idx': '22', 'sentence': '@LesColyer Who do you film for ? I was on SKY news 2 weeks ago #checkmeout', 'label': "{'SKY': 'corporation'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @LesColyer Who do you film for ? I was on SKY news 2 weeks ago #checkmeout\nAnswer: ', 'responses': ['[{"LesColyer": "person"}, {"SKY news": "creative-work"}]', '[{"LesColyer": "person"}, {"SKY news": "creative-work"}]', '[{"LesColyer": "person"}, {"SKY news": "creative-work"}]', '[{"LesColyer": "person"}, {"SKY news": "creative-work"}]', '[{"LesColyer": "person"}, {"SKY news": "creative-work"}]'], 'prediction_per_consist': [{'LesColyer': 'person', 'SKY news': 'creative-work'}, {'LesColyer': 'person', 'SKY news': 'creative-work'}, {'LesColyer': 'person', 'SKY news': 'creative-work'}, {'LesColyer': 'person', 'SKY news': 'creative-work'}, {'LesColyer': 'person', 'SKY news': 'creative-work'}], 'prediction': {'LesColyer': 'person', 'SKY news': 'creative-work'}, 'consistency_score': {'entities': {('LesColyer', 'person'): 5, ('SKY news', 'creative-work'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('LesColyer', 'person'): 5, ('SKY news', 'creative-work'): 5}, 'avg': 5.0}}
{'idx': '23', 'sentence': 'There was just a fire at work . Today is looking up .', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: There was just a fire at work . Today is looking up .\nAnswer: ', 'responses': ['[]', '[]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {}, 'avg': 0}}
{'idx': '24', 'sentence': 'VIDEO : Showbiz Tonight - Is TV Too Gay ?: http://bit.ly/aAZMD6', 'label': "{'Showbiz Tonight': 'creative-work'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: VIDEO : Showbiz Tonight - Is TV Too Gay ?: http://bit.ly/aAZMD6\nAnswer: ', 'responses': ['[{"Showbiz Tonight": "creative-work"}]', '[{"Showbiz Tonight": "creative-work"}]', '[{"Showbiz Tonight": "creative-work"}]', '[{"Showbiz Tonight": "creative-work"}]', '[{"Showbiz Tonight": "creative-work"}]'], 'prediction_per_consist': [{'Showbiz Tonight': 'creative-work'}, {'Showbiz Tonight': 'creative-work'}, {'Showbiz Tonight': 'creative-work'}, {'Showbiz Tonight': 'creative-work'}, {'Showbiz Tonight': 'creative-work'}], 'prediction': {'Showbiz Tonight': 'creative-work'}, 'consistency_score': {'entities': {('Showbiz Tonight', 'creative-work'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Showbiz Tonight', 'creative-work'): 5}, 'avg': 5.0}}
{'idx': '25', 'sentence': 'get ready to shop local !! RT @uniqueLA : BIG NEWS to start your weekend : Oct 22 @UniqueLA will be opening a store at @HDbuttercupLA .', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: get ready to shop local !! RT @uniqueLA : BIG NEWS to start your weekend : Oct 22 @UniqueLA will be opening a store at @HDbuttercupLA .\nAnswer: ', 'responses': ['[{"uniqueLA": "group"}, {"UniqueLA": "group"}, {"HDbuttercupLA": "location"}]', '[{"uniqueLA": "group"}, {"UniqueLA": "group"}, {"HDbuttercupLA": "location"}]', '[{"uniqueLA": "group"}, {"UniqueLA": "group"}, {"HDbuttercupLA": "location"}]', '[{"uniqueLA": "group"}, {"UniqueLA": "corporation"}, {"HDbuttercupLA": "location"}]', '[{"uniqueLA": "group"}, {"UniqueLA": "group"}, {"HDbuttercupLA": "location"}]'], 'prediction_per_consist': [{'uniqueLA': 'group', 'UniqueLA': 'group', 'HDbuttercupLA': 'location'}, {'uniqueLA': 'group', 'UniqueLA': 'group', 'HDbuttercupLA': 'location'}, {'uniqueLA': 'group', 'UniqueLA': 'group', 'HDbuttercupLA': 'location'}, {'uniqueLA': 'group', 'UniqueLA': 'corporation', 'HDbuttercupLA': 'location'}, {'uniqueLA': 'group', 'UniqueLA': 'group', 'HDbuttercupLA': 'location'}], 'prediction': {'uniqueLA': 'group', 'UniqueLA': 'group', 'HDbuttercupLA': 'location'}, 'consistency_score': {'entities': {('uniqueLA', 'group'): 5, ('UniqueLA', 'group'): 4, ('HDbuttercupLA', 'location'): 5}, 'avg': 4.666666666666667}, 'consistency_score_SC_all_ans': {'entities': {('uniqueLA', 'group'): 5, ('UniqueLA', 'group'): 4, ('HDbuttercupLA', 'location'): 5, ('UniqueLA', 'corporation'): 1}, 'avg': 3.75}}
{'idx': '26', 'sentence': 'RT @hificlub Come get your blood flowing with @waxromeo &amp; @fordinho at The Heartbeat tonight , or as we call it Hide-and-Go Sikh !', 'label': "{'The Heartbeat': 'location'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: RT @hificlub Come get your blood flowing with @waxromeo &amp; @fordinho at The Heartbeat tonight , or as we call it Hide-and-Go Sikh !\nAnswer: ', 'responses': ['[{"waxromeo": "person"}, {"fordinho": "person"}, {"The Heartbeat": "location"}, {"Hide-and-Go Sikh": "creative-work"}]', '[{"waxromeo": "person"}, {"fordinho": "person"}, {"The Heartbeat": "location"}, {"Hide-and-Go Sikh": "creative-work"}]', '[{"waxromeo": "person"}, {"fordinho": "person"}, {"The Heartbeat": "location"}, {"Hide-and-Go Sikh": "creative-work"}]', '[{"waxromeo": "person"}, {"fordinho": "person"}, {"The Heartbeat": "location"}, {"Hide-and-Go Sikh": "creative-work"}]', '[{"waxromeo": "person"}, {"fordinho": "person"}, {"The Heartbeat": "location"}, {"Hide-and-Go Sikh": "creative-work"}]'], 'prediction_per_consist': [{'waxromeo': 'person', 'fordinho': 'person', 'The Heartbeat': 'location', 'Hide-and-Go Sikh': 'creative-work'}, {'waxromeo': 'person', 'fordinho': 'person', 'The Heartbeat': 'location', 'Hide-and-Go Sikh': 'creative-work'}, {'waxromeo': 'person', 'fordinho': 'person', 'The Heartbeat': 'location', 'Hide-and-Go Sikh': 'creative-work'}, {'waxromeo': 'person', 'fordinho': 'person', 'The Heartbeat': 'location', 'Hide-and-Go Sikh': 'creative-work'}, {'waxromeo': 'person', 'fordinho': 'person', 'The Heartbeat': 'location', 'Hide-and-Go Sikh': 'creative-work'}], 'prediction': {'waxromeo': 'person', 'fordinho': 'person', 'The Heartbeat': 'location', 'Hide-and-Go Sikh': 'creative-work'}, 'consistency_score': {'entities': {('waxromeo', 'person'): 5, ('fordinho', 'person'): 5, ('The Heartbeat', 'location'): 5, ('Hide-and-Go Sikh', 'creative-work'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('waxromeo', 'person'): 5, ('fordinho', 'person'): 5, ('The Heartbeat', 'location'): 5, ('Hide-and-Go Sikh', 'creative-work'): 5}, 'avg': 5.0}}
{'idx': '27', 'sentence': "Oh my goodness , I thought by Friday evening one 's supposed to breath easy , but at the moment this is sadly not the case .", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Oh my goodness , I thought by Friday evening one \'s supposed to breath easy , but at the moment this is sadly not the case .\nAnswer: ', 'responses': ['[]', '[]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {}, 'avg': 0}}
{'idx': '28', 'sentence': '@BeNFranKCaptivE yea yea yea ... How was your day ?', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @BeNFranKCaptivE yea yea yea ... How was your day ?\nAnswer: ', 'responses': ['[]', '[]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {}, 'avg': 0}}
{'idx': '29', 'sentence': '@MsAustinTaylor whats been going on today ?', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @MsAustinTaylor whats been going on today ?\nAnswer: ', 'responses': ['[{"MsAustinTaylor": "person"}]', '[{"MsAustinTaylor": "person"}]', '[{"MsAustinTaylor": "person"}]', '[{"MsAustinTaylor": "person"}]', '[{"MsAustinTaylor": "person"}]'], 'prediction_per_consist': [{'MsAustinTaylor': 'person'}, {'MsAustinTaylor': 'person'}, {'MsAustinTaylor': 'person'}, {'MsAustinTaylor': 'person'}, {'MsAustinTaylor': 'person'}], 'prediction': {'MsAustinTaylor': 'person'}, 'consistency_score': {'entities': {('MsAustinTaylor', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('MsAustinTaylor', 'person'): 5}, 'avg': 5.0}}
{'idx': '30', 'sentence': "Follow Friday : Once again , I suggest you tell everyone you know to FOLLOW ME ! Let 's get me over 200 followers ! Porn robots welcome ! #ff", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Follow Friday : Once again , I suggest you tell everyone you know to FOLLOW ME ! Let \'s get me over 200 followers ! Porn robots welcome ! #ff\nAnswer: ', 'responses': ['[{"Follow Friday": "creative-work"}]', '[]', '[{"Follow Friday": "creative-work"}]', '[{"Follow Friday": "creative-work"}]', '[{"Follow Friday": "creative-work"}]'], 'prediction_per_consist': [{'Follow Friday': 'creative-work'}, {}, {'Follow Friday': 'creative-work'}, {'Follow Friday': 'creative-work'}, {'Follow Friday': 'creative-work'}], 'prediction': {'Follow Friday': 'creative-work'}, 'consistency_score': {'entities': {('Follow Friday', 'creative-work'): 4}, 'avg': 4.0}, 'consistency_score_SC_all_ans': {'entities': {('Follow Friday', 'creative-work'): 4}, 'avg': 4.0}}
{'idx': '31', 'sentence': 'Have DJ Got Us Fallin in Love in my head . " Cause baby tonight , The dj got us fallin in love again "', 'label': "{'DJ Got Us Fallin in Love': 'creative-work'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Have DJ Got Us Fallin in Love in my head . " Cause baby tonight , The dj got us fallin in love again "\nAnswer: ', 'responses': ['[{"DJ": "person"}]', '[{"DJ Got Us Fallin in Love": "creative-work"}]', '[{"DJ Got Us Fallin in Love": "creative-work"}]', '[{"DJ": "person"}, {"Cause": "person"}]', '[{"DJ Got Us Fallin in Love": "creative-work"}]'], 'prediction_per_consist': [{'DJ': 'person'}, {'DJ Got Us Fallin in Love': 'creative-work'}, {'DJ Got Us Fallin in Love': 'creative-work'}, {'DJ': 'person', 'Cause': 'person'}, {'DJ Got Us Fallin in Love': 'creative-work'}], 'prediction': {'DJ Got Us Fallin in Love': 'creative-work'}, 'consistency_score': {'entities': {('DJ Got Us Fallin in Love', 'creative-work'): 3}, 'avg': 3.0}, 'consistency_score_SC_all_ans': {'entities': {('DJ', 'person'): 2, ('DJ Got Us Fallin in Love', 'creative-work'): 3, ('Cause', 'person'): 1}, 'avg': 2.0}}
{'idx': '32', 'sentence': 'RT @GreatestQuotes : " When everything seems to be going against you , remember that the airplane takes off against the wind , not with it ." ...', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: RT @GreatestQuotes : " When everything seems to be going against you , remember that the airplane takes off against the wind , not with it ." ...\nAnswer: ', 'responses': ['[]', '[]', '[{"GreatestQuotes": "group"}]', '[{"airplane": "product"}]', '[]'], 'prediction_per_consist': [{}, {}, {'GreatestQuotes': 'group'}, {'airplane': 'product'}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {('GreatestQuotes', 'group'): 1, ('airplane', 'product'): 1}, 'avg': 1.0}}
{'idx': '33', 'sentence': 'Well , after a fast-paced week full of prayer from family and friends , I now have a full time job and I pretty much start Monday :-)', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Well , after a fast-paced week full of prayer from family and friends , I now have a full time job and I pretty much start Monday :-)\nAnswer: ', 'responses': ['[{"Monday": "location"}]', '[{"Monday": "location"}]', '[{"Monday": "location"}]', '[{"Monday": "location"}]', '[{"Monday": "location"}]'], 'prediction_per_consist': [{'Monday': 'location'}, {'Monday': 'location'}, {'Monday': 'location'}, {'Monday': 'location'}, {'Monday': 'location'}], 'prediction': {'Monday': 'location'}, 'consistency_score': {'entities': {('Monday', 'location'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Monday', 'location'): 5}, 'avg': 5.0}}
{'idx': '34', 'sentence': "@flossyflop It 's a slightly off night tonight . Lots of requests I wouldn't normally play cos they're too slow .", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @flossyflop It \'s a slightly off night tonight . Lots of requests I wouldn\'t normally play cos they\'re too slow .\nAnswer: ', 'responses': ['[]', '[{"flossyflop": "person"}]', '[{"flossyflop": "person"}]', '[]', '[{"flossyflop": "person"}]'], 'prediction_per_consist': [{}, {'flossyflop': 'person'}, {'flossyflop': 'person'}, {}, {'flossyflop': 'person'}], 'prediction': {'flossyflop': 'person'}, 'consistency_score': {'entities': {('flossyflop', 'person'): 3}, 'avg': 3.0}, 'consistency_score_SC_all_ans': {'entities': {('flossyflop', 'person'): 3}, 'avg': 3.0}}
{'idx': '35', 'sentence': 'Great week in the Optimise office , another new client on board and we are close to signing a new team member', 'label': "{'Optimise': 'corporation'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Great week in the Optimise office , another new client on board and we are close to signing a new team member\nAnswer: ', 'responses': ['[{"Optimise": "corporation"}]', '[{"Optimise office": "location"}, {"client": "group"}, {"team member": "group"}]', '[{"Optimise office": "location"}, {"client": "group"}, {"team member": "group"}]', '[{"Optimise": "corporation"}]', '[{"Optimise office": "location"}, {"new client": "group"}, {"new team member": "group"}]'], 'prediction_per_consist': [{'Optimise': 'corporation'}, {'Optimise office': 'location', 'client': 'group', 'team member': 'group'}, {'Optimise office': 'location', 'client': 'group', 'team member': 'group'}, {'Optimise': 'corporation'}, {'Optimise office': 'location', 'new client': 'group', 'new team member': 'group'}], 'prediction': {'Optimise office': 'location'}, 'consistency_score': {'entities': {('Optimise office', 'location'): 3}, 'avg': 3.0}, 'consistency_score_SC_all_ans': {'entities': {('Optimise', 'corporation'): 2, ('Optimise office', 'location'): 3, ('client', 'group'): 2, ('team member', 'group'): 2, ('new client', 'group'): 1, ('new team member', 'group'): 1}, 'avg': 1.8333333333333333}}
{'idx': '36', 'sentence': 'been listenin to trey alllll week ... can u luv someone u never met ?? bcuz i think im in luv yeeuuuuppp !!!', 'label': "{'trey': 'person'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: been listenin to trey alllll week ... can u luv someone u never met ?? bcuz i think im in luv yeeuuuuppp !!!\nAnswer: ', 'responses': ['[{"trey": "person"}]', '[{"trey": "person"}]', '[{"trey": "person"}]', '[{"trey": "person"}]', '[{"trey": "person"}]'], 'prediction_per_consist': [{'trey': 'person'}, {'trey': 'person'}, {'trey': 'person'}, {'trey': 'person'}, {'trey': 'person'}], 'prediction': {'trey': 'person'}, 'consistency_score': {'entities': {('trey', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('trey', 'person'): 5}, 'avg': 5.0}}
{'idx': '37', 'sentence': '@zeeDOTi i might join in if I make it home in time . :)', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @zeeDOTi i might join in if I make it home in time . :)\nAnswer: ', 'responses': ['[]', '[]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {}, 'avg': 0}}
{'idx': '38', 'sentence': '@DrHubaEvaluator Not long ago I responded to a angry cardiologist whom I have known yrs . when he spit venom to the newspaper but I did it +', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @DrHubaEvaluator Not long ago I responded to a angry cardiologist whom I have known yrs . when he spit venom to the newspaper but I did it +\nAnswer: ', 'responses': ['[{"DrHubaEvaluator": "person"}]', '[{"DrHubaEvaluator": "person"}]', '[{"DrHubaEvaluator": "person"}]', '[{"DrHubaEvaluator": "person"}]', '[{"DrHubaEvaluator": "person"}]'], 'prediction_per_consist': [{'DrHubaEvaluator': 'person'}, {'DrHubaEvaluator': 'person'}, {'DrHubaEvaluator': 'person'}, {'DrHubaEvaluator': 'person'}, {'DrHubaEvaluator': 'person'}], 'prediction': {'DrHubaEvaluator': 'person'}, 'consistency_score': {'entities': {('DrHubaEvaluator', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('DrHubaEvaluator', 'person'): 5}, 'avg': 5.0}}
{'idx': '39', 'sentence': '@IZONModels we all need it from time to time . :)', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @IZONModels we all need it from time to time . :)\nAnswer: ', 'responses': ['[{"IZONModels": "group"}]', '[]', '[{"IZONModels": "group"}]', '[]', '[]'], 'prediction_per_consist': [{'IZONModels': 'group'}, {}, {'IZONModels': 'group'}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {('IZONModels', 'group'): 2}, 'avg': 2.0}}
{'idx': '40', 'sentence': 'The Basic Step Before You Even Start Thinking Of Making Your ...: Keyword research is a well known subject , yet so ... http://bit.ly/9XQgSr', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: The Basic Step Before You Even Start Thinking Of Making Your ...: Keyword research is a well known subject , yet so ... http://bit.ly/9XQgSr\nAnswer: ', 'responses': ['[]', '[{"Keyword research": "creative-work"}]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {'Keyword research': 'creative-work'}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {('Keyword research', 'creative-work'): 1}, 'avg': 1.0}}
{'idx': '41', 'sentence': 'RT @BadAssNigerian : Chillin w | @Brownin21 .... n gettin pierced this week &lt; WHOOOOP !!!', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: RT @BadAssNigerian : Chillin w | @Brownin21 .... n gettin pierced this week &lt; WHOOOOP !!!\nAnswer: ', 'responses': ['[{"Brownin21": "person"}]', '[{"Brownin21": "person"}]', '[{"BadAssNigerian": "person"}, {"Brownin21": "person"}]', '[{"Brownin21": "person"}]', '[{"Brownin21": "person"}]'], 'prediction_per_consist': [{'Brownin21': 'person'}, {'Brownin21': 'person'}, {'BadAssNigerian': 'person', 'Brownin21': 'person'}, {'Brownin21': 'person'}, {'Brownin21': 'person'}], 'prediction': {'Brownin21': 'person'}, 'consistency_score': {'entities': {('Brownin21', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Brownin21', 'person'): 5, ('BadAssNigerian', 'person'): 1}, 'avg': 3.0}}
{'idx': '42', 'sentence': "I got a very , very fun item from FedEx today . I'm so excited to add it to my demo bag ! #PassionParties . #WAHM", 'label': "{'FedEx': 'corporation'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: I got a very , very fun item from FedEx today . I\'m so excited to add it to my demo bag ! #PassionParties . #WAHM\nAnswer: ', 'responses': ['[{"FedEx": "corporation"}, {"#PassionParties": "group"}, {"#WAHM": "group"}]', '[{"FedEx": "corporation"}, {"WAHM": "group"}]', '[{"FedEx": "corporation"}, {"WAHM": "group"}]', '[{"FedEx": "corporation"}, {"PassionParties": "group"}]', '[{"FedEx": "corporation"}, {"demo bag": "product"}, {"PassionParties": "group"}, {"WAHM": "group"}]'], 'prediction_per_consist': [{'FedEx': 'corporation', '#PassionParties': 'group', '#WAHM': 'group'}, {'FedEx': 'corporation', 'WAHM': 'group'}, {'FedEx': 'corporation', 'WAHM': 'group'}, {'FedEx': 'corporation', 'PassionParties': 'group'}, {'FedEx': 'corporation', 'demo bag': 'product', 'PassionParties': 'group', 'WAHM': 'group'}], 'prediction': {'FedEx': 'corporation', 'WAHM': 'group'}, 'consistency_score': {'entities': {('FedEx', 'corporation'): 5, ('WAHM', 'group'): 3}, 'avg': 4.0}, 'consistency_score_SC_all_ans': {'entities': {('FedEx', 'corporation'): 5, ('#PassionParties', 'group'): 1, ('#WAHM', 'group'): 1, ('WAHM', 'group'): 3, ('PassionParties', 'group'): 2, ('demo bag', 'product'): 1}, 'avg': 2.1666666666666665}}
{'idx': '43', 'sentence': 'Is so excited to get some dancing done tonight with @jdsamson /MEN at The Echo .', 'label': "{'The Echo': 'location'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Is so excited to get some dancing done tonight with @jdsamson /MEN at The Echo .\nAnswer: ', 'responses': ['[{"@jdsamson /MEN": "group"}, {"The Echo": "location"}]', '[{"@jdsamson /MEN": "group"}, {"The Echo": "location"}]', '[{"@jdsamson /MEN": "group"}, {"The Echo": "location"}]', '[{"@jdsamson /MEN": "group"}, {"The Echo": "location"}]', '[{"@jdsamson /MEN": "group"}, {"The Echo": "location"}]'], 'prediction_per_consist': [{'@jdsamson /MEN': 'group', 'The Echo': 'location'}, {'@jdsamson /MEN': 'group', 'The Echo': 'location'}, {'@jdsamson /MEN': 'group', 'The Echo': 'location'}, {'@jdsamson /MEN': 'group', 'The Echo': 'location'}, {'@jdsamson /MEN': 'group', 'The Echo': 'location'}], 'prediction': {'@jdsamson /MEN': 'group', 'The Echo': 'location'}, 'consistency_score': {'entities': {('@jdsamson /MEN', 'group'): 5, ('The Echo', 'location'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('@jdsamson /MEN', 'group'): 5, ('The Echo', 'location'): 5}, 'avg': 5.0}}
{'idx': '44', 'sentence': 'Comment of the Day : The Depths of Poverty [ We Read You] :', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Comment of the Day : The Depths of Poverty [ We Read You] :\nAnswer: ', 'responses': ['[{"Comment of the Day": "creative-work"}, {"The Depths of Poverty": "creative-work"}]', '[{"Comment of the Day": "creative-work"}, {"The Depths of Poverty": "creative-work"}]', '[{"Comment of the Day": "creative-work"}, {"The Depths of Poverty": "creative-work"}]', '[{"Comment of the Day": "creative-work"}, {"The Depths of Poverty": "creative-work"}]', '[{"Comment of the Day": "creative-work"}, {"The Depths of Poverty": "creative-work"}]'], 'prediction_per_consist': [{'Comment of the Day': 'creative-work', 'The Depths of Poverty': 'creative-work'}, {'Comment of the Day': 'creative-work', 'The Depths of Poverty': 'creative-work'}, {'Comment of the Day': 'creative-work', 'The Depths of Poverty': 'creative-work'}, {'Comment of the Day': 'creative-work', 'The Depths of Poverty': 'creative-work'}, {'Comment of the Day': 'creative-work', 'The Depths of Poverty': 'creative-work'}], 'prediction': {'Comment of the Day': 'creative-work', 'The Depths of Poverty': 'creative-work'}, 'consistency_score': {'entities': {('Comment of the Day', 'creative-work'): 5, ('The Depths of Poverty', 'creative-work'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Comment of the Day', 'creative-work'): 5, ('The Depths of Poverty', 'creative-work'): 5}, 'avg': 5.0}}
{'idx': '45', 'sentence': 'Coding typo of the day : " resluts " - &gt; " results "', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Coding typo of the day : " resluts " - &gt; " results "\nAnswer: ', 'responses': ['[{"results": "product"}]', '[{"results": "product"}]', '[{"resluts": "product"}, {"results": "product"}]', '[{"results": "product"}]', '[{"resluts": "product"}, {"results": "product"}]'], 'prediction_per_consist': [{'results': 'product'}, {'results': 'product'}, {'resluts': 'product', 'results': 'product'}, {'results': 'product'}, {'resluts': 'product', 'results': 'product'}], 'prediction': {'results': 'product'}, 'consistency_score': {'entities': {('results', 'product'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('results', 'product'): 5, ('resluts', 'product'): 2}, 'avg': 3.5}}
{'idx': '46', 'sentence': 'Yay . @penguin is coming to see me next week ... plotting my cooking now !', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Yay . @penguin is coming to see me next week ... plotting my cooking now !\nAnswer: ', 'responses': ['[{"penguin": "corporation"}]', '[{"penguin": "person"}]', '[{"penguin": "person"}]', '[{"penguin": "corporation"}]', '[{"penguin": "person"}]'], 'prediction_per_consist': [{'penguin': 'corporation'}, {'penguin': 'person'}, {'penguin': 'person'}, {'penguin': 'corporation'}, {'penguin': 'person'}], 'prediction': {'penguin': 'person'}, 'consistency_score': {'entities': {('penguin', 'person'): 3}, 'avg': 3.0}, 'consistency_score_SC_all_ans': {'entities': {('penguin', 'corporation'): 2, ('penguin', 'person'): 3}, 'avg': 2.5}}
{'idx': '47', 'sentence': '\'FREEGAME FRIDAY !!! text in the word " FREEGAME " to 59925 for a FREE 1hr timeplay gamecard !\'', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: \'FREEGAME FRIDAY !!! text in the word " FREEGAME " to 59925 for a FREE 1hr timeplay gamecard !\'\nAnswer: ', 'responses': ['[{"FREEGAME": "product"}, {"FREEGAME": "group"}]', '[{"FREEGAME": "product"}]', '[{"FREEGAME": "product"}]', '[{"FREEGAME": "product"}, {"FREEGAME": "group"}]', '[{"FREEGAME": "product"}]'], 'prediction_per_consist': [{'FREEGAME': 'group'}, {'FREEGAME': 'product'}, {'FREEGAME': 'product'}, {'FREEGAME': 'group'}, {'FREEGAME': 'product'}], 'prediction': {'FREEGAME': 'product'}, 'consistency_score': {'entities': {('FREEGAME', 'product'): 3}, 'avg': 3.0}, 'consistency_score_SC_all_ans': {'entities': {('FREEGAME', 'group'): 2, ('FREEGAME', 'product'): 3}, 'avg': 2.5}}
{'idx': '48', 'sentence': 'u kno that day when the wanted will go 2 a radio station to find out if there number 1 with heart vacancy , when will that be ?', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: u kno that day when the wanted will go 2 a radio station to find out if there number 1 with heart vacancy , when will that be ?\nAnswer: ', 'responses': ['[{"the wanted": "group"}, {"radio station": "location"}, {"heart vacancy": "creative-work"}]', '[{"the wanted": "group"}, {"radio station": "location"}, {"heart vacancy": "product"}]', '[]', '[{"the wanted": "group"}, {"radio station": "location"}, {"heart vacancy": "product"}]', '[{"the wanted": "group"}, {"radio station": "location"}, {"heart vacancy": "creative-work"}]'], 'prediction_per_consist': [{'the wanted': 'group', 'radio station': 'location', 'heart vacancy': 'creative-work'}, {'the wanted': 'group', 'radio station': 'location', 'heart vacancy': 'product'}, {}, {'the wanted': 'group', 'radio station': 'location', 'heart vacancy': 'product'}, {'the wanted': 'group', 'radio station': 'location', 'heart vacancy': 'creative-work'}], 'prediction': {'the wanted': 'group', 'radio station': 'location', 'heart vacancy': 'creative-work'}, 'consistency_score': {'entities': {('the wanted', 'group'): 4, ('radio station', 'location'): 4, ('heart vacancy', 'creative-work'): 2}, 'avg': 3.3333333333333335}, 'consistency_score_SC_all_ans': {'entities': {('the wanted', 'group'): 4, ('radio station', 'location'): 4, ('heart vacancy', 'creative-work'): 2, ('heart vacancy', 'product'): 2}, 'avg': 3.0}}
{'idx': '49', 'sentence': "I love seeing the U.S. Capitol building in my rearview mirror when I'm driving home from work . #ILoveDC", 'label': "{'U.S. Capitol building': 'location'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: I love seeing the U.S. Capitol building in my rearview mirror when I\'m driving home from work . #ILoveDC\nAnswer: ', 'responses': ['[{"U.S. Capitol": "location"}]', '[{"U.S. Capitol": "location"}]', '[{"U.S. Capitol": "location"}]', '[{"U.S. Capitol": "location"}]', '[{"U.S. Capitol": "location"}]'], 'prediction_per_consist': [{'U.S. Capitol': 'location'}, {'U.S. Capitol': 'location'}, {'U.S. Capitol': 'location'}, {'U.S. Capitol': 'location'}, {'U.S. Capitol': 'location'}], 'prediction': {'U.S. Capitol': 'location'}, 'consistency_score': {'entities': {('U.S. Capitol', 'location'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('U.S. Capitol', 'location'): 5}, 'avg': 5.0}}
{'idx': '50', 'sentence': '@mcflysandra haha yes :) have to go speak tomorrow :) good night xxx', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @mcflysandra haha yes :) have to go speak tomorrow :) good night xxx\nAnswer: ', 'responses': ['[{"mcflysandra": "person"}]', '[{"mcflysandra": "person"}]', '[{"mcflysandra": "person"}]', '[{"mcflysandra": "person"}]', '[{"mcflysandra": "person"}]'], 'prediction_per_consist': [{'mcflysandra': 'person'}, {'mcflysandra': 'person'}, {'mcflysandra': 'person'}, {'mcflysandra': 'person'}, {'mcflysandra': 'person'}], 'prediction': {'mcflysandra': 'person'}, 'consistency_score': {'entities': {('mcflysandra', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('mcflysandra', 'person'): 5}, 'avg': 5.0}}
{'idx': '51', 'sentence': '@Phoebe1_ and i also loved the last years eurovision entry !! hoppaa ! they were cool too !!', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @Phoebe1_ and i also loved the last years eurovision entry !! hoppaa ! they were cool too !!\nAnswer: ', 'responses': ['[{"Phoebe1_": "person"}, {"eurovision": "creative-work"}]', '[{"Phoebe1_": "person"}, {"eurovision": "creative-work"}]', '[{"Phoebe1_": "person"}, {"eurovision entry": "creative-work"}]', '[{"Phoebe1_": "person"}, {"eurovision": "creative-work"}]', '[{"Phoebe1_": "person"}, {"eurovision": "creative-work"}]'], 'prediction_per_consist': [{'Phoebe1_': 'person', 'eurovision': 'creative-work'}, {'Phoebe1_': 'person', 'eurovision': 'creative-work'}, {'Phoebe1_': 'person', 'eurovision entry': 'creative-work'}, {'Phoebe1_': 'person', 'eurovision': 'creative-work'}, {'Phoebe1_': 'person', 'eurovision': 'creative-work'}], 'prediction': {'Phoebe1_': 'person', 'eurovision': 'creative-work'}, 'consistency_score': {'entities': {('Phoebe1_', 'person'): 5, ('eurovision', 'creative-work'): 4}, 'avg': 4.5}, 'consistency_score_SC_all_ans': {'entities': {('Phoebe1_', 'person'): 5, ('eurovision', 'creative-work'): 4, ('eurovision entry', 'creative-work'): 1}, 'avg': 3.3333333333333335}}
{'idx': '52', 'sentence': 'just whooped st . francis preps asssss . and i scored a goal :) and its friday . and i have no homeworkkk . SICK LIFEEEE', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: just whooped st . francis preps asssss . and i scored a goal :) and its friday . and i have no homeworkkk . SICK LIFEEEE\nAnswer: ', 'responses': ['[]', '[{"st . francis preps": "location"}]', '[{"st . francis": "location"}]', '[]', '[{"st . francis preps": "location"}]'], 'prediction_per_consist': [{}, {'st . francis preps': 'location'}, {'st . francis': 'location'}, {}, {'st . francis preps': 'location'}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {('st . francis preps', 'location'): 2, ('st . francis', 'location'): 1}, 'avg': 1.5}}
{'idx': '53', 'sentence': 'RT @ddockett : I got another account ... someone else will tweet when they think I would ! #fact | Although @NFL will probably figure that out', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: RT @ddockett : I got another account ... someone else will tweet when they think I would ! #fact | Although @NFL will probably figure that out\nAnswer: ', 'responses': ['[{"ddockett": "person"}, {"NFL": "corporation"}]', '[{"ddockett": "person"}, {"NFL": "corporation"}]', '[{"ddockett": "person"}, {"NFL": "corporation"}]', '[{"NFL": "corporation"}]', '[{"ddockett": "person"}, {"NFL": "corporation"}]'], 'prediction_per_consist': [{'ddockett': 'person', 'NFL': 'corporation'}, {'ddockett': 'person', 'NFL': 'corporation'}, {'ddockett': 'person', 'NFL': 'corporation'}, {'NFL': 'corporation'}, {'ddockett': 'person', 'NFL': 'corporation'}], 'prediction': {'ddockett': 'person', 'NFL': 'corporation'}, 'consistency_score': {'entities': {('ddockett', 'person'): 4, ('NFL', 'corporation'): 5}, 'avg': 4.5}, 'consistency_score_SC_all_ans': {'entities': {('ddockett', 'person'): 4, ('NFL', 'corporation'): 5}, 'avg': 4.5}}
{'idx': '54', 'sentence': "Let 's all take a shot for Lindsay Lohan tonight . Maybe snort a line if you're a real dedicated fan .", 'label': "{'Lindsay Lohan': 'person'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Let \'s all take a shot for Lindsay Lohan tonight . Maybe snort a line if you\'re a real dedicated fan .\nAnswer: ', 'responses': ['[{"Lindsay Lohan": "person"}]', '[{"Lindsay Lohan": "person"}]', '[{"Lindsay Lohan": "person"}]', '[{"Lindsay Lohan": "person"}]', '[{"Lindsay Lohan": "person"}]'], 'prediction_per_consist': [{'Lindsay Lohan': 'person'}, {'Lindsay Lohan': 'person'}, {'Lindsay Lohan': 'person'}, {'Lindsay Lohan': 'person'}, {'Lindsay Lohan': 'person'}], 'prediction': {'Lindsay Lohan': 'person'}, 'consistency_score': {'entities': {('Lindsay Lohan', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Lindsay Lohan', 'person'): 5}, 'avg': 5.0}}
{'idx': '55', 'sentence': "@elwxnino @clausw @ManDee4 The #comcast outages have been increasing for the last year and yet the prices haven't gone down .", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @elwxnino @clausw @ManDee4 The #comcast outages have been increasing for the last year and yet the prices haven\'t gone down .\nAnswer: ', 'responses': ['[{"comcast": "corporation"}]', '[{"comcast": "corporation"}]', '[{"comcast": "corporation"}]', '[{"comcast": "corporation"}]', '[{"comcast": "corporation"}]'], 'prediction_per_consist': [{'comcast': 'corporation'}, {'comcast': 'corporation'}, {'comcast': 'corporation'}, {'comcast': 'corporation'}, {'comcast': 'corporation'}], 'prediction': {'comcast': 'corporation'}, 'consistency_score': {'entities': {('comcast', 'corporation'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('comcast', 'corporation'): 5}, 'avg': 5.0}}
{'idx': '56', 'sentence': '@Mandiiemars she is asleep will do when she wakes up lol i already miss u :(', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @Mandiiemars she is asleep will do when she wakes up lol i already miss u :(\nAnswer: ', 'responses': ['[{"Mandiiemars": "person"}]', '[{"Mandiiemars": "person"}]', '[{"Mandiiemars": "person"}]', '[{"Mandiiemars": "person"}]', '[{"Mandiiemars": "person"}]'], 'prediction_per_consist': [{'Mandiiemars': 'person'}, {'Mandiiemars': 'person'}, {'Mandiiemars': 'person'}, {'Mandiiemars': 'person'}, {'Mandiiemars': 'person'}], 'prediction': {'Mandiiemars': 'person'}, 'consistency_score': {'entities': {('Mandiiemars', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Mandiiemars', 'person'): 5}, 'avg': 5.0}}
{'idx': '57', 'sentence': "I've listened to Tenshi ni Fureta yo so many times that I'm starting to memorize the lyrics , and it 's only been out for 4 days ! o . O", 'label': "{'Tenshi ni Fureta yo': 'creative-work'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: I\'ve listened to Tenshi ni Fureta yo so many times that I\'m starting to memorize the lyrics , and it \'s only been out for 4 days ! o . O\nAnswer: ', 'responses': ['[{"Tenshi ni Fureta yo": "creative-work"}]', '[{"Tenshi ni Fureta yo": "creative-work"}]', '[{"Tenshi ni Fureta yo": "creative-work"}]', '[{"Tenshi ni Fureta yo": "creative-work"}]', '[{"Tenshi ni Fureta yo": "creative-work"}]'], 'prediction_per_consist': [{'Tenshi ni Fureta yo': 'creative-work'}, {'Tenshi ni Fureta yo': 'creative-work'}, {'Tenshi ni Fureta yo': 'creative-work'}, {'Tenshi ni Fureta yo': 'creative-work'}, {'Tenshi ni Fureta yo': 'creative-work'}], 'prediction': {'Tenshi ni Fureta yo': 'creative-work'}, 'consistency_score': {'entities': {('Tenshi ni Fureta yo', 'creative-work'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Tenshi ni Fureta yo', 'creative-work'): 5}, 'avg': 5.0}}
{'idx': '58', 'sentence': 'RT @INTERMIX : Shopping on the High Holy Days . Retail , repent , retweet .', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: RT @INTERMIX : Shopping on the High Holy Days . Retail , repent , retweet .\nAnswer: ', 'responses': ['[{"INTERMIX": "corporation"}]', '[{"INTERMIX": "corporation"}]', '[{"INTERMIX": "corporation"}]', '[{"INTERMIX": "corporation"}]', '[{"INTERMIX": "corporation"}]'], 'prediction_per_consist': [{'INTERMIX': 'corporation'}, {'INTERMIX': 'corporation'}, {'INTERMIX': 'corporation'}, {'INTERMIX': 'corporation'}, {'INTERMIX': 'corporation'}], 'prediction': {'INTERMIX': 'corporation'}, 'consistency_score': {'entities': {('INTERMIX', 'corporation'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('INTERMIX', 'corporation'): 5}, 'avg': 5.0}}
{'idx': '59', 'sentence': "4Dbling 's place til monday , party party party . &lt; 3", 'label': "{'4Dbling': 'person'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: 4Dbling \'s place til monday , party party party . &lt; 3\nAnswer: ', 'responses': ['[{"4Dbling": "person"}]', '[{"4Dbling": "person"}]', '[{"4Dbling": "person"}]', '[{"4Dbling": "person"}]', '[{"4Dbling": "person"}]'], 'prediction_per_consist': [{'4Dbling': 'person'}, {'4Dbling': 'person'}, {'4Dbling': 'person'}, {'4Dbling': 'person'}, {'4Dbling': 'person'}], 'prediction': {'4Dbling': 'person'}, 'consistency_score': {'entities': {('4Dbling', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('4Dbling', 'person'): 5}, 'avg': 5.0}}
{'idx': '60', 'sentence': 'I stopped listening to this lecture like 20mins ago ... #sad', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: I stopped listening to this lecture like 20mins ago ... #sad\nAnswer: ', 'responses': ['[]', '[]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {}, 'avg': 0}}
{'idx': '61', 'sentence': "It 's official !!! Vegas for the weekend ! Starting tonight !! #nohands", 'label': "{'Vegas': 'location'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: It \'s official !!! Vegas for the weekend ! Starting tonight !! #nohands\nAnswer: ', 'responses': ['[{"Vegas": "location"}]', '[{"Vegas": "location"}]', '[{"Vegas": "location"}]', '[{"Vegas": "location"}]', '[{"Vegas": "location"}]'], 'prediction_per_consist': [{'Vegas': 'location'}, {'Vegas': 'location'}, {'Vegas': 'location'}, {'Vegas': 'location'}, {'Vegas': 'location'}], 'prediction': {'Vegas': 'location'}, 'consistency_score': {'entities': {('Vegas', 'location'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Vegas', 'location'): 5}, 'avg': 5.0}}
{'idx': '62', 'sentence': '@basboeit Een groeiproces in de ruimste zin van het woord . Ik arriveerde toen 5 kilo . Gelukkig viel ik er deze week evenzoveel weer uit .', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @basboeit Een groeiproces in de ruimste zin van het woord . Ik arriveerde toen 5 kilo . Gelukkig viel ik er deze week evenzoveel weer uit .\nAnswer: ', 'responses': ['[{"basboeit": "person"}]', '[{"basboeit": "person"}]', '[]', '[{"basboeit": "person"}]', '[{"basboeit": "person"}]'], 'prediction_per_consist': [{'basboeit': 'person'}, {'basboeit': 'person'}, {}, {'basboeit': 'person'}, {'basboeit': 'person'}], 'prediction': {'basboeit': 'person'}, 'consistency_score': {'entities': {('basboeit', 'person'): 4}, 'avg': 4.0}, 'consistency_score_SC_all_ans': {'entities': {('basboeit', 'person'): 4}, 'avg': 4.0}}
{'idx': '63', 'sentence': '@alealshinn @BambingBling ~~~ @sunchips this is the second time they have messed up .... about to give up on them', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @alealshinn @BambingBling ~~~ @sunchips this is the second time they have messed up .... about to give up on them\nAnswer: ', 'responses': ['[{"alealshinn": "person"}, {"BambingBling": "person"}, {"sunchips": "product"}]', '[{"alealshinn": "person"}, {"BambingBling": "person"}, {"sunchips": "corporation"}]', '[{"alealshinn": "person"}, {"BambingBling": "person"}, {"sunchips": "corporation"}]', '[{"alealshinn": "person"}, {"BambingBling": "person"}, {"sunchips": "corporation"}]', '[]'], 'prediction_per_consist': [{'alealshinn': 'person', 'BambingBling': 'person', 'sunchips': 'product'}, {'alealshinn': 'person', 'BambingBling': 'person', 'sunchips': 'corporation'}, {'alealshinn': 'person', 'BambingBling': 'person', 'sunchips': 'corporation'}, {'alealshinn': 'person', 'BambingBling': 'person', 'sunchips': 'corporation'}, {}], 'prediction': {'alealshinn': 'person', 'BambingBling': 'person', 'sunchips': 'corporation'}, 'consistency_score': {'entities': {('alealshinn', 'person'): 4, ('BambingBling', 'person'): 4, ('sunchips', 'corporation'): 3}, 'avg': 3.6666666666666665}, 'consistency_score_SC_all_ans': {'entities': {('alealshinn', 'person'): 4, ('BambingBling', 'person'): 4, ('sunchips', 'product'): 1, ('sunchips', 'corporation'): 3}, 'avg': 3.0}}
{'idx': '64', 'sentence': '@peterc83 night night good luck tomorrow x', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @peterc83 night night good luck tomorrow x\nAnswer: ', 'responses': ['[{"peterc83": "person"}]', '[{"peterc83": "person"}]', '[{"peterc83": "person"}]', '[{"peterc83": "person"}]', '[{"peterc83": "person"}]'], 'prediction_per_consist': [{'peterc83': 'person'}, {'peterc83': 'person'}, {'peterc83': 'person'}, {'peterc83': 'person'}, {'peterc83': 'person'}], 'prediction': {'peterc83': 'person'}, 'consistency_score': {'entities': {('peterc83', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('peterc83', 'person'): 5}, 'avg': 5.0}}
{'idx': '65', 'sentence': 'Day 27 - Day 27- Why are you doing this 30 day challenge im doing this because i am bored :) http://tumblr.com/xooiuell3', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Day 27 - Day 27- Why are you doing this 30 day challenge im doing this because i am bored :) http://tumblr.com/xooiuell3\nAnswer: ', 'responses': ['[]', '[{"Day 27": "creative-work"}]', '[]', '[{"http://tumblr.com/xooiuell3": "location"}]', '[{"Day 27": "creative-work"}, {"30 day challenge": "creative-work"}]'], 'prediction_per_consist': [{}, {'Day 27': 'creative-work'}, {}, {'http://tumblr.com/xooiuell3': 'location'}, {'Day 27': 'creative-work', '30 day challenge': 'creative-work'}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {('Day 27', 'creative-work'): 2, ('http://tumblr.com/xooiuell3', 'location'): 1, ('30 day challenge', 'creative-work'): 1}, 'avg': 1.3333333333333333}}
{'idx': '66', 'sentence': 'OK IMMA ASK THIS AGAIN HOW LONG DO YOU TALK TO A GIRL BEFORE U MAKE IT OFFICIAL &amp; START GOIN OUT WITH HER ????', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: OK IMMA ASK THIS AGAIN HOW LONG DO YOU TALK TO A GIRL BEFORE U MAKE IT OFFICIAL &amp; START GOIN OUT WITH HER ????\nAnswer: ', 'responses': ['[]', '[]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {}, 'avg': 0}}
{'idx': '67', 'sentence': 'Morning ....! I really never enjoy to sleep ... hhmmm .. Have a nice saturday all ..! Hehehehehe', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Morning ....! I really never enjoy to sleep ... hhmmm .. Have a nice saturday all ..! Hehehehehe\nAnswer: ', 'responses': ['[]', '[]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {}, 'avg': 0}}
{'idx': '68', 'sentence': '@TheAndyKaufman A couple weeks ago ? It caught my attention , because my dad drove truck for Wal-mart/swift a few months back .', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @TheAndyKaufman A couple weeks ago ? It caught my attention , because my dad drove truck for Wal-mart/swift a few months back .\nAnswer: ', 'responses': ['[{"TheAndyKaufman": "person"}, {"Wal-mart/swift": "corporation"}]', '[{"TheAndyKaufman": "person"}, {"Wal-mart/swift": "corporation"}]', '[{"TheAndyKaufman": "person"}, {"Wal-mart/swift": "corporation"}]', '[{"TheAndyKaufman": "person"}, {"Wal-mart/swift": "corporation"}]', '[{"TheAndyKaufman": "person"}, {"Wal-mart": "corporation"}]'], 'prediction_per_consist': [{'TheAndyKaufman': 'person', 'Wal-mart/swift': 'corporation'}, {'TheAndyKaufman': 'person', 'Wal-mart/swift': 'corporation'}, {'TheAndyKaufman': 'person', 'Wal-mart/swift': 'corporation'}, {'TheAndyKaufman': 'person', 'Wal-mart/swift': 'corporation'}, {'TheAndyKaufman': 'person', 'Wal-mart': 'corporation'}], 'prediction': {'TheAndyKaufman': 'person', 'Wal-mart/swift': 'corporation'}, 'consistency_score': {'entities': {('TheAndyKaufman', 'person'): 5, ('Wal-mart/swift', 'corporation'): 4}, 'avg': 4.5}, 'consistency_score_SC_all_ans': {'entities': {('TheAndyKaufman', 'person'): 5, ('Wal-mart/swift', 'corporation'): 4, ('Wal-mart', 'corporation'): 1}, 'avg': 3.3333333333333335}}
{'idx': '69', 'sentence': 'I was 15 minutes late yesterday so I left 20 min earlier today . I will be 20 minutes late today . #lifeispointless', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: I was 15 minutes late yesterday so I left 20 min earlier today . I will be 20 minutes late today . #lifeispointless\nAnswer: ', 'responses': ['[]', '[]', '[]', '[]', '[{"yesterday": "location"}, {"today": "location"}]'], 'prediction_per_consist': [{}, {}, {}, {}, {'yesterday': 'location', 'today': 'location'}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {('yesterday', 'location'): 1, ('today', 'location'): 1}, 'avg': 1.0}}
{'idx': '70', 'sentence': 'some freshies sat at our lunch table today . so i sat with them and talked with them about .. stuff .', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: some freshies sat at our lunch table today . so i sat with them and talked with them about .. stuff .\nAnswer: ', 'responses': ['[{"freshies": "group"}]', '[]', '[{"freshies": "group"}]', '[{"freshies": "group"}]', '[]'], 'prediction_per_consist': [{'freshies': 'group'}, {}, {'freshies': 'group'}, {'freshies': 'group'}, {}], 'prediction': {'freshies': 'group'}, 'consistency_score': {'entities': {('freshies', 'group'): 3}, 'avg': 3.0}, 'consistency_score_SC_all_ans': {'entities': {('freshies', 'group'): 3}, 'avg': 3.0}}
{'idx': '71', 'sentence': '#DiggyFollows50 right after his daddy stops tweeting via tub', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: #DiggyFollows50 right after his daddy stops tweeting via tub\nAnswer: ', 'responses': ['[{"DiggyFollows50": "group"}]', '[{"DiggyFollows50": "group"}]', '[{"DiggyFollows50": "group"}, {"tub": "product"}]', '[{"DiggyFollows50": "group"}, {"tub": "product"}]', '[{"DiggyFollows50": "group"}, {"tub": "product"}]'], 'prediction_per_consist': [{'DiggyFollows50': 'group'}, {'DiggyFollows50': 'group'}, {'DiggyFollows50': 'group', 'tub': 'product'}, {'DiggyFollows50': 'group', 'tub': 'product'}, {'DiggyFollows50': 'group', 'tub': 'product'}], 'prediction': {'DiggyFollows50': 'group', 'tub': 'product'}, 'consistency_score': {'entities': {('DiggyFollows50', 'group'): 5, ('tub', 'product'): 3}, 'avg': 4.0}, 'consistency_score_SC_all_ans': {'entities': {('DiggyFollows50', 'group'): 5, ('tub', 'product'): 3}, 'avg': 4.0}}
{'idx': '72', 'sentence': '@OGOchoCinco ocho you know your talent , I have agreed with every statement you have said over the past 2 years', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @OGOchoCinco ocho you know your talent , I have agreed with every statement you have said over the past 2 years\nAnswer: ', 'responses': ['[{"OGOchoCinco": "person"}]', '[{"OGOchoCinco": "person"}]', '[{"OGOchoCinco": "person"}]', '[{"OGOchoCinco": "person"}]', '[{"OGOchoCinco": "person"}]'], 'prediction_per_consist': [{'OGOchoCinco': 'person'}, {'OGOchoCinco': 'person'}, {'OGOchoCinco': 'person'}, {'OGOchoCinco': 'person'}, {'OGOchoCinco': 'person'}], 'prediction': {'OGOchoCinco': 'person'}, 'consistency_score': {'entities': {('OGOchoCinco', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('OGOchoCinco', 'person'): 5}, 'avg': 5.0}}
{'idx': '73', 'sentence': "What do a prostitute and a bungee jump have in common ? they cost the same , last as long , and if the rubber breaks you're screwed .", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: What do a prostitute and a bungee jump have in common ? they cost the same , last as long , and if the rubber breaks you\'re screwed .\nAnswer: ', 'responses': ['[]', '[]', '[{"prostitute": "person"}, {"bungee jump": "creative-work"}]', '[{"rubber": "product"}]', '[]'], 'prediction_per_consist': [{}, {}, {'prostitute': 'person', 'bungee jump': 'creative-work'}, {'rubber': 'product'}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {('prostitute', 'person'): 1, ('bungee jump', 'creative-work'): 1, ('rubber', 'product'): 1}, 'avg': 1.0}}
{'idx': '74', 'sentence': 'RT @Jasmynebieberr : Teenage Dream is on the radio ! My day just got a little better .', 'label': "{'Teenage Dream': 'creative-work'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: RT @Jasmynebieberr : Teenage Dream is on the radio ! My day just got a little better .\nAnswer: ', 'responses': ['[{"Jasmynebieberr": "person"}, {"Teenage Dream": "creative-work"}]', '[{"Jasmynebieberr": "person"}, {"Teenage Dream": "creative-work"}]', '[{"Jasmynebieberr": "person"}, {"Teenage Dream": "creative-work"}]', '[{"Jasmynebieberr": "person"}, {"Teenage Dream": "creative-work"}]', '[{"Jasmynebieberr": "person"}, {"Teenage Dream": "creative-work"}]'], 'prediction_per_consist': [{'Jasmynebieberr': 'person', 'Teenage Dream': 'creative-work'}, {'Jasmynebieberr': 'person', 'Teenage Dream': 'creative-work'}, {'Jasmynebieberr': 'person', 'Teenage Dream': 'creative-work'}, {'Jasmynebieberr': 'person', 'Teenage Dream': 'creative-work'}, {'Jasmynebieberr': 'person', 'Teenage Dream': 'creative-work'}], 'prediction': {'Jasmynebieberr': 'person', 'Teenage Dream': 'creative-work'}, 'consistency_score': {'entities': {('Jasmynebieberr', 'person'): 5, ('Teenage Dream', 'creative-work'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Jasmynebieberr', 'person'): 5, ('Teenage Dream', 'creative-work'): 5}, 'avg': 5.0}}
{'idx': '75', 'sentence': 'RT @ZodiacFacts : #ZodiacFacts As a #Gemini your energy is best spent delegating responsibilities and being there if or when people need you .', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: RT @ZodiacFacts : #ZodiacFacts As a #Gemini your energy is best spent delegating responsibilities and being there if or when people need you .\nAnswer: ', 'responses': ['[{"Gemini": "group"}]', '[]', '[{"Gemini": "group"}]', '[]', '[{"Gemini": "group"}]'], 'prediction_per_consist': [{'Gemini': 'group'}, {}, {'Gemini': 'group'}, {}, {'Gemini': 'group'}], 'prediction': {'Gemini': 'group'}, 'consistency_score': {'entities': {('Gemini', 'group'): 3}, 'avg': 3.0}, 'consistency_score_SC_all_ans': {'entities': {('Gemini', 'group'): 3}, 'avg': 3.0}}
{'idx': '76', 'sentence': 'Reminder : One-day tax workshops for small &amp; mid-size tax exempt orgs . First one is Sept . 22 in Detroit . Register now ! http://bit.ly/a2hvAv', 'label': "{'Detroit': 'location'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Reminder : One-day tax workshops for small &amp; mid-size tax exempt orgs . First one is Sept . 22 in Detroit . Register now ! http://bit.ly/a2hvAv\nAnswer: ', 'responses': ['[{"Detroit": "location"}]', '[{"Detroit": "location"}]', '[{"Detroit": "location"}]', '[{"Detroit": "location"}]', '[{"Detroit": "location"}]'], 'prediction_per_consist': [{'Detroit': 'location'}, {'Detroit': 'location'}, {'Detroit': 'location'}, {'Detroit': 'location'}, {'Detroit': 'location'}], 'prediction': {'Detroit': 'location'}, 'consistency_score': {'entities': {('Detroit', 'location'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Detroit', 'location'): 5}, 'avg': 5.0}}
{'idx': '77', 'sentence': 'found some really funny pictures of 1st year : L going to put them on facebook now !!', 'label': "{'facebook': 'corporation'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: found some really funny pictures of 1st year : L going to put them on facebook now !!\nAnswer: ', 'responses': ['[{"1st year": "group"}, {"facebook": "corporation"}]', '[{"L": "person"}, {"facebook": "product"}]', '[{"L": "person"}, {"facebook": "corporation"}]', '[{"L": "person"}]', '[{"1st year": "group"}, {"facebook": "corporation"}]'], 'prediction_per_consist': [{'1st year': 'group', 'facebook': 'corporation'}, {'L': 'person', 'facebook': 'product'}, {'L': 'person', 'facebook': 'corporation'}, {'L': 'person'}, {'1st year': 'group', 'facebook': 'corporation'}], 'prediction': {'facebook': 'corporation', 'L': 'person'}, 'consistency_score': {'entities': {('facebook', 'corporation'): 3, ('L', 'person'): 3}, 'avg': 3.0}, 'consistency_score_SC_all_ans': {'entities': {('1st year', 'group'): 2, ('facebook', 'corporation'): 3, ('L', 'person'): 3, ('facebook', 'product'): 1}, 'avg': 2.25}}
{'idx': '78', 'sentence': 'Beautiful day in Chicago ! Nice to get away from the Florida heat .', 'label': "{'Chicago': 'location', 'Florida': 'location'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Beautiful day in Chicago ! Nice to get away from the Florida heat .\nAnswer: ', 'responses': ['[{"Chicago": "location"}, {"Florida": "location"}]', '[{"Chicago": "location"}, {"Florida": "location"}]', '[{"Chicago": "location"}, {"Florida": "location"}]', '[{"Chicago": "location"}, {"Florida": "location"}]', '[{"Chicago": "location"}, {"Florida": "location"}]'], 'prediction_per_consist': [{'Chicago': 'location', 'Florida': 'location'}, {'Chicago': 'location', 'Florida': 'location'}, {'Chicago': 'location', 'Florida': 'location'}, {'Chicago': 'location', 'Florida': 'location'}, {'Chicago': 'location', 'Florida': 'location'}], 'prediction': {'Chicago': 'location', 'Florida': 'location'}, 'consistency_score': {'entities': {('Chicago', 'location'): 5, ('Florida', 'location'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Chicago', 'location'): 5, ('Florida', 'location'): 5}, 'avg': 5.0}}
{'idx': '79', 'sentence': 'I jus saw his ass lol RT @BLikeHer Ima get my lil brother wasted tonight .', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: I jus saw his ass lol RT @BLikeHer Ima get my lil brother wasted tonight .\nAnswer: ', 'responses': ['[{"BLikeHer": "person"}]', '[{"BLikeHer": "person"}]', '[{"BLikeHer": "person"}]', '[{"BLikeHer": "person"}]', '[{"BLikeHer": "person"}]'], 'prediction_per_consist': [{'BLikeHer': 'person'}, {'BLikeHer': 'person'}, {'BLikeHer': 'person'}, {'BLikeHer': 'person'}, {'BLikeHer': 'person'}], 'prediction': {'BLikeHer': 'person'}, 'consistency_score': {'entities': {('BLikeHer', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('BLikeHer', 'person'): 5}, 'avg': 5.0}}
{'idx': '80', 'sentence': '@miaturner OOC : Feeling a little volent today , huh ?', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @miaturner OOC : Feeling a little volent today , huh ?\nAnswer: ', 'responses': ['[{"miaturner": "person"}]', '[{"miaturner": "person"}]', '[{"miaturner": "person"}]', '[{"miaturner": "person"}]', '[{"miaturner": "person"}]'], 'prediction_per_consist': [{'miaturner': 'person'}, {'miaturner': 'person'}, {'miaturner': 'person'}, {'miaturner': 'person'}, {'miaturner': 'person'}], 'prediction': {'miaturner': 'person'}, 'consistency_score': {'entities': {('miaturner', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('miaturner', 'person'): 5}, 'avg': 5.0}}
{'idx': '81', 'sentence': '@superanne Can I get a Twitter software to spew random bullshit about airports/coffee/conferences ? Cause that would free up some time .', 'label': "{'Twitter': 'corporation'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @superanne Can I get a Twitter software to spew random bullshit about airports/coffee/conferences ? Cause that would free up some time .\nAnswer: ', 'responses': ['[{"Twitter": "product"}]', '[]', '[{"Twitter": "product"}]', '[{"superanne": "person"}, {"Twitter": "product"}]', '[{"Twitter": "product"}]'], 'prediction_per_consist': [{'Twitter': 'product'}, {}, {'Twitter': 'product'}, {'superanne': 'person', 'Twitter': 'product'}, {'Twitter': 'product'}], 'prediction': {'Twitter': 'product'}, 'consistency_score': {'entities': {('Twitter', 'product'): 4}, 'avg': 4.0}, 'consistency_score_SC_all_ans': {'entities': {('Twitter', 'product'): 4, ('superanne', 'person'): 1}, 'avg': 2.5}}
{'idx': '82', 'sentence': 'RT @m_candelaria : The amazing Follow Friday Train : @Sketchjobs @lollieshopping @philadelphiabn @elainebiss @TableMatters10 @STALKmyPRETT ...', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: RT @m_candelaria : The amazing Follow Friday Train : @Sketchjobs @lollieshopping @philadelphiabn @elainebiss @TableMatters10 @STALKmyPRETT ...\nAnswer: ', 'responses': ['[]', '[{"m_candelaria": "person"}, {"Sketchjobs": "person"}, {"lollieshopping": "person"}, {"philadelphiabn": "person"}, {"elainebiss": "person"}, {"TableMatters10": "person"}, {"STALKmyPRETT": "person"}]', '[{"Sketchjobs": "person"}, {"lollieshopping": "person"}, {"philadelphiabn": "person"}, {"elainebiss": "person"}, {"TableMatters10": "group"}, {"STALKmyPRETT": "group"}]', '[{"m_candelaria": "person"}, {"Sketchjobs": "person"}, {"lollieshopping": "person"}, {"philadelphiabn": "person"}, {"elainebiss": "person"}, {"TableMatters10": "person"}, {"STALKmyPRETT": "person"}]', '[{"Sketchjobs": "person"}, {"lollieshopping": "person"}, {"philadelphiabn": "person"}, {"elainebiss": "person"}, {"TableMatters10": "person"}, {"STALKmyPRETT": "person"}]'], 'prediction_per_consist': [{}, {'m_candelaria': 'person', 'Sketchjobs': 'person', 'lollieshopping': 'person', 'philadelphiabn': 'person', 'elainebiss': 'person', 'TableMatters10': 'person', 'STALKmyPRETT': 'person'}, {'Sketchjobs': 'person', 'lollieshopping': 'person', 'philadelphiabn': 'person', 'elainebiss': 'person', 'TableMatters10': 'group', 'STALKmyPRETT': 'group'}, {'m_candelaria': 'person', 'Sketchjobs': 'person', 'lollieshopping': 'person', 'philadelphiabn': 'person', 'elainebiss': 'person', 'TableMatters10': 'person', 'STALKmyPRETT': 'person'}, {'Sketchjobs': 'person', 'lollieshopping': 'person', 'philadelphiabn': 'person', 'elainebiss': 'person', 'TableMatters10': 'person', 'STALKmyPRETT': 'person'}], 'prediction': {'Sketchjobs': 'person', 'lollieshopping': 'person', 'philadelphiabn': 'person', 'elainebiss': 'person', 'TableMatters10': 'person', 'STALKmyPRETT': 'person'}, 'consistency_score': {'entities': {('Sketchjobs', 'person'): 4, ('lollieshopping', 'person'): 4, ('philadelphiabn', 'person'): 4, ('elainebiss', 'person'): 4, ('TableMatters10', 'person'): 3, ('STALKmyPRETT', 'person'): 3}, 'avg': 3.6666666666666665}, 'consistency_score_SC_all_ans': {'entities': {('m_candelaria', 'person'): 2, ('Sketchjobs', 'person'): 4, ('lollieshopping', 'person'): 4, ('philadelphiabn', 'person'): 4, ('elainebiss', 'person'): 4, ('TableMatters10', 'person'): 3, ('STALKmyPRETT', 'person'): 3, ('TableMatters10', 'group'): 1, ('STALKmyPRETT', 'group'): 1}, 'avg': 2.888888888888889}}
{'idx': '83', 'sentence': '@daraobriain hmmm . Cant wait . Comin on Thursday . First time to the Apollo .', 'label': "{'the Apollo': 'location'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @daraobriain hmmm . Cant wait . Comin on Thursday . First time to the Apollo .\nAnswer: ', 'responses': ['[{"daraobriain": "person"}, {"Apollo": "location"}]', '[{"daraobriain": "person"}, {"Apollo": "location"}]', '[{"daraobriain": "person"}, {"Apollo": "location"}]', '[{"daraobriain": "person"}, {"Apollo": "location"}]', '[{"daraobriain": "person"}, {"Apollo": "location"}]'], 'prediction_per_consist': [{'daraobriain': 'person', 'Apollo': 'location'}, {'daraobriain': 'person', 'Apollo': 'location'}, {'daraobriain': 'person', 'Apollo': 'location'}, {'daraobriain': 'person', 'Apollo': 'location'}, {'daraobriain': 'person', 'Apollo': 'location'}], 'prediction': {'daraobriain': 'person', 'Apollo': 'location'}, 'consistency_score': {'entities': {('daraobriain', 'person'): 5, ('Apollo', 'location'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('daraobriain', 'person'): 5, ('Apollo', 'location'): 5}, 'avg': 5.0}}
{'idx': '84', 'sentence': "John Acuff joined @daveramseys team ! sweet ! I hope Dave gives him his own show one day , but i'm excited for JA and wish him all the best", 'label': "{'John Acuff': 'person', 'Dave': 'person', 'JA': 'person'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: John Acuff joined @daveramseys team ! sweet ! I hope Dave gives him his own show one day , but i\'m excited for JA and wish him all the best\nAnswer: ', 'responses': ['[{"John Acuff": "person"}, {"Dave": "person"}, {"JA": "person"}]', '[{"John Acuff": "person"}, {"Dave Ramsey": "person"}]', '[{"John Acuff": "person"}, {"Dave Ramsey": "person"}]', '[{"John Acuff": "person"}, {"Dave": "person"}, {"JA": "person"}]', '[{"John Acuff": "person"}, {"Dave Ramsey": "person"}, {"JA": "person"}]'], 'prediction_per_consist': [{'John Acuff': 'person', 'Dave': 'person', 'JA': 'person'}, {'John Acuff': 'person', 'Dave Ramsey': 'person'}, {'John Acuff': 'person', 'Dave Ramsey': 'person'}, {'John Acuff': 'person', 'Dave': 'person', 'JA': 'person'}, {'John Acuff': 'person', 'Dave Ramsey': 'person', 'JA': 'person'}], 'prediction': {'John Acuff': 'person', 'JA': 'person', 'Dave Ramsey': 'person'}, 'consistency_score': {'entities': {('John Acuff', 'person'): 5, ('JA', 'person'): 3, ('Dave Ramsey', 'person'): 3}, 'avg': 3.6666666666666665}, 'consistency_score_SC_all_ans': {'entities': {('John Acuff', 'person'): 5, ('Dave', 'person'): 2, ('JA', 'person'): 3, ('Dave Ramsey', 'person'): 3}, 'avg': 3.25}}
{'idx': '85', 'sentence': "@MATHHOFFA @darealjustjuice yo I put that bitch boy in his place the other day . Do n't even waste ya time wit clowns", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @MATHHOFFA @darealjustjuice yo I put that bitch boy in his place the other day . Do n\'t even waste ya time wit clowns\nAnswer: ', 'responses': ['[{"MATHHOFFA": "person"}, {"darealjustjuice": "person"}]', '[{"MATHHOFFA": "person"}, {"darealjustjuice": "person"}]', '[{"MATHHOFFA": "person"}, {"darealjustjuice": "person"}]', '[{"MATHHOFFA": "person"}, {"darealjustjuice": "person"}]', '[{"MATHHOFFA": "person"}, {"darealjustjuice": "person"}]'], 'prediction_per_consist': [{'MATHHOFFA': 'person', 'darealjustjuice': 'person'}, {'MATHHOFFA': 'person', 'darealjustjuice': 'person'}, {'MATHHOFFA': 'person', 'darealjustjuice': 'person'}, {'MATHHOFFA': 'person', 'darealjustjuice': 'person'}, {'MATHHOFFA': 'person', 'darealjustjuice': 'person'}], 'prediction': {'MATHHOFFA': 'person', 'darealjustjuice': 'person'}, 'consistency_score': {'entities': {('MATHHOFFA', 'person'): 5, ('darealjustjuice', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('MATHHOFFA', 'person'): 5, ('darealjustjuice', 'person'): 5}, 'avg': 5.0}}
{'idx': '86', 'sentence': 'Ah , that has seriously made my day . :D @chrisbrown , iloveyousomuch&amp;hearts ;', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Ah , that has seriously made my day . :D @chrisbrown , iloveyousomuch&amp;hearts ;\nAnswer: ', 'responses': ['[{"chrisbrown": "person"}]', '[{"chrisbrown": "person"}]', '[{"chrisbrown": "person"}]', '[{"chrisbrown": "person"}]', '[{"chrisbrown": "person"}]'], 'prediction_per_consist': [{'chrisbrown': 'person'}, {'chrisbrown': 'person'}, {'chrisbrown': 'person'}, {'chrisbrown': 'person'}, {'chrisbrown': 'person'}], 'prediction': {'chrisbrown': 'person'}, 'consistency_score': {'entities': {('chrisbrown', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('chrisbrown', 'person'): 5}, 'avg': 5.0}}
{'idx': '87', 'sentence': '; I can upgrade to a BlackBerry in November !! Yesss . &lt; 3 BB Bold , here I come !', 'label': "{'BlackBerry': 'product', 'BB Bold': 'product'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: ; I can upgrade to a BlackBerry in November !! Yesss . &lt; 3 BB Bold , here I come !\nAnswer: ', 'responses': ['[{"BlackBerry": "product"}, {"BB Bold": "product"}]', '[{"BlackBerry": "product"}, {"BB Bold": "product"}]', '[{"BlackBerry": "product"}, {"BB Bold": "product"}]', '[{"BlackBerry": "product"}, {"BB Bold": "product"}]', '[{"BlackBerry": "product"}, {"BB Bold": "product"}]'], 'prediction_per_consist': [{'BlackBerry': 'product', 'BB Bold': 'product'}, {'BlackBerry': 'product', 'BB Bold': 'product'}, {'BlackBerry': 'product', 'BB Bold': 'product'}, {'BlackBerry': 'product', 'BB Bold': 'product'}, {'BlackBerry': 'product', 'BB Bold': 'product'}], 'prediction': {'BlackBerry': 'product', 'BB Bold': 'product'}, 'consistency_score': {'entities': {('BlackBerry', 'product'): 5, ('BB Bold', 'product'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('BlackBerry', 'product'): 5, ('BB Bold', 'product'): 5}, 'avg': 5.0}}
{'idx': '88', 'sentence': 'In bed watching Day 51 HLs . ( Awaiting Marcus Bentley ! ) #BB11', 'label': "{'Marcus Bentley': 'person', '#BB11': 'creative-work'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: In bed watching Day 51 HLs . ( Awaiting Marcus Bentley ! ) #BB11\nAnswer: ', 'responses': ['[{"Day 51 HLs": "creative-work"}, {"Marcus Bentley": "person"}]', '[{"Marcus Bentley": "person"}]', '[{"Day 51 HLs": "creative-work"}, {"Marcus Bentley": "person"}]', '[{"Marcus Bentley": "person"}]', '[{"Marcus Bentley": "person"}]'], 'prediction_per_consist': [{'Day 51 HLs': 'creative-work', 'Marcus Bentley': 'person'}, {'Marcus Bentley': 'person'}, {'Day 51 HLs': 'creative-work', 'Marcus Bentley': 'person'}, {'Marcus Bentley': 'person'}, {'Marcus Bentley': 'person'}], 'prediction': {'Marcus Bentley': 'person'}, 'consistency_score': {'entities': {('Marcus Bentley', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Day 51 HLs', 'creative-work'): 2, ('Marcus Bentley', 'person'): 5}, 'avg': 3.5}}
{'idx': '89', 'sentence': 'even better than cocktail friday ! http://is.gd/ffDb9', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: even better than cocktail friday ! http://is.gd/ffDb9\nAnswer: ', 'responses': ['[]', '[]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {}, 'avg': 0}}
{'idx': '90', 'sentence': 'YEAH ! No jury duty . Yes class on Monday . still willing to send out study guides to those who send me an email request . sorgelaw@yahoo . com', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: YEAH ! No jury duty . Yes class on Monday . still willing to send out study guides to those who send me an email request . sorgelaw@yahoo . com\nAnswer: ', 'responses': ['[{"sorgelaw@yahoo.com": "person"}]', '[{"sorgelaw@yahoo.com": "corporation"}]', '[{"sorgelaw@yahoo.com": "person"}]', '[{"sorgelaw@yahoo.com": "person"}]', '[]'], 'prediction_per_consist': [{'sorgelaw@yahoo.com': 'person'}, {'sorgelaw@yahoo.com': 'corporation'}, {'sorgelaw@yahoo.com': 'person'}, {'sorgelaw@yahoo.com': 'person'}, {}], 'prediction': {'sorgelaw@yahoo.com': 'person'}, 'consistency_score': {'entities': {('sorgelaw@yahoo.com', 'person'): 3}, 'avg': 3.0}, 'consistency_score_SC_all_ans': {'entities': {('sorgelaw@yahoo.com', 'person'): 3, ('sorgelaw@yahoo.com', 'corporation'): 1}, 'avg': 2.0}}
{'idx': '91', 'sentence': 'Political Wire : Bonus Quote of the Day http://bit.ly/9UiOqY', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Political Wire : Bonus Quote of the Day http://bit.ly/9UiOqY\nAnswer: ', 'responses': ['[{"Political Wire": "creative-work"}]', '[{"Political Wire": "creative-work"}]', '[{"Political Wire": "creative-work"}]', '[{"Political Wire": "creative-work"}]', '[{"Political Wire": "creative-work"}]'], 'prediction_per_consist': [{'Political Wire': 'creative-work'}, {'Political Wire': 'creative-work'}, {'Political Wire': 'creative-work'}, {'Political Wire': 'creative-work'}, {'Political Wire': 'creative-work'}], 'prediction': {'Political Wire': 'creative-work'}, 'consistency_score': {'entities': {('Political Wire', 'creative-work'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Political Wire', 'creative-work'): 5}, 'avg': 5.0}}
{'idx': '92', 'sentence': 'Coach Germano , Albin , Haines and Burrow each had home damage from the storm yesterday , according to @JasonCorriher .', 'label': "{'Coach Germano': 'person', 'Albin': 'person', 'Haines': 'person', 'Burrow': 'person'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Coach Germano , Albin , Haines and Burrow each had home damage from the storm yesterday , according to @JasonCorriher .\nAnswer: ', 'responses': ['[{"Coach Germano": "person"}, {"Albin": "person"}, {"Haines": "person"}, {"Burrow": "person"}, {"JasonCorriher": "person"}]', '[{"Coach Germano": "person"}, {"Albin": "person"}, {"Haines": "person"}, {"Burrow": "person"}, {"JasonCorriher": "person"}]', '[{"Coach Germano": "person"}, {"Albin": "person"}, {"Haines": "person"}, {"Burrow": "person"}, {"JasonCorriher": "person"}]', '[{"Coach Germano": "person"}, {"Albin": "person"}, {"Haines": "person"}, {"Burrow": "person"}, {"JasonCorriher": "person"}]', '[{"Coach Germano": "person"}, {"Albin": "person"}, {"Haines": "person"}, {"Burrow": "person"}, {"JasonCorriher": "person"}]'], 'prediction_per_consist': [{'Coach Germano': 'person', 'Albin': 'person', 'Haines': 'person', 'Burrow': 'person', 'JasonCorriher': 'person'}, {'Coach Germano': 'person', 'Albin': 'person', 'Haines': 'person', 'Burrow': 'person', 'JasonCorriher': 'person'}, {'Coach Germano': 'person', 'Albin': 'person', 'Haines': 'person', 'Burrow': 'person', 'JasonCorriher': 'person'}, {'Coach Germano': 'person', 'Albin': 'person', 'Haines': 'person', 'Burrow': 'person', 'JasonCorriher': 'person'}, {'Coach Germano': 'person', 'Albin': 'person', 'Haines': 'person', 'Burrow': 'person', 'JasonCorriher': 'person'}], 'prediction': {'Coach Germano': 'person', 'Albin': 'person', 'Haines': 'person', 'Burrow': 'person', 'JasonCorriher': 'person'}, 'consistency_score': {'entities': {('Coach Germano', 'person'): 5, ('Albin', 'person'): 5, ('Haines', 'person'): 5, ('Burrow', 'person'): 5, ('JasonCorriher', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Coach Germano', 'person'): 5, ('Albin', 'person'): 5, ('Haines', 'person'): 5, ('Burrow', 'person'): 5, ('JasonCorriher', 'person'): 5}, 'avg': 5.0}}
{'idx': '93', 'sentence': "GUYS IF YOU WNNA BE IN AN AWESOME FAN BOOK . TWEET @JedwardsAngel AND WE'LL SORT IT OUT . WE'VE GOT 15COOOOL IDEAS WHEN WE SEE THEM !: D", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: GUYS IF YOU WNNA BE IN AN AWESOME FAN BOOK . TWEET @JedwardsAngel AND WE\'LL SORT IT OUT . WE\'VE GOT 15COOOOL IDEAS WHEN WE SEE THEM !: D\nAnswer: ', 'responses': ['[{"JedwardsAngel": "person"}]', '[{"JedwardsAngel": "person"}]', '[{"JedwardsAngel": "person"}]', '[{"JedwardsAngel": "person"}]', '[{"JedwardsAngel": "person"}]'], 'prediction_per_consist': [{'JedwardsAngel': 'person'}, {'JedwardsAngel': 'person'}, {'JedwardsAngel': 'person'}, {'JedwardsAngel': 'person'}, {'JedwardsAngel': 'person'}], 'prediction': {'JedwardsAngel': 'person'}, 'consistency_score': {'entities': {('JedwardsAngel', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('JedwardsAngel', 'person'): 5}, 'avg': 5.0}}
{'idx': '94', 'sentence': 'RT @fucking_way : A gente acostumou a escrever I Brought You My Bullets I Brought You Me Your Love , Danger Days :: The True Lives Of The Fa ...', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: RT @fucking_way : A gente acostumou a escrever I Brought You My Bullets I Brought You Me Your Love , Danger Days :: The True Lives Of The Fa ...\nAnswer: ', 'responses': ['[{"I Brought You My Bullets I Brought You Me Your Love": "creative-work"}, {"Danger Days :: The True Lives Of The Fa": "creative-work"}]', '[{"Danger Days :: The True Lives Of The Fa": "creative-work"}]', '[{"I Brought You My Bullets I Brought You Me Your Love": "creative-work"}, {"Danger Days :: The True Lives Of The Fa": "creative-work"}]', '[{"I Brought You My Bullets I Brought You Me Your Love": "creative-work"}, {"Danger Days :: The True Lives Of The Fa": "creative-work"}]', '[{"I Brought You My Bullets I Brought You Me Your Love": "creative-work"}, {"Danger Days :: The True Lives Of The Fa": "creative-work"}]'], 'prediction_per_consist': [{'I Brought You My Bullets I Brought You Me Your Love': 'creative-work', 'Danger Days :: The True Lives Of The Fa': 'creative-work'}, {'Danger Days :: The True Lives Of The Fa': 'creative-work'}, {'I Brought You My Bullets I Brought You Me Your Love': 'creative-work', 'Danger Days :: The True Lives Of The Fa': 'creative-work'}, {'I Brought You My Bullets I Brought You Me Your Love': 'creative-work', 'Danger Days :: The True Lives Of The Fa': 'creative-work'}, {'I Brought You My Bullets I Brought You Me Your Love': 'creative-work', 'Danger Days :: The True Lives Of The Fa': 'creative-work'}], 'prediction': {'I Brought You My Bullets I Brought You Me Your Love': 'creative-work', 'Danger Days :: The True Lives Of The Fa': 'creative-work'}, 'consistency_score': {'entities': {('I Brought You My Bullets I Brought You Me Your Love', 'creative-work'): 4, ('Danger Days :: The True Lives Of The Fa', 'creative-work'): 5}, 'avg': 4.5}, 'consistency_score_SC_all_ans': {'entities': {('I Brought You My Bullets I Brought You Me Your Love', 'creative-work'): 4, ('Danger Days :: The True Lives Of The Fa', 'creative-work'): 5}, 'avg': 4.5}}
{'idx': '95', 'sentence': "Just ordered pizza . First time since May to order Pizza Hut . Definitely not a fave , but Pizza by the Chef doesn't deliver five hours away/", 'label': "{'Pizza Hut': 'corporation'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Just ordered pizza . First time since May to order Pizza Hut . Definitely not a fave , but Pizza by the Chef doesn\'t deliver five hours away/\nAnswer: ', 'responses': ['[{"Pizza Hut": "corporation"}, {"Pizza by the Chef": "product"}]', '[{"Pizza Hut": "corporation"}, {"Pizza by the Chef": "product"}]', '[{"Pizza Hut": "corporation"}, {"Pizza by the Chef": "product"}]', '[{"Pizza Hut": "corporation"}, {"Pizza by the Chef": "product"}]', '[{"Pizza Hut": "corporation"}, {"Pizza by the Chef": "product"}]'], 'prediction_per_consist': [{'Pizza Hut': 'corporation', 'Pizza by the Chef': 'product'}, {'Pizza Hut': 'corporation', 'Pizza by the Chef': 'product'}, {'Pizza Hut': 'corporation', 'Pizza by the Chef': 'product'}, {'Pizza Hut': 'corporation', 'Pizza by the Chef': 'product'}, {'Pizza Hut': 'corporation', 'Pizza by the Chef': 'product'}], 'prediction': {'Pizza Hut': 'corporation', 'Pizza by the Chef': 'product'}, 'consistency_score': {'entities': {('Pizza Hut', 'corporation'): 5, ('Pizza by the Chef', 'product'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Pizza Hut', 'corporation'): 5, ('Pizza by the Chef', 'product'): 5}, 'avg': 5.0}}
{'idx': '96', 'sentence': 'Oct 9 ( happy dance ) RT @MiChY_pEaChY @LiifeSizeDoll wens ur bdayy boo ??!!', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Oct 9 ( happy dance ) RT @MiChY_pEaChY @LiifeSizeDoll wens ur bdayy boo ??!!\nAnswer: ', 'responses': ['[{"MiChY_pEaChY": "person"}, {"LiifeSizeDoll": "person"}]', '[{"MiChY_pEaChY": "person"}, {"LiifeSizeDoll": "person"}]', '[{"MiChY_pEaChY": "person"}, {"LiifeSizeDoll": "person"}]', '[{"MiChY_pEaChY": "person"}, {"LiifeSizeDoll": "person"}]', '[{"MiChY_pEaChY": "person"}, {"LiifeSizeDoll": "person"}]'], 'prediction_per_consist': [{'MiChY_pEaChY': 'person', 'LiifeSizeDoll': 'person'}, {'MiChY_pEaChY': 'person', 'LiifeSizeDoll': 'person'}, {'MiChY_pEaChY': 'person', 'LiifeSizeDoll': 'person'}, {'MiChY_pEaChY': 'person', 'LiifeSizeDoll': 'person'}, {'MiChY_pEaChY': 'person', 'LiifeSizeDoll': 'person'}], 'prediction': {'MiChY_pEaChY': 'person', 'LiifeSizeDoll': 'person'}, 'consistency_score': {'entities': {('MiChY_pEaChY', 'person'): 5, ('LiifeSizeDoll', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('MiChY_pEaChY', 'person'): 5, ('LiifeSizeDoll', 'person'): 5}, 'avg': 5.0}}
{'idx': '97', 'sentence': '@swavelbean13 :D How was your day ? :)', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @swavelbean13 :D How was your day ? :)\nAnswer: ', 'responses': ['[]', '[]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {}, 'avg': 0}}
{'idx': '98', 'sentence': "Beginners Guides to Blogging and Twitter : Two amazing products from Mike 's Life . The 60 day Beginner 's Guide to Bl ... http://bit.ly/99wlho", 'label': "{'Twitter': 'corporation', 'Mike': 'person'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Beginners Guides to Blogging and Twitter : Two amazing products from Mike \'s Life . The 60 day Beginner \'s Guide to Bl ... http://bit.ly/99wlho\nAnswer: ', 'responses': ['[{"Mike\'s Life": "person"}]', '[{"Mike": "person"}, {"60 day Beginner\'s Guide": "product"}]', '[{"Mike\'s Life": "person"}]', '[{"Mike \'s Life": "person"}, {"60 day Beginner \'s Guide": "product"}]', '[{"Mike": "person"}, {"60 day Beginner\'s Guide": "product"}]'], 'prediction_per_consist': [{"Mike's Life": 'person'}, {'Mike': 'person', "60 day Beginner's Guide": 'product'}, {"Mike's Life": 'person'}, {"Mike 's Life": 'person', "60 day Beginner 's Guide": 'product'}, {'Mike': 'person', "60 day Beginner's Guide": 'product'}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {("Mike's Life", 'person'): 2, ('Mike', 'person'): 2, ("60 day Beginner's Guide", 'product'): 2, ("Mike 's Life", 'person'): 1, ("60 day Beginner 's Guide", 'product'): 1}, 'avg': 1.6}}
{'idx': '99', 'sentence': 'Don Mattingly will replace Joe Torre as LA Dodgers manager after this season', 'label': "{'Don Mattingly': 'person', 'Joe Torre': 'person', 'LA Dodgers': 'group'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Don Mattingly will replace Joe Torre as LA Dodgers manager after this season\nAnswer: ', 'responses': ['[{"Don Mattingly": "person"}, {"Joe Torre": "person"}, {"LA Dodgers": "corporation"}]', '[{"Don Mattingly": "person"}, {"Joe Torre": "person"}, {"LA Dodgers": "group"}]', '[{"Don Mattingly": "person"}, {"Joe Torre": "person"}, {"LA Dodgers": "group"}]', '[{"Don Mattingly": "person"}, {"Joe Torre": "person"}, {"LA Dodgers": "group"}]', '[{"Don Mattingly": "person"}, {"Joe Torre": "person"}, {"LA Dodgers": "group"}]'], 'prediction_per_consist': [{'Don Mattingly': 'person', 'Joe Torre': 'person', 'LA Dodgers': 'corporation'}, {'Don Mattingly': 'person', 'Joe Torre': 'person', 'LA Dodgers': 'group'}, {'Don Mattingly': 'person', 'Joe Torre': 'person', 'LA Dodgers': 'group'}, {'Don Mattingly': 'person', 'Joe Torre': 'person', 'LA Dodgers': 'group'}, {'Don Mattingly': 'person', 'Joe Torre': 'person', 'LA Dodgers': 'group'}], 'prediction': {'Don Mattingly': 'person', 'Joe Torre': 'person', 'LA Dodgers': 'group'}, 'consistency_score': {'entities': {('Don Mattingly', 'person'): 5, ('Joe Torre', 'person'): 5, ('LA Dodgers', 'group'): 4}, 'avg': 4.666666666666667}, 'consistency_score_SC_all_ans': {'entities': {('Don Mattingly', 'person'): 5, ('Joe Torre', 'person'): 5, ('LA Dodgers', 'corporation'): 1, ('LA Dodgers', 'group'): 4}, 'avg': 3.75}}
{'idx': '100', 'sentence': '@BEE_LYNN_BAYBEE Funniest shit of the day " Im officially blown . Dont wanna to talk about it " lls', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @BEE_LYNN_BAYBEE Funniest shit of the day " Im officially blown . Dont wanna to talk about it " lls\nAnswer: ', 'responses': ['[{"BEE_LYNN_BAYBEE": "person"}]', '[{"BEE_LYNN_BAYBEE": "person"}]', '[{"BEE_LYNN_BAYBEE": "person"}]', '[{"BEE_LYNN_BAYBEE": "person"}]', '[{"BEE_LYNN_BAYBEE": "person"}]'], 'prediction_per_consist': [{'BEE_LYNN_BAYBEE': 'person'}, {'BEE_LYNN_BAYBEE': 'person'}, {'BEE_LYNN_BAYBEE': 'person'}, {'BEE_LYNN_BAYBEE': 'person'}, {'BEE_LYNN_BAYBEE': 'person'}], 'prediction': {'BEE_LYNN_BAYBEE': 'person'}, 'consistency_score': {'entities': {('BEE_LYNN_BAYBEE', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('BEE_LYNN_BAYBEE', 'person'): 5}, 'avg': 5.0}}
{'idx': '101', 'sentence': 'Google Music Rumors : Labels Happy About iTunes Alternative ? - Techland - TIME . com http://bit.ly/a4kSfV', 'label': "{'Google Music': 'product', 'iTunes': 'corporation', 'Techland': 'corporation'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Google Music Rumors : Labels Happy About iTunes Alternative ? - Techland - TIME . com http://bit.ly/a4kSfV\nAnswer: ', 'responses': ['[{"Google Music": "corporation"}, {"iTunes": "product"}, {"Techland": "group"}, {"TIME": "corporation"}]', '[{"Google Music": "corporation"}, {"iTunes": "product"}, {"Techland - TIME": "group"}]', '[{"Google Music": "corporation"}, {"iTunes": "product"}, {"Techland": "group"}, {"TIME": "group"}]', '[{"Google Music": "corporation"}, {"iTunes": "product"}, {"Techland": "group"}, {"TIME": "creative-work"}]', '[{"Google Music": "corporation"}, {"iTunes": "product"}, {"Techland": "group"}, {"TIME": "group"}]'], 'prediction_per_consist': [{'Google Music': 'corporation', 'iTunes': 'product', 'Techland': 'group', 'TIME': 'corporation'}, {'Google Music': 'corporation', 'iTunes': 'product', 'Techland - TIME': 'group'}, {'Google Music': 'corporation', 'iTunes': 'product', 'Techland': 'group', 'TIME': 'group'}, {'Google Music': 'corporation', 'iTunes': 'product', 'Techland': 'group', 'TIME': 'creative-work'}, {'Google Music': 'corporation', 'iTunes': 'product', 'Techland': 'group', 'TIME': 'group'}], 'prediction': {'Google Music': 'corporation', 'iTunes': 'product', 'Techland': 'group', 'TIME': 'group'}, 'consistency_score': {'entities': {('Google Music', 'corporation'): 5, ('iTunes', 'product'): 5, ('Techland', 'group'): 4, ('TIME', 'group'): 2}, 'avg': 4.0}, 'consistency_score_SC_all_ans': {'entities': {('Google Music', 'corporation'): 5, ('iTunes', 'product'): 5, ('Techland', 'group'): 4, ('TIME', 'corporation'): 1, ('Techland - TIME', 'group'): 1, ('TIME', 'group'): 2, ('TIME', 'creative-work'): 1}, 'avg': 2.7142857142857144}}
{'idx': '102', 'sentence': 'i hate when i dont have any change for the customers ..', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: i hate when i dont have any change for the customers ..\nAnswer: ', 'responses': ['[]', '[]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {}, 'avg': 0}}
{'idx': '103', 'sentence': "I'm mad coach d want me to go to workouts at 9am tomorrow and I can't even play", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: I\'m mad coach d want me to go to workouts at 9am tomorrow and I can\'t even play\nAnswer: ', 'responses': ['[{"coach d": "person"}]', '[{"coach d": "person"}]', '[{"coach d": "person"}]', '[{"coach d": "person"}]', '[{"coach d": "person"}]'], 'prediction_per_consist': [{'coach d': 'person'}, {'coach d': 'person'}, {'coach d': 'person'}, {'coach d': 'person'}, {'coach d': 'person'}], 'prediction': {'coach d': 'person'}, 'consistency_score': {'entities': {('coach d', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('coach d', 'person'): 5}, 'avg': 5.0}}
{'idx': '104', 'sentence': "I'm shattered !! I'm looking forward to having a nice long lay in , in the morning :D", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: I\'m shattered !! I\'m looking forward to having a nice long lay in , in the morning :D\nAnswer: ', 'responses': ['[]', '[]', '[]', '[{"morning": "time"}]', '[{"morning": "time"}]'], 'prediction_per_consist': [{}, {}, {}, {'morning': 'time'}, {'morning': 'time'}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {('morning', 'time'): 2}, 'avg': 2.0}}
{'idx': '105', 'sentence': '@RotaryCarClub r you driving this time ?', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @RotaryCarClub r you driving this time ?\nAnswer: ', 'responses': ['[]', '[]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {}, 'avg': 0}}
{'idx': '106', 'sentence': "If Conn is less than impressed with chevre , he has a loyal ally in his grandscruffy , who finds it great when it 's good -- which is rarely .", 'label': "{'Conn': 'person'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: If Conn is less than impressed with chevre , he has a loyal ally in his grandscruffy , who finds it great when it \'s good -- which is rarely .\nAnswer: ', 'responses': ['[{"Conn": "person"}, {"chevre": "product"}, {"grandscruffy": "person"}]', '[{"Conn": "person"}, {"chevre": "product"}, {"grandscruffy": "person"}]', '[{"Conn": "person"}, {"chevre": "product"}, {"grandscruffy": "person"}]', '[{"Conn": "person"}, {"chevre": "product"}, {"grandscruffy": "person"}]', '[{"Conn": "person"}, {"chevre": "product"}, {"grandscruffy": "person"}]'], 'prediction_per_consist': [{'Conn': 'person', 'chevre': 'product', 'grandscruffy': 'person'}, {'Conn': 'person', 'chevre': 'product', 'grandscruffy': 'person'}, {'Conn': 'person', 'chevre': 'product', 'grandscruffy': 'person'}, {'Conn': 'person', 'chevre': 'product', 'grandscruffy': 'person'}, {'Conn': 'person', 'chevre': 'product', 'grandscruffy': 'person'}], 'prediction': {'Conn': 'person', 'chevre': 'product', 'grandscruffy': 'person'}, 'consistency_score': {'entities': {('Conn', 'person'): 5, ('chevre', 'product'): 5, ('grandscruffy', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Conn', 'person'): 5, ('chevre', 'product'): 5, ('grandscruffy', 'person'): 5}, 'avg': 5.0}}
{'idx': '107', 'sentence': 'Dollar steady versus yen but market wary of intervention | Money ...: The dollar held near its highest in a month ... http://bit.ly/a0F3dO', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Dollar steady versus yen but market wary of intervention | Money ...: The dollar held near its highest in a month ... http://bit.ly/a0F3dO\nAnswer: ', 'responses': ['[{"Dollar": "corporation"}]', '[{"Dollar": "corporation"}]', '[{"Dollar": "corporation"}]', '[{"Dollar": "corporation"}]', '[{"Dollar": "corporation"}]'], 'prediction_per_consist': [{'Dollar': 'corporation'}, {'Dollar': 'corporation'}, {'Dollar': 'corporation'}, {'Dollar': 'corporation'}, {'Dollar': 'corporation'}], 'prediction': {'Dollar': 'corporation'}, 'consistency_score': {'entities': {('Dollar', 'corporation'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Dollar', 'corporation'): 5}, 'avg': 5.0}}
{'idx': '108', 'sentence': 'When glass breaks , the cracks move faster than 3,000 miles per hour . To photograph it , a camera must shoot at a millionth of a second !', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: When glass breaks , the cracks move faster than 3,000 miles per hour . To photograph it , a camera must shoot at a millionth of a second !\nAnswer: ', 'responses': ['[]', '[{"glass": "product"}, {"camera": "product"}]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {'glass': 'product', 'camera': 'product'}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {('glass', 'product'): 1, ('camera', 'product'): 1}, 'avg': 1.0}}
{'idx': '109', 'sentence': '@EimearJedward auditioning on sunday :) xo', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @EimearJedward auditioning on sunday :) xo\nAnswer: ', 'responses': ['[{"EimearJedward": "person"}]', '[{"EimearJedward": "person"}]', '[{"EimearJedward": "person"}]', '[{"EimearJedward": "person"}]', '[{"EimearJedward": "person"}]'], 'prediction_per_consist': [{'EimearJedward': 'person'}, {'EimearJedward': 'person'}, {'EimearJedward': 'person'}, {'EimearJedward': 'person'}, {'EimearJedward': 'person'}], 'prediction': {'EimearJedward': 'person'}, 'consistency_score': {'entities': {('EimearJedward', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('EimearJedward', 'person'): 5}, 'avg': 5.0}}
{'idx': '110', 'sentence': 'RT @geriatricus : May we all reflect on the workings of our hearts , and in our acts , with our Jewish friends and loved ones at the cusp o ...', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: RT @geriatricus : May we all reflect on the workings of our hearts , and in our acts , with our Jewish friends and loved ones at the cusp o ...\nAnswer: ', 'responses': ['[{"geriatricus": "person"}, {"Jewish": "group"}]', '[]', '[{"Jewish": "group"}]', '[{"geriatricus": "person"}, {"Jewish": "group"}]', '[{"geriatricus": "person"}, {"Jewish": "group"}]'], 'prediction_per_consist': [{'geriatricus': 'person', 'Jewish': 'group'}, {}, {'Jewish': 'group'}, {'geriatricus': 'person', 'Jewish': 'group'}, {'geriatricus': 'person', 'Jewish': 'group'}], 'prediction': {'geriatricus': 'person', 'Jewish': 'group'}, 'consistency_score': {'entities': {('geriatricus', 'person'): 3, ('Jewish', 'group'): 4}, 'avg': 3.5}, 'consistency_score_SC_all_ans': {'entities': {('geriatricus', 'person'): 3, ('Jewish', 'group'): 4}, 'avg': 3.5}}
{'idx': '111', 'sentence': "Soo Glad its Finally Friday ! Thiss week went to slow fo'me:/", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Soo Glad its Finally Friday ! Thiss week went to slow fo\'me:/\nAnswer: ', 'responses': ['[]', '[{"Friday": "creative-work"}]', '[]', '[]', '[{"Friday": "creative-work"}]'], 'prediction_per_consist': [{}, {'Friday': 'creative-work'}, {}, {}, {'Friday': 'creative-work'}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {('Friday', 'creative-work'): 2}, 'avg': 2.0}}
{'idx': '112', 'sentence': '@thevoiceoverguy 9 days then Sydney', 'label': "{'Sydney': 'location'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @thevoiceoverguy 9 days then Sydney\nAnswer: ', 'responses': ['[{"Sydney": "location"}]', '[{"Sydney": "location"}]', '[{"Sydney": "location"}]', '[{"Sydney": "location"}]', '[{"Sydney": "location"}]'], 'prediction_per_consist': [{'Sydney': 'location'}, {'Sydney': 'location'}, {'Sydney': 'location'}, {'Sydney': 'location'}, {'Sydney': 'location'}], 'prediction': {'Sydney': 'location'}, 'consistency_score': {'entities': {('Sydney', 'location'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Sydney', 'location'): 5}, 'avg': 5.0}}
{'idx': '113', 'sentence': 'to all my girls in london or travelling up tomorrow i love and miss you wish i could be there ! NEXT YEAR I WILL !', 'label': "{'london': 'location'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: to all my girls in london or travelling up tomorrow i love and miss you wish i could be there ! NEXT YEAR I WILL !\nAnswer: ', 'responses': ['[{"London": "location"}]', '[{"London": "location"}]', '[{"London": "location"}]', '[{"London": "location"}]', '[{"London": "location"}]'], 'prediction_per_consist': [{'London': 'location'}, {'London': 'location'}, {'London': 'location'}, {'London': 'location'}, {'London': 'location'}], 'prediction': {'London': 'location'}, 'consistency_score': {'entities': {('London', 'location'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('London', 'location'): 5}, 'avg': 5.0}}
{'idx': '114', 'sentence': 'You gotta let em lick it before they stick it', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: You gotta let em lick it before they stick it\nAnswer: ', 'responses': ['[]', '[]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {}, 'avg': 0}}
{'idx': '115', 'sentence': 'Pedigree Donates Dog Food for Blog Posts : These days , big brands usually look to the big social networks like Face ... http://bit.ly/bYWzrq', 'label': "{'Pedigree': 'corporation'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Pedigree Donates Dog Food for Blog Posts : These days , big brands usually look to the big social networks like Face ... http://bit.ly/bYWzrq\nAnswer: ', 'responses': ['[{"Pedigree": "corporation"}, {"Dog Food": "product"}, {"Blog Posts": "creative-work"}, {"Face": "group"}]', '[{"Pedigree": "corporation"}, {"Dog Food": "product"}]', '[{"Pedigree": "corporation"}, {"Dog Food": "product"}, {"Blog Posts": "creative-work"}, {"Face": "group"}]', '[{"Pedigree": "corporation"}]', '[{"Pedigree": "corporation"}]'], 'prediction_per_consist': [{'Pedigree': 'corporation', 'Dog Food': 'product', 'Blog Posts': 'creative-work', 'Face': 'group'}, {'Pedigree': 'corporation', 'Dog Food': 'product'}, {'Pedigree': 'corporation', 'Dog Food': 'product', 'Blog Posts': 'creative-work', 'Face': 'group'}, {'Pedigree': 'corporation'}, {'Pedigree': 'corporation'}], 'prediction': {'Pedigree': 'corporation', 'Dog Food': 'product'}, 'consistency_score': {'entities': {('Pedigree', 'corporation'): 5, ('Dog Food', 'product'): 3}, 'avg': 4.0}, 'consistency_score_SC_all_ans': {'entities': {('Pedigree', 'corporation'): 5, ('Dog Food', 'product'): 3, ('Blog Posts', 'creative-work'): 2, ('Face', 'group'): 2}, 'avg': 3.0}}
{'idx': '116', 'sentence': '@Dishfunctional yeah . big time dancer . i might worship her a bit', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @Dishfunctional yeah . big time dancer . i might worship her a bit\nAnswer: ', 'responses': ['[{"Dishfunctional": "person"}]', '[{"Dishfunctional": "person"}]', '[{"Dishfunctional": "person"}]', '[{"Dishfunctional": "person"}]', '[{"Dishfunctional": "person"}]'], 'prediction_per_consist': [{'Dishfunctional': 'person'}, {'Dishfunctional': 'person'}, {'Dishfunctional': 'person'}, {'Dishfunctional': 'person'}, {'Dishfunctional': 'person'}], 'prediction': {'Dishfunctional': 'person'}, 'consistency_score': {'entities': {('Dishfunctional', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Dishfunctional', 'person'): 5}, 'avg': 5.0}}
{'idx': '117', 'sentence': 'two auditions in one day , it&amp;#39 ; s almost as if I am a real actor', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: two auditions in one day , it&amp;#39 ; s almost as if I am a real actor\nAnswer: ', 'responses': ['[]', '[{"auditions": "group"}, {"actor": "person"}]', '[]', '[]', '[{"actor": "person"}]'], 'prediction_per_consist': [{}, {'auditions': 'group', 'actor': 'person'}, {}, {}, {'actor': 'person'}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {('auditions', 'group'): 1, ('actor', 'person'): 2}, 'avg': 1.5}}
{'idx': '118', 'sentence': "http://yfrog.com/n6cdhzj Just picked my dog up from his posh day spa . Actually he can't run under vet orders . He swims here occasionally", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: http://yfrog.com/n6cdhzj Just picked my dog up from his posh day spa . Actually he can\'t run under vet orders . He swims here occasionally\nAnswer: ', 'responses': ['[{"posh day spa": "location"}]', '[{"dog": "animal"}]', '[{"dog": "product"}, {"vet": "corporation"}]', '[{"dog": "group"}]', '[{"dog": "animal"}]'], 'prediction_per_consist': [{'posh day spa': 'location'}, {'dog': 'animal'}, {'dog': 'product', 'vet': 'corporation'}, {'dog': 'group'}, {'dog': 'animal'}], 'prediction': {'dog': 'animal'}, 'consistency_score': {'entities': {('dog', 'animal'): 2}, 'avg': 2.0}, 'consistency_score_SC_all_ans': {'entities': {('posh day spa', 'location'): 1, ('dog', 'animal'): 2, ('dog', 'product'): 1, ('vet', 'corporation'): 1, ('dog', 'group'): 1}, 'avg': 1.2}}
{'idx': '119', 'sentence': 'Why hate on somebody for doing well when you can simply say great job and move on .. [Haters u can kill yourself ] cuz ur losers', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Why hate on somebody for doing well when you can simply say great job and move on .. [Haters u can kill yourself ] cuz ur losers\nAnswer: ', 'responses': ['[{"Haters": "group"}]', '[{"Haters": "group"}]', '[{"Haters": "group"}]', '[{"Haters": "group"}]', '[{"Haters": "group"}]'], 'prediction_per_consist': [{'Haters': 'group'}, {'Haters': 'group'}, {'Haters': 'group'}, {'Haters': 'group'}, {'Haters': 'group'}], 'prediction': {'Haters': 'group'}, 'consistency_score': {'entities': {('Haters', 'group'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Haters', 'group'): 5}, 'avg': 5.0}}
{'idx': '120', 'sentence': 'Vanilla vodka infusion is done . Two weeks from now so will the apple :)', 'label': "{'Vanilla vodka': 'product'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Vanilla vodka infusion is done . Two weeks from now so will the apple :)\nAnswer: ', 'responses': ['[{"Vanilla vodka infusion": "product"}, {"apple": "product"}]', '[{"Vanilla vodka infusion": "product"}, {"apple": "product"}]', '[{"Vanilla vodka infusion": "product"}, {"apple": "product"}]', '[{"Vanilla vodka infusion": "product"}, {"apple": "product"}]', '[{"Vanilla vodka infusion": "product"}, {"apple": "product"}]'], 'prediction_per_consist': [{'Vanilla vodka infusion': 'product', 'apple': 'product'}, {'Vanilla vodka infusion': 'product', 'apple': 'product'}, {'Vanilla vodka infusion': 'product', 'apple': 'product'}, {'Vanilla vodka infusion': 'product', 'apple': 'product'}, {'Vanilla vodka infusion': 'product', 'apple': 'product'}], 'prediction': {'Vanilla vodka infusion': 'product', 'apple': 'product'}, 'consistency_score': {'entities': {('Vanilla vodka infusion', 'product'): 5, ('apple', 'product'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Vanilla vodka infusion', 'product'): 5, ('apple', 'product'): 5}, 'avg': 5.0}}
{'idx': '121', 'sentence': '#Offline For along time ... maybe not until tomorrow', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: #Offline For along time ... maybe not until tomorrow\nAnswer: ', 'responses': ['[]', '[]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {}, 'avg': 0}}
{'idx': '122', 'sentence': 'Friday Night Eats http://twitpic.com/2pdvtr', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Friday Night Eats http://twitpic.com/2pdvtr\nAnswer: ', 'responses': ['[{"Friday Night Eats": "creative-work"}]', '[{"Friday Night Eats": "creative-work"}]', '[{"Friday Night Eats": "creative-work"}]', '[{"Friday Night Eats": "creative-work"}]', '[{"Friday Night Eats": "creative-work"}]'], 'prediction_per_consist': [{'Friday Night Eats': 'creative-work'}, {'Friday Night Eats': 'creative-work'}, {'Friday Night Eats': 'creative-work'}, {'Friday Night Eats': 'creative-work'}, {'Friday Night Eats': 'creative-work'}], 'prediction': {'Friday Night Eats': 'creative-work'}, 'consistency_score': {'entities': {('Friday Night Eats', 'creative-work'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Friday Night Eats', 'creative-work'): 5}, 'avg': 5.0}}
{'idx': '123', 'sentence': 'ohh right ... im an actor ... back to work tonight WOOT', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: ohh right ... im an actor ... back to work tonight WOOT\nAnswer: ', 'responses': ['[{"actor": "person"}]', '[{"actor": "person"}]', '[{"actor": "person"}]', '[{"actor": "person"}]', '[{"actor": "person"}]'], 'prediction_per_consist': [{'actor': 'person'}, {'actor': 'person'}, {'actor': 'person'}, {'actor': 'person'}, {'actor': 'person'}], 'prediction': {'actor': 'person'}, 'consistency_score': {'entities': {('actor', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('actor', 'person'): 5}, 'avg': 5.0}}
{'idx': '124', 'sentence': 'RT @TeamVA : 81 Days Till Last Sacrifice', 'label': "{'Last Sacrifice': 'creative-work'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: RT @TeamVA : 81 Days Till Last Sacrifice\nAnswer: ', 'responses': ['[{"Last Sacrifice": "creative-work"}]', '[{"Last Sacrifice": "creative-work"}]', '[]', '[{"Last Sacrifice": "creative-work"}]', '[{"Last Sacrifice": "creative-work"}]'], 'prediction_per_consist': [{'Last Sacrifice': 'creative-work'}, {'Last Sacrifice': 'creative-work'}, {}, {'Last Sacrifice': 'creative-work'}, {'Last Sacrifice': 'creative-work'}], 'prediction': {'Last Sacrifice': 'creative-work'}, 'consistency_score': {'entities': {('Last Sacrifice', 'creative-work'): 4}, 'avg': 4.0}, 'consistency_score_SC_all_ans': {'entities': {('Last Sacrifice', 'creative-work'): 4}, 'avg': 4.0}}
{'idx': '125', 'sentence': "What should you do when you're sued . Here are a few tips . http://www.calitigationblog.com/2010/09/articles/what-to-do-when-you-are-sued/", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: What should you do when you\'re sued . Here are a few tips . http://www.calitigationblog.com/2010/09/articles/what-to-do-when-you-are-sued/\nAnswer: ', 'responses': ['[]', '[]', '[{"www.calitigationblog.com": "location"}]', '[{"http://www.calitigationblog.com/2010/09/articles/what-to-do-when-you-are-sued/": "creative-work"}]', '[{"http://www.calitigationblog.com/2010/09/articles/what-to-do-when-you-are-sued/": "creative-work"}]'], 'prediction_per_consist': [{}, {}, {'www.calitigationblog.com': 'location'}, {'http://www.calitigationblog.com/2010/09/articles/what-to-do-when-you-are-sued/': 'creative-work'}, {'http://www.calitigationblog.com/2010/09/articles/what-to-do-when-you-are-sued/': 'creative-work'}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {('www.calitigationblog.com', 'location'): 1, ('http://www.calitigationblog.com/2010/09/articles/what-to-do-when-you-are-sued/', 'creative-work'): 2}, 'avg': 1.5}}
{'idx': '126', 'sentence': '@ImBieberGuy If you would die tomorrow what would you do on your last day here on earth ahaha ? What a dramatic question :p', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @ImBieberGuy If you would die tomorrow what would you do on your last day here on earth ahaha ? What a dramatic question :p\nAnswer: ', 'responses': ['[{"ImBieberGuy": "person"}]', '[{"ImBieberGuy": "person"}]', '[{"ImBieberGuy": "person"}]', '[{"ImBieberGuy": "person"}]', '[{"ImBieberGuy": "person"}]'], 'prediction_per_consist': [{'ImBieberGuy': 'person'}, {'ImBieberGuy': 'person'}, {'ImBieberGuy': 'person'}, {'ImBieberGuy': 'person'}, {'ImBieberGuy': 'person'}], 'prediction': {'ImBieberGuy': 'person'}, 'consistency_score': {'entities': {('ImBieberGuy', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('ImBieberGuy', 'person'): 5}, 'avg': 5.0}}
{'idx': '127', 'sentence': 'heheRT @yuuuiee : @nissawaww LOL RT MirLes : jamanSD kalo nyabutin uban bokap dpt 100 perak satu uban ... eh , i tweeted this before ! Dejavu :-p', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: heheRT @yuuuiee : @nissawaww LOL RT MirLes : jamanSD kalo nyabutin uban bokap dpt 100 perak satu uban ... eh , i tweeted this before ! Dejavu :-p\nAnswer: ', 'responses': ['[]', '[]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {}, 'avg': 0}}
{'idx': '128', 'sentence': 'RT @Teacher_Spirit : know this today . no thing will ever come upon you and overtake you . the love of Jesus Christ will overtake it . He is ...', 'label': "{'Jesus Christ': 'person'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: RT @Teacher_Spirit : know this today . no thing will ever come upon you and overtake you . the love of Jesus Christ will overtake it . He is ...\nAnswer: ', 'responses': ['[]', '[]', '[]', '[]', '[{"Jesus Christ": "person"}]'], 'prediction_per_consist': [{}, {}, {}, {}, {'Jesus Christ': 'person'}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {('Jesus Christ', 'person'): 1}, 'avg': 1.0}}
{'idx': '129', 'sentence': "Chevron gouging consumers by claiming payments are late when in reality statement delivery is very poor turnaround time . charging hefty fee 's", 'label': "{'Chevron': 'corporation'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Chevron gouging consumers by claiming payments are late when in reality statement delivery is very poor turnaround time . charging hefty fee \'s\nAnswer: ', 'responses': ['[{"Chevron": "corporation"}]', '[{"Chevron": "corporation"}]', '[{"Chevron": "corporation"}]', '[{"Chevron": "corporation"}]', '[{"Chevron": "corporation"}]'], 'prediction_per_consist': [{'Chevron': 'corporation'}, {'Chevron': 'corporation'}, {'Chevron': 'corporation'}, {'Chevron': 'corporation'}, {'Chevron': 'corporation'}], 'prediction': {'Chevron': 'corporation'}, 'consistency_score': {'entities': {('Chevron', 'corporation'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Chevron', 'corporation'): 5}, 'avg': 5.0}}
{'idx': '130', 'sentence': '@irishhooligan or the best is just walking along the road when a clump of it just appears to be waiting in front of you all that time #icky', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @irishhooligan or the best is just walking along the road when a clump of it just appears to be waiting in front of you all that time #icky\nAnswer: ', 'responses': ['[]', '[]', '[]', '[{"IrishHooligan": "person"}]', '[]'], 'prediction_per_consist': [{}, {}, {}, {'IrishHooligan': 'person'}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {('IrishHooligan', 'person'): 1}, 'avg': 1.0}}
{'idx': '131', 'sentence': "@evarley Yes , thanks . We're more traumatised than he is ... ;) I hate A&amp;E &lt; shudders &gt; Now it 's time to catch up with the day ...", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @evarley Yes , thanks . We\'re more traumatised than he is ... ;) I hate A&amp;E &lt; shudders &gt; Now it \'s time to catch up with the day ...\nAnswer: ', 'responses': ['[{"A&E": "corporation"}]', '[{"evarley": "person"}, {"A&E": "corporation"}]', '[]', '[{"A&E": "corporation"}]', '[{"A&E": "corporation"}]'], 'prediction_per_consist': [{'A&E': 'corporation'}, {'evarley': 'person', 'A&E': 'corporation'}, {}, {'A&E': 'corporation'}, {'A&E': 'corporation'}], 'prediction': {'A&E': 'corporation'}, 'consistency_score': {'entities': {('A&E', 'corporation'): 4}, 'avg': 4.0}, 'consistency_score_SC_all_ans': {'entities': {('A&E', 'corporation'): 4, ('evarley', 'person'): 1}, 'avg': 2.5}}
{'idx': '132', 'sentence': '@Cuddle_Factory will send again tomorrow honey too', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @Cuddle_Factory will send again tomorrow honey too\nAnswer: ', 'responses': ['[{"Cuddle_Factory": "group"}]', '[{"Cuddle_Factory": "group"}]', '[{"Cuddle_Factory": "group"}]', '[{"Cuddle_Factory": "group"}]', '[{"Cuddle_Factory": "group"}]'], 'prediction_per_consist': [{'Cuddle_Factory': 'group'}, {'Cuddle_Factory': 'group'}, {'Cuddle_Factory': 'group'}, {'Cuddle_Factory': 'group'}, {'Cuddle_Factory': 'group'}], 'prediction': {'Cuddle_Factory': 'group'}, 'consistency_score': {'entities': {('Cuddle_Factory', 'group'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Cuddle_Factory', 'group'): 5}, 'avg': 5.0}}
{'idx': '133', 'sentence': "Every time I watch Donnie Hathaway 's Unsung I just get speechless in amazement . He would be sooooo proud of his children if he were alive", 'label': "{'Donnie Hathaway': 'person', 'Unsung': 'creative-work'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Every time I watch Donnie Hathaway \'s Unsung I just get speechless in amazement . He would be sooooo proud of his children if he were alive\nAnswer: ', 'responses': ['[{"Donnie Hathaway": "person"}, {"Unsung": "creative-work"}]', '[{"Donnie Hathaway": "person"}, {"Unsung": "creative-work"}]', '[{"Donnie Hathaway": "person"}, {"Unsung": "creative-work"}]', '[{"Donnie Hathaway": "person"}, {"Unsung": "creative-work"}]', '[{"Donnie Hathaway": "person"}, {"Unsung": "creative-work"}]'], 'prediction_per_consist': [{'Donnie Hathaway': 'person', 'Unsung': 'creative-work'}, {'Donnie Hathaway': 'person', 'Unsung': 'creative-work'}, {'Donnie Hathaway': 'person', 'Unsung': 'creative-work'}, {'Donnie Hathaway': 'person', 'Unsung': 'creative-work'}, {'Donnie Hathaway': 'person', 'Unsung': 'creative-work'}], 'prediction': {'Donnie Hathaway': 'person', 'Unsung': 'creative-work'}, 'consistency_score': {'entities': {('Donnie Hathaway', 'person'): 5, ('Unsung', 'creative-work'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Donnie Hathaway', 'person'): 5, ('Unsung', 'creative-work'): 5}, 'avg': 5.0}}
{'idx': '134', 'sentence': 'LADY GAGA IS BETTER THE 5th TIME OH BABY( :', 'label': "{'LADY GAGA': 'person'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: LADY GAGA IS BETTER THE 5th TIME OH BABY( :\nAnswer: ', 'responses': ['[{"LADY GAGA": "person"}]', '[{"LADY GAGA": "person"}]', '[{"LADY GAGA": "person"}]', '[{"LADY GAGA": "person"}]', '[{"LADY GAGA": "person"}]'], 'prediction_per_consist': [{'LADY GAGA': 'person'}, {'LADY GAGA': 'person'}, {'LADY GAGA': 'person'}, {'LADY GAGA': 'person'}, {'LADY GAGA': 'person'}], 'prediction': {'LADY GAGA': 'person'}, 'consistency_score': {'entities': {('LADY GAGA', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('LADY GAGA', 'person'): 5}, 'avg': 5.0}}
{'idx': '135', 'sentence': '@iDame2Please yea u c da pic 1st Presbyterian all day lol', 'label': "{'1st Presbyterian': 'group'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @iDame2Please yea u c da pic 1st Presbyterian all day lol\nAnswer: ', 'responses': ['[{"Presbyterian": "location"}]', '[{"1st Presbyterian": "location"}]', '[{"Presbyterian": "group"}]', '[{"Presbyterian": "group"}]', '[{"Presbyterian": "group"}]'], 'prediction_per_consist': [{'Presbyterian': 'location'}, {'1st Presbyterian': 'location'}, {'Presbyterian': 'group'}, {'Presbyterian': 'group'}, {'Presbyterian': 'group'}], 'prediction': {'Presbyterian': 'group'}, 'consistency_score': {'entities': {('Presbyterian', 'group'): 3}, 'avg': 3.0}, 'consistency_score_SC_all_ans': {'entities': {('Presbyterian', 'location'): 1, ('1st Presbyterian', 'location'): 1, ('Presbyterian', 'group'): 3}, 'avg': 1.6666666666666667}}
{'idx': '136', 'sentence': "@JazzLuvsJedward Yeah tomorrow 's grand ( : = yeah just email me cause I never go on msn ! I'll dm you &lt; 3", 'label': "{'msn': 'corporation'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @JazzLuvsJedward Yeah tomorrow \'s grand ( : = yeah just email me cause I never go on msn ! I\'ll dm you &lt; 3\nAnswer: ', 'responses': ['[{"JazzLuvsJedward": "person"}]', '[{"JazzLuvsJedward": "person"}]', '[{"JazzLuvsJedward": "person"}]', '[{"JazzLuvsJedward": "person"}]', '[{"JazzLuvsJedward": "person"}]'], 'prediction_per_consist': [{'JazzLuvsJedward': 'person'}, {'JazzLuvsJedward': 'person'}, {'JazzLuvsJedward': 'person'}, {'JazzLuvsJedward': 'person'}, {'JazzLuvsJedward': 'person'}], 'prediction': {'JazzLuvsJedward': 'person'}, 'consistency_score': {'entities': {('JazzLuvsJedward', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('JazzLuvsJedward', 'person'): 5}, 'avg': 5.0}}
{'idx': '137', 'sentence': "Adam Beyer : Swedish Techno Pioneer : When it comes to his own DJing and sound , he 's slightly more diverse and likes ... http://bit.ly/c1E0I1", 'label': "{'Adam Beyer': 'person'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Adam Beyer : Swedish Techno Pioneer : When it comes to his own DJing and sound , he \'s slightly more diverse and likes ... http://bit.ly/c1E0I1\nAnswer: ', 'responses': ['[{"Adam Beyer": "person"}]', '[{"Adam Beyer": "person"}]', '[{"Adam Beyer": "person"}, {"Swedish Techno Pioneer": "creative-work"}]', '[{"Adam Beyer": "person"}]', '[{"Adam Beyer": "person"}, {"Swedish Techno Pioneer": "group"}]'], 'prediction_per_consist': [{'Adam Beyer': 'person'}, {'Adam Beyer': 'person'}, {'Adam Beyer': 'person', 'Swedish Techno Pioneer': 'creative-work'}, {'Adam Beyer': 'person'}, {'Adam Beyer': 'person', 'Swedish Techno Pioneer': 'group'}], 'prediction': {'Adam Beyer': 'person'}, 'consistency_score': {'entities': {('Adam Beyer', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Adam Beyer', 'person'): 5, ('Swedish Techno Pioneer', 'creative-work'): 1, ('Swedish Techno Pioneer', 'group'): 1}, 'avg': 2.3333333333333335}}
{'idx': '138', 'sentence': "After work I'm breaking glass against my house and then doing yoga .", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: After work I\'m breaking glass against my house and then doing yoga .\nAnswer: ', 'responses': ['[]', '[]', '[]', '[]', '[{"yoga": "creative-work"}]'], 'prediction_per_consist': [{}, {}, {}, {}, {'yoga': 'creative-work'}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {('yoga', 'creative-work'): 1}, 'avg': 1.0}}
{'idx': '139', 'sentence': '@aplusk http://www.youtube.com/watch?v=eLMui7zBiXo we beat kilkenny after they beat us for the last 4 years in the hurling . Woo !!!', 'label': "{'kilkenny': 'location'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @aplusk http://www.youtube.com/watch?v=eLMui7zBiXo we beat kilkenny after they beat us for the last 4 years in the hurling . Woo !!!\nAnswer: ', 'responses': ['[{"kilkenny": "location"}]', '[{"aplusk": "person"}, {"kilkenny": "location"}]', '[{"kilkenny": "location"}]', '[{"kilkenny": "location"}]', '[{"kilkenny": "location"}]'], 'prediction_per_consist': [{'kilkenny': 'location'}, {'aplusk': 'person', 'kilkenny': 'location'}, {'kilkenny': 'location'}, {'kilkenny': 'location'}, {'kilkenny': 'location'}], 'prediction': {'kilkenny': 'location'}, 'consistency_score': {'entities': {('kilkenny', 'location'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('kilkenny', 'location'): 5, ('aplusk', 'person'): 1}, 'avg': 3.0}}
{'idx': '140', 'sentence': 'Shot with a Jaybilizer today ... my teacher designed this , totally sweet ! http://jaybilizer.com/products/jaybilizer-hdslr/', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Shot with a Jaybilizer today ... my teacher designed this , totally sweet ! http://jaybilizer.com/products/jaybilizer-hdslr/\nAnswer: ', 'responses': ['[{"Jaybilizer": "corporation"}, {"Jaybilizer HDSLR": "product"}]', '[{"Jaybilizer": "corporation"}, {"Jaybilizer HDSLR": "product"}]', '[{"Jaybilizer": "corporation"}, {"Jaybilizer HDSLR": "product"}]', '[{"Jaybilizer": "corporation"}, {"Jaybilizer HDSLR": "product"}]', '[{"Jaybilizer": "corporation"}, {"Jaybilizer HDSLR": "product"}]'], 'prediction_per_consist': [{'Jaybilizer': 'corporation', 'Jaybilizer HDSLR': 'product'}, {'Jaybilizer': 'corporation', 'Jaybilizer HDSLR': 'product'}, {'Jaybilizer': 'corporation', 'Jaybilizer HDSLR': 'product'}, {'Jaybilizer': 'corporation', 'Jaybilizer HDSLR': 'product'}, {'Jaybilizer': 'corporation', 'Jaybilizer HDSLR': 'product'}], 'prediction': {'Jaybilizer': 'corporation', 'Jaybilizer HDSLR': 'product'}, 'consistency_score': {'entities': {('Jaybilizer', 'corporation'): 5, ('Jaybilizer HDSLR', 'product'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Jaybilizer', 'corporation'): 5, ('Jaybilizer HDSLR', 'product'): 5}, 'avg': 5.0}}
{'idx': '141', 'sentence': "3 an a half days then I'm on HOLIDAY oh yes can't wait ;-) ;-) ;-)", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: 3 an a half days then I\'m on HOLIDAY oh yes can\'t wait ;-) ;-) ;-)\nAnswer: ', 'responses': ['[{"HOLIDAY": "creative-work"}]', '[{"HOLIDAY": "creative-work"}]', '[{"HOLIDAY": "creative-work"}]', '[{"HOLIDAY": "creative-work"}]', '[{"HOLIDAY": "creative-work"}]'], 'prediction_per_consist': [{'HOLIDAY': 'creative-work'}, {'HOLIDAY': 'creative-work'}, {'HOLIDAY': 'creative-work'}, {'HOLIDAY': 'creative-work'}, {'HOLIDAY': 'creative-work'}], 'prediction': {'HOLIDAY': 'creative-work'}, 'consistency_score': {'entities': {('HOLIDAY', 'creative-work'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('HOLIDAY', 'creative-work'): 5}, 'avg': 5.0}}
{'idx': '142', 'sentence': 'RT if you think that @justinbieber is sexy but at the same time very talented &lt; 3', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: RT if you think that @justinbieber is sexy but at the same time very talented &lt; 3\nAnswer: ', 'responses': ['[{"justinbieber": "person"}]', '[{"justinbieber": "person"}]', '[{"justinbieber": "person"}]', '[{"justinbieber": "person"}]', '[{"justinbieber": "person"}]'], 'prediction_per_consist': [{'justinbieber': 'person'}, {'justinbieber': 'person'}, {'justinbieber': 'person'}, {'justinbieber': 'person'}, {'justinbieber': 'person'}], 'prediction': {'justinbieber': 'person'}, 'consistency_score': {'entities': {('justinbieber', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('justinbieber', 'person'): 5}, 'avg': 5.0}}
{'idx': '143', 'sentence': "@Kianerzzz showering sleeping and tanning always make me feel better when I'm sick .", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @Kianerzzz showering sleeping and tanning always make me feel better when I\'m sick .\nAnswer: ', 'responses': ['[{"Kianerzzz": "person"}]', '[{"Kianerzzz": "person"}]', '[{"Kianerzzz": "person"}]', '[{"Kianerzzz": "person"}]', '[{"Kianerzzz": "person"}]'], 'prediction_per_consist': [{'Kianerzzz': 'person'}, {'Kianerzzz': 'person'}, {'Kianerzzz': 'person'}, {'Kianerzzz': 'person'}, {'Kianerzzz': 'person'}], 'prediction': {'Kianerzzz': 'person'}, 'consistency_score': {'entities': {('Kianerzzz', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Kianerzzz', 'person'): 5}, 'avg': 5.0}}
{'idx': '144', 'sentence': "RT @WeScreamAlex : LET'S ALL GET WASTED TONIGHT OK ?", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: RT @WeScreamAlex : LET\'S ALL GET WASTED TONIGHT OK ?\nAnswer: ', 'responses': ['[]', '[]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {}, 'avg': 0}}
{'idx': '145', 'sentence': 'For women the best aphrodisiacs are words . The G-spot is in the ears . He who looks for it below there is wasting his time .', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: For women the best aphrodisiacs are words . The G-spot is in the ears . He who looks for it below there is wasting his time .\nAnswer: ', 'responses': ['[{"G-spot": "location"}]', '[]', '[{"G-spot": "location"}]', '[{"G-spot": "location"}]', '[{"G-spot": "location"}]'], 'prediction_per_consist': [{'G-spot': 'location'}, {}, {'G-spot': 'location'}, {'G-spot': 'location'}, {'G-spot': 'location'}], 'prediction': {'G-spot': 'location'}, 'consistency_score': {'entities': {('G-spot', 'location'): 4}, 'avg': 4.0}, 'consistency_score_SC_all_ans': {'entities': {('G-spot', 'location'): 4}, 'avg': 4.0}}
{'idx': '146', 'sentence': "@endlesskies ik me 2 . At night I 'm wide awake but the daytime , I 'm so tired my day drags", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @endlesskies ik me 2 . At night I \'m wide awake but the daytime , I \'m so tired my day drags\nAnswer: ', 'responses': ['[]', '[{"endlesskies": "person"}]', '[{"endlesskies": "person"}]', '[{"endlesskies": "person"}]', '[{"endlesskies": "person"}]'], 'prediction_per_consist': [{}, {'endlesskies': 'person'}, {'endlesskies': 'person'}, {'endlesskies': 'person'}, {'endlesskies': 'person'}], 'prediction': {'endlesskies': 'person'}, 'consistency_score': {'entities': {('endlesskies', 'person'): 4}, 'avg': 4.0}, 'consistency_score_SC_all_ans': {'entities': {('endlesskies', 'person'): 4}, 'avg': 4.0}}
{'idx': '147', 'sentence': 'The only problem with taxing ur car online is its no fun not paying anything for a 5litre car when its a classic :)', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: The only problem with taxing ur car online is its no fun not paying anything for a 5litre car when its a classic :)\nAnswer: ', 'responses': ['[]', '[]', '[{"5litre car": "product"}, {"classic": "creative-work"}]', '[{"5litre car": "product"}]', '[{"car": "product"}, {"classic": "creative-work"}]'], 'prediction_per_consist': [{}, {}, {'5litre car': 'product', 'classic': 'creative-work'}, {'5litre car': 'product'}, {'car': 'product', 'classic': 'creative-work'}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {('5litre car', 'product'): 2, ('classic', 'creative-work'): 2, ('car', 'product'): 1}, 'avg': 1.6666666666666667}}
{'idx': '148', 'sentence': '@valovanity hahah . Speaking of , when are you planning the savannah trip ? Like , budgeting it out and whatnot .', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @valovanity hahah . Speaking of , when are you planning the savannah trip ? Like , budgeting it out and whatnot .\nAnswer: ', 'responses': ['[{"valovanity": "person"}, {"savannah": "location"}]', '[{"valovanity": "person"}, {"savannah": "location"}]', '[]', '[{"valovanity": "person"}, {"savannah": "location"}]', '[{"valovanity": "person"}, {"savannah": "location"}]'], 'prediction_per_consist': [{'valovanity': 'person', 'savannah': 'location'}, {'valovanity': 'person', 'savannah': 'location'}, {}, {'valovanity': 'person', 'savannah': 'location'}, {'valovanity': 'person', 'savannah': 'location'}], 'prediction': {'valovanity': 'person', 'savannah': 'location'}, 'consistency_score': {'entities': {('valovanity', 'person'): 4, ('savannah', 'location'): 4}, 'avg': 4.0}, 'consistency_score_SC_all_ans': {'entities': {('valovanity', 'person'): 4, ('savannah', 'location'): 4}, 'avg': 4.0}}
{'idx': '149', 'sentence': '@Yeweezii Jst lock her outside 4 d nite . It workz al d time :-D', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @Yeweezii Jst lock her outside 4 d nite . It workz al d time :-D\nAnswer: ', 'responses': ['[{"Yeweezii": "person"}]', '[{"Yeweezii": "person"}]', '[{"Yeweezii": "person"}]', '[{"Yeweezii": "person"}]', '[{"Yeweezii": "person"}]'], 'prediction_per_consist': [{'Yeweezii': 'person'}, {'Yeweezii': 'person'}, {'Yeweezii': 'person'}, {'Yeweezii': 'person'}, {'Yeweezii': 'person'}], 'prediction': {'Yeweezii': 'person'}, 'consistency_score': {'entities': {('Yeweezii', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Yeweezii', 'person'): 5}, 'avg': 5.0}}
{'idx': '150', 'sentence': '@NiccoleG when you coming to grandma house ?', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @NiccoleG when you coming to grandma house ?\nAnswer: ', 'responses': ['[{"NiccoleG": "person"}]', '[{"NiccoleG": "person"}]', '[{"NiccoleG": "person"}]', '[{"NiccoleG": "person"}]', '[{"NiccoleG": "person"}]'], 'prediction_per_consist': [{'NiccoleG': 'person'}, {'NiccoleG': 'person'}, {'NiccoleG': 'person'}, {'NiccoleG': 'person'}, {'NiccoleG': 'person'}], 'prediction': {'NiccoleG': 'person'}, 'consistency_score': {'entities': {('NiccoleG', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('NiccoleG', 'person'): 5}, 'avg': 5.0}}
{'idx': '151', 'sentence': "Im ' performing tonight at 8 Bond Street in Soho . If your in the city , hit me up , and then swing through around 10ish !", 'label': "{'Soho': 'location'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Im \' performing tonight at 8 Bond Street in Soho . If your in the city , hit me up , and then swing through around 10ish !\nAnswer: ', 'responses': ['[{"Bond Street": "location"}, {"Soho": "location"}]', '[{"Bond Street": "location"}, {"Soho": "location"}]', '[{"Bond Street": "location"}, {"Soho": "location"}]', '[{"Bond Street": "location"}, {"Soho": "location"}]', '[{"Bond Street": "location"}, {"Soho": "location"}]'], 'prediction_per_consist': [{'Bond Street': 'location', 'Soho': 'location'}, {'Bond Street': 'location', 'Soho': 'location'}, {'Bond Street': 'location', 'Soho': 'location'}, {'Bond Street': 'location', 'Soho': 'location'}, {'Bond Street': 'location', 'Soho': 'location'}], 'prediction': {'Bond Street': 'location', 'Soho': 'location'}, 'consistency_score': {'entities': {('Bond Street', 'location'): 5, ('Soho', 'location'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Bond Street', 'location'): 5, ('Soho', 'location'): 5}, 'avg': 5.0}}
{'idx': '152', 'sentence': 'Ok off to bed BUT WHEN I WAKE UP I BETTER HAVE WON A T-SHIRT', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Ok off to bed BUT WHEN I WAKE UP I BETTER HAVE WON A T-SHIRT\nAnswer: ', 'responses': ['[{"T-SHIRT": "product"}]', '[{"T-SHIRT": "product"}]', '[{"T-SHIRT": "product"}]', '[{"T-SHIRT": "product"}]', '[{"T-SHIRT": "product"}]'], 'prediction_per_consist': [{'T-SHIRT': 'product'}, {'T-SHIRT': 'product'}, {'T-SHIRT': 'product'}, {'T-SHIRT': 'product'}, {'T-SHIRT': 'product'}], 'prediction': {'T-SHIRT': 'product'}, 'consistency_score': {'entities': {('T-SHIRT', 'product'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('T-SHIRT', 'product'): 5}, 'avg': 5.0}}
{'idx': '153', 'sentence': '@stefaniwashburn Me too ! I always get so full with chips and salsa before my entree comes ? I like the Verde salsa the best !', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @stefaniwashburn Me too ! I always get so full with chips and salsa before my entree comes ? I like the Verde salsa the best !\nAnswer: ', 'responses': ['[{"stefaniwashburn": "person"}, {"Verde salsa": "product"}]', '[{"stefaniwashburn": "person"}, {"Verde salsa": "product"}]', '[{"stefaniwashburn": "person"}, {"Verde salsa": "product"}]', '[{"stefaniwashburn": "person"}, {"Verde salsa": "product"}]', '[{"stefaniwashburn": "person"}, {"Verde salsa": "product"}]'], 'prediction_per_consist': [{'stefaniwashburn': 'person', 'Verde salsa': 'product'}, {'stefaniwashburn': 'person', 'Verde salsa': 'product'}, {'stefaniwashburn': 'person', 'Verde salsa': 'product'}, {'stefaniwashburn': 'person', 'Verde salsa': 'product'}, {'stefaniwashburn': 'person', 'Verde salsa': 'product'}], 'prediction': {'stefaniwashburn': 'person', 'Verde salsa': 'product'}, 'consistency_score': {'entities': {('stefaniwashburn', 'person'): 5, ('Verde salsa', 'product'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('stefaniwashburn', 'person'): 5, ('Verde salsa', 'product'): 5}, 'avg': 5.0}}
{'idx': '154', 'sentence': 'i just woke up from the worst nap eva .. arggghhh ! now its time for work .. double arggghhh !!', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: i just woke up from the worst nap eva .. arggghhh ! now its time for work .. double arggghhh !!\nAnswer: ', 'responses': ['[]', '[]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {}, 'avg': 0}}
{'idx': '155', 'sentence': '@26Promo YOU CAN DO IT ! Just start with one task at a time .', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @26Promo YOU CAN DO IT ! Just start with one task at a time .\nAnswer: ', 'responses': ['[]', '[]', '[{"26Promo": "person"}]', '[]', '[]'], 'prediction_per_consist': [{}, {}, {'26Promo': 'person'}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {('26Promo', 'person'): 1}, 'avg': 1.0}}
{'idx': '156', 'sentence': 'Right arm Rousseff , Erenice War , 51 years , became chief minister of the Civil House in April this year', 'label': "{'Rousseff': 'person', 'Erenice War': 'person', 'Civil House': 'group'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Right arm Rousseff , Erenice War , 51 years , became chief minister of the Civil House in April this year\nAnswer: ', 'responses': ['[{"Rousseff": "person"}, {"Erenice War": "person"}]', '[{"Rousseff": "person"}, {"Erenice War": "person"}]', '[{"Rousseff": "person"}, {"Erenice War": "person"}]', '[{"Rousseff": "person"}, {"Erenice War": "person"}]', '[{"Rousseff": "person"}, {"Erenice War": "person"}]'], 'prediction_per_consist': [{'Rousseff': 'person', 'Erenice War': 'person'}, {'Rousseff': 'person', 'Erenice War': 'person'}, {'Rousseff': 'person', 'Erenice War': 'person'}, {'Rousseff': 'person', 'Erenice War': 'person'}, {'Rousseff': 'person', 'Erenice War': 'person'}], 'prediction': {'Rousseff': 'person', 'Erenice War': 'person'}, 'consistency_score': {'entities': {('Rousseff', 'person'): 5, ('Erenice War', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Rousseff', 'person'): 5, ('Erenice War', 'person'): 5}, 'avg': 5.0}}
{'idx': '157', 'sentence': 'Any 1 know when season 3 True Blood is back on the telly ?', 'label': "{'True Blood': 'creative-work'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Any 1 know when season 3 True Blood is back on the telly ?\nAnswer: ', 'responses': ['[]', '[{"True Blood": "creative-work"}]', '[{"True Blood": "creative-work"}]', '[]', '[{"True Blood": "creative-work"}]'], 'prediction_per_consist': [{}, {'True Blood': 'creative-work'}, {'True Blood': 'creative-work'}, {}, {'True Blood': 'creative-work'}], 'prediction': {'True Blood': 'creative-work'}, 'consistency_score': {'entities': {('True Blood', 'creative-work'): 3}, 'avg': 3.0}, 'consistency_score_SC_all_ans': {'entities': {('True Blood', 'creative-work'): 3}, 'avg': 3.0}}
{'idx': '158', 'sentence': "Balloon glowing ? We'd love to see you before or after at Pi ! CWE and Delmar are around the corner , Kirkwood &amp; ... http://fb.me/I6SZ52nW", 'label': "{'Pi': 'location', 'CWE': 'location', 'Delmar': 'location', 'Kirkwood': 'location'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Balloon glowing ? We\'d love to see you before or after at Pi ! CWE and Delmar are around the corner , Kirkwood &amp; ... http://fb.me/I6SZ52nW\nAnswer: ', 'responses': ['[{"Pi": "location"}, {"CWE": "group"}, {"Delmar": "location"}, {"Kirkwood": "location"}]', '[{"Pi": "location"}, {"CWE": "location"}, {"Delmar": "location"}, {"Kirkwood": "location"}]', '[{"Pi": "location"}, {"CWE": "location"}, {"Delmar": "location"}, {"Kirkwood": "location"}]', '[{"Pi": "location"}, {"CWE": "group"}, {"Delmar": "location"}, {"Kirkwood": "location"}]', '[{"Pi": "location"}, {"CWE": "group"}, {"Delmar": "location"}, {"Kirkwood": "location"}]'], 'prediction_per_consist': [{'Pi': 'location', 'CWE': 'group', 'Delmar': 'location', 'Kirkwood': 'location'}, {'Pi': 'location', 'CWE': 'location', 'Delmar': 'location', 'Kirkwood': 'location'}, {'Pi': 'location', 'CWE': 'location', 'Delmar': 'location', 'Kirkwood': 'location'}, {'Pi': 'location', 'CWE': 'group', 'Delmar': 'location', 'Kirkwood': 'location'}, {'Pi': 'location', 'CWE': 'group', 'Delmar': 'location', 'Kirkwood': 'location'}], 'prediction': {'Pi': 'location', 'CWE': 'group', 'Delmar': 'location', 'Kirkwood': 'location'}, 'consistency_score': {'entities': {('Pi', 'location'): 5, ('CWE', 'group'): 3, ('Delmar', 'location'): 5, ('Kirkwood', 'location'): 5}, 'avg': 4.5}, 'consistency_score_SC_all_ans': {'entities': {('Pi', 'location'): 5, ('CWE', 'group'): 3, ('Delmar', 'location'): 5, ('Kirkwood', 'location'): 5, ('CWE', 'location'): 2}, 'avg': 4.0}}
{'idx': '159', 'sentence': "RT @MATTHARDYBRAND : Thx to everyone who wished my Dad , &quot; The Legend &quot; a Happy 88th B-Day just a couple days ago .. He 's my inspiration &amp; me ...", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: RT @MATTHARDYBRAND : Thx to everyone who wished my Dad , &quot; The Legend &quot; a Happy 88th B-Day just a couple days ago .. He \'s my inspiration &amp; me ...\nAnswer: ', 'responses': ['[{"MATTHARDYBRAND": "person"}]', '[{"MATTHARDYBRAND": "person"}]', '[{"MATTHARDYBRAND": "person"}]', '[{"MATTHARDYBRAND": "person"}]', '[{"MATTHARDYBRAND": "person"}]'], 'prediction_per_consist': [{'MATTHARDYBRAND': 'person'}, {'MATTHARDYBRAND': 'person'}, {'MATTHARDYBRAND': 'person'}, {'MATTHARDYBRAND': 'person'}, {'MATTHARDYBRAND': 'person'}], 'prediction': {'MATTHARDYBRAND': 'person'}, 'consistency_score': {'entities': {('MATTHARDYBRAND', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('MATTHARDYBRAND', 'person'): 5}, 'avg': 5.0}}
{'idx': '160', 'sentence': 'http://sk.mu/aEnsGunwfr9 : Above&amp;Beyond - Trance Around The World 338 ( Wippenberg Guestmix ) ( 17 September 2010 ) #Trance #Trancefamily #TATW', 'label': "{'Trance Around The World 338': 'creative-work', 'Wippenberg': 'group', 'Guestmix': 'creative-work'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: http://sk.mu/aEnsGunwfr9 : Above&amp;Beyond - Trance Around The World 338 ( Wippenberg Guestmix ) ( 17 September 2010 ) #Trance #Trancefamily #TATW\nAnswer: ', 'responses': ['[{"Above&amp;Beyond": "group"}, {"Wippenberg": "person"}, {"Trance Around The World 338": "creative-work"}, {"Trancefamily": "group"}, {"TATW": "group"}]', '[{"Above&Beyond": "group"}, {"Wippenberg": "person"}, {"Trance Around The World 338": "creative-work"}, {"Trance": "product"}, {"Trancefamily": "group"}, {"TATW": "group"}]', '[{"Above&Beyond": "group"}, {"Wippenberg": "person"}, {"Trance Around The World 338": "creative-work"}, {"Trance": "product"}]', '[{"Above&amp;Beyond": "group"}, {"Trance Around The World 338": "creative-work"}, {"Wippenberg": "person"}, {"17 September 2010": "creative-work"}]', '[{"Above&Beyond": "group"}, {"Wippenberg": "person"}, {"Trance Around The World 338": "creative-work"}, {"Trance": "creative-work"}, {"TATW": "creative-work"}]'], 'prediction_per_consist': [{'Above&amp;Beyond': 'group', 'Wippenberg': 'person', 'Trance Around The World 338': 'creative-work', 'Trancefamily': 'group', 'TATW': 'group'}, {'Above&Beyond': 'group', 'Wippenberg': 'person', 'Trance Around The World 338': 'creative-work', 'Trance': 'product', 'Trancefamily': 'group', 'TATW': 'group'}, {'Above&Beyond': 'group', 'Wippenberg': 'person', 'Trance Around The World 338': 'creative-work', 'Trance': 'product'}, {'Above&amp;Beyond': 'group', 'Trance Around The World 338': 'creative-work', 'Wippenberg': 'person', '17 September 2010': 'creative-work'}, {'Above&Beyond': 'group', 'Wippenberg': 'person', 'Trance Around The World 338': 'creative-work', 'Trance': 'creative-work', 'TATW': 'creative-work'}], 'prediction': {'Wippenberg': 'person', 'Trance Around The World 338': 'creative-work', 'TATW': 'group', 'Above&Beyond': 'group', 'Trance': 'product'}, 'consistency_score': {'entities': {('Wippenberg', 'person'): 5, ('Trance Around The World 338', 'creative-work'): 5, ('TATW', 'group'): 2, ('Above&Beyond', 'group'): 3, ('Trance', 'product'): 2}, 'avg': 3.4}, 'consistency_score_SC_all_ans': {'entities': {('Above&amp;Beyond', 'group'): 2, ('Wippenberg', 'person'): 5, ('Trance Around The World 338', 'creative-work'): 5, ('Trancefamily', 'group'): 2, ('TATW', 'group'): 2, ('Above&Beyond', 'group'): 3, ('Trance', 'product'): 2, ('17 September 2010', 'creative-work'): 1, ('Trance', 'creative-work'): 1, ('TATW', 'creative-work'): 1}, 'avg': 2.4}}
{'idx': '161', 'sentence': 'Band hall . Game time . Lets get it .', 'label': "{'Band hall': 'location'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Band hall . Game time . Lets get it .\nAnswer: ', 'responses': ['[{"Band hall": "location"}]', '[{"Band hall": "group"}, {"Game time": "creative-work"}]', '[]', '[{"Band hall": "location"}]', '[{"Band hall": "location"}]'], 'prediction_per_consist': [{'Band hall': 'location'}, {'Band hall': 'group', 'Game time': 'creative-work'}, {}, {'Band hall': 'location'}, {'Band hall': 'location'}], 'prediction': {'Band hall': 'location'}, 'consistency_score': {'entities': {('Band hall', 'location'): 3}, 'avg': 3.0}, 'consistency_score_SC_all_ans': {'entities': {('Band hall', 'location'): 3, ('Band hall', 'group'): 1, ('Game time', 'creative-work'): 1}, 'avg': 1.6666666666666667}}
{'idx': '162', 'sentence': 'Damn . Is he in town tonite ?', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Damn . Is he in town tonite ?\nAnswer: ', 'responses': ['[{"tonite": "location"}]', '[]', '[{}]', '[{"town": "location"}]', '[]'], 'prediction_per_consist': [{'tonite': 'location'}, {}, {}, {'town': 'location'}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {('tonite', 'location'): 1, ('town', 'location'): 1}, 'avg': 1.0}}
{'idx': '163', 'sentence': '#blackholidays " National forget the he say she say ... what do God say day "', 'label': "{'God': 'person'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: #blackholidays " National forget the he say she say ... what do God say day "\nAnswer: ', 'responses': ['[{"National": "creative-work"}]', '[{"God": "person"}]', '[]', '[{"National": "creative-work"}, {"God": "person"}]', '[{"National": "creative-work"}]'], 'prediction_per_consist': [{'National': 'creative-work'}, {'God': 'person'}, {}, {'National': 'creative-work', 'God': 'person'}, {'National': 'creative-work'}], 'prediction': {'National': 'creative-work'}, 'consistency_score': {'entities': {('National', 'creative-work'): 3}, 'avg': 3.0}, 'consistency_score_SC_all_ans': {'entities': {('National', 'creative-work'): 3, ('God', 'person'): 2}, 'avg': 2.5}}
{'idx': '164', 'sentence': "I hope the weeks keep flying . It 's actually fantastic the way none of the days dragged this week .... like NONE . :D", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: I hope the weeks keep flying . It \'s actually fantastic the way none of the days dragged this week .... like NONE . :D\nAnswer: ', 'responses': ['[]', '[]', '[]', '[].', '[]'], 'prediction_per_consist': [{}, {}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {}, 'avg': 0}}
{'idx': '165', 'sentence': "When you judge another you don't define them , you define yourself . ~Wayne Dyer", 'label': "{'~Wayne Dyer': 'person'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: When you judge another you don\'t define them , you define yourself . ~Wayne Dyer\nAnswer: ', 'responses': ['[{"Wayne Dyer": "person"}]', '[{"Wayne Dyer": "person"}]', '[{"Wayne Dyer": "person"}]', '[{"Wayne Dyer": "person"}]', '[]'], 'prediction_per_consist': [{'Wayne Dyer': 'person'}, {'Wayne Dyer': 'person'}, {'Wayne Dyer': 'person'}, {'Wayne Dyer': 'person'}, {}], 'prediction': {'Wayne Dyer': 'person'}, 'consistency_score': {'entities': {('Wayne Dyer', 'person'): 4}, 'avg': 4.0}, 'consistency_score_SC_all_ans': {'entities': {('Wayne Dyer', 'person'): 4}, 'avg': 4.0}}
{'idx': '166', 'sentence': 'Five Bullpens to Stay Away From in MLB Odds : When you think of the worst teams in baseball , you think of teams tha ... http://bit.ly/9R73CK', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Five Bullpens to Stay Away From in MLB Odds : When you think of the worst teams in baseball , you think of teams tha ... http://bit.ly/9R73CK\nAnswer: ', 'responses': ['[]', '[{"MLB Odds": "group"}]', '[{"MLB Odds": "group"}, {"baseball": "group"}]', '[{"MLB Odds": "group"}]', '[{"MLB": "group"}]'], 'prediction_per_consist': [{}, {'MLB Odds': 'group'}, {'MLB Odds': 'group', 'baseball': 'group'}, {'MLB Odds': 'group'}, {'MLB': 'group'}], 'prediction': {'MLB Odds': 'group'}, 'consistency_score': {'entities': {('MLB Odds', 'group'): 3}, 'avg': 3.0}, 'consistency_score_SC_all_ans': {'entities': {('MLB Odds', 'group'): 3, ('baseball', 'group'): 1, ('MLB', 'group'): 1}, 'avg': 1.6666666666666667}}
{'idx': '167', 'sentence': "Thank you so very much EVERYONE for the lovely Friday Follows today - you are all too lovely :) Sorry I've not had time to reciprocate xXx", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Thank you so very much EVERYONE for the lovely Friday Follows today - you are all too lovely :) Sorry I\'ve not had time to reciprocate xXx\nAnswer: ', 'responses': ['[{"Friday Follows": "group"}]', '[{"Friday Follows": "creative-work"}]', '[{"Friday Follows": "creative-work"}]', '[{"Friday Follows": "creative-work"}]', '[{"Friday Follows": "creative-work"}]'], 'prediction_per_consist': [{'Friday Follows': 'group'}, {'Friday Follows': 'creative-work'}, {'Friday Follows': 'creative-work'}, {'Friday Follows': 'creative-work'}, {'Friday Follows': 'creative-work'}], 'prediction': {'Friday Follows': 'creative-work'}, 'consistency_score': {'entities': {('Friday Follows', 'creative-work'): 4}, 'avg': 4.0}, 'consistency_score_SC_all_ans': {'entities': {('Friday Follows', 'group'): 1, ('Friday Follows', 'creative-work'): 4}, 'avg': 2.5}}
{'idx': '168', 'sentence': "@morgancharlie mmm deffo one of ' those ' thought provoking days :/ Never mind , onwards &amp; upwards we shall go !!", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @morgancharlie mmm deffo one of \' those \' thought provoking days :/ Never mind , onwards &amp; upwards we shall go !!\nAnswer: ', 'responses': ['[{"morgancharlie": "person"}]', '[{"morgancharlie": "person"}]', '[{"morgancharlie": "person"}]', '[{"morgancharlie": "person"}]', '[{"morgancharlie": "person"}]'], 'prediction_per_consist': [{'morgancharlie': 'person'}, {'morgancharlie': 'person'}, {'morgancharlie': 'person'}, {'morgancharlie': 'person'}, {'morgancharlie': 'person'}], 'prediction': {'morgancharlie': 'person'}, 'consistency_score': {'entities': {('morgancharlie', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('morgancharlie', 'person'): 5}, 'avg': 5.0}}
{'idx': '169', 'sentence': "@AishaHanii2 @starflower1204 Ahhh okay . I've never ordered a CD before so I have NO idea . just say I NEED IT TO GET THROUGH THE WEEKEND !! xD", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @AishaHanii2 @starflower1204 Ahhh okay . I\'ve never ordered a CD before so I have NO idea . just say I NEED IT TO GET THROUGH THE WEEKEND !! xD\nAnswer: ', 'responses': ['[{"AishaHanii2": "person"}, {"starflower1204": "person"}, {"CD": "product"}]', '[{"AishaHanii2": "person"}, {"starflower1204": "person"}]', '[{"AishaHanii2": "person"}, {"starflower1204": "person"}, {"CD": "product"}]', '[{"AishaHanii2": "person"}, {"starflower1204": "person"}]', '[{"AishaHanii2": "person"}, {"starflower1204": "person"}]'], 'prediction_per_consist': [{'AishaHanii2': 'person', 'starflower1204': 'person', 'CD': 'product'}, {'AishaHanii2': 'person', 'starflower1204': 'person'}, {'AishaHanii2': 'person', 'starflower1204': 'person', 'CD': 'product'}, {'AishaHanii2': 'person', 'starflower1204': 'person'}, {'AishaHanii2': 'person', 'starflower1204': 'person'}], 'prediction': {'AishaHanii2': 'person', 'starflower1204': 'person'}, 'consistency_score': {'entities': {('AishaHanii2', 'person'): 5, ('starflower1204', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('AishaHanii2', 'person'): 5, ('starflower1204', 'person'): 5, ('CD', 'product'): 2}, 'avg': 4.0}}
{'idx': '170', 'sentence': "Lines for Tonight 's game 9:00 pm at Burnaby 8Rinks . Please note , these are not the lines for showering tonight ! http://twitpic.com/2pducs", 'label': "{'Burnaby': 'location'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Lines for Tonight \'s game 9:00 pm at Burnaby 8Rinks . Please note , these are not the lines for showering tonight ! http://twitpic.com/2pducs\nAnswer: ', 'responses': ['[{"Burnaby 8Rinks": "location"}]', '[{"Burnaby 8Rinks": "location"}]', '[{"Burnaby 8Rinks": "location"}]', '[{"Tonight": "creative-work"}, {"Burnaby 8Rinks": "location"}]', '[{"Tonight": "creative-work"}, {"Burnaby 8Rinks": "location"}]'], 'prediction_per_consist': [{'Burnaby 8Rinks': 'location'}, {'Burnaby 8Rinks': 'location'}, {'Burnaby 8Rinks': 'location'}, {'Tonight': 'creative-work', 'Burnaby 8Rinks': 'location'}, {'Tonight': 'creative-work', 'Burnaby 8Rinks': 'location'}], 'prediction': {'Burnaby 8Rinks': 'location'}, 'consistency_score': {'entities': {('Burnaby 8Rinks', 'location'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Burnaby 8Rinks', 'location'): 5, ('Tonight', 'creative-work'): 2}, 'avg': 3.5}}
{'idx': '171', 'sentence': '@hdscc Yo Man , just won $1000 tonight . 100% Bonus , Bonus Code : win2bet ! Fantastic Place to Play http://bit.ly/aoDEls?=njq4', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @hdscc Yo Man , just won $1000 tonight . 100% Bonus , Bonus Code : win2bet ! Fantastic Place to Play http://bit.ly/aoDEls?=njq4\nAnswer: ', 'responses': ['[{"win2bet": "product"}]', '[{"win2bet": "product"}]', '[{"win2bet": "product"}]', '[{"win2bet": "product"}]', '[{"win2bet": "product"}]'], 'prediction_per_consist': [{'win2bet': 'product'}, {'win2bet': 'product'}, {'win2bet': 'product'}, {'win2bet': 'product'}, {'win2bet': 'product'}], 'prediction': {'win2bet': 'product'}, 'consistency_score': {'entities': {('win2bet', 'product'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('win2bet', 'product'): 5}, 'avg': 5.0}}
{'idx': '172', 'sentence': 'Chicago Blackhawks general manager Stan Bowman said Cristobal Huet will be gone in two weeks ... http://fan.ac/Ydv #NHL', 'label': "{'Chicago Blackhawks': 'group', 'Stan Bowman': 'person', 'Cristobal Huet': 'person'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Chicago Blackhawks general manager Stan Bowman said Cristobal Huet will be gone in two weeks ... http://fan.ac/Ydv #NHL\nAnswer: ', 'responses': ['[{"Chicago Blackhawks": "group"}, {"Stan Bowman": "person"}, {"Cristobal Huet": "person"}]', '[{"Chicago Blackhawks": "group"}, {"Stan Bowman": "person"}, {"Cristobal Huet": "person"}, {"NHL": "group"}]', '[{"Chicago Blackhawks": "group"}, {"Stan Bowman": "person"}, {"Cristobal Huet": "person"}]', '[{"Chicago Blackhawks": "group"}, {"Stan Bowman": "person"}, {"Cristobal Huet": "person"}]', '[{"Chicago Blackhawks": "group"}, {"Stan Bowman": "person"}, {"Cristobal Huet": "person"}]'], 'prediction_per_consist': [{'Chicago Blackhawks': 'group', 'Stan Bowman': 'person', 'Cristobal Huet': 'person'}, {'Chicago Blackhawks': 'group', 'Stan Bowman': 'person', 'Cristobal Huet': 'person', 'NHL': 'group'}, {'Chicago Blackhawks': 'group', 'Stan Bowman': 'person', 'Cristobal Huet': 'person'}, {'Chicago Blackhawks': 'group', 'Stan Bowman': 'person', 'Cristobal Huet': 'person'}, {'Chicago Blackhawks': 'group', 'Stan Bowman': 'person', 'Cristobal Huet': 'person'}], 'prediction': {'Chicago Blackhawks': 'group', 'Stan Bowman': 'person', 'Cristobal Huet': 'person'}, 'consistency_score': {'entities': {('Chicago Blackhawks', 'group'): 5, ('Stan Bowman', 'person'): 5, ('Cristobal Huet', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Chicago Blackhawks', 'group'): 5, ('Stan Bowman', 'person'): 5, ('Cristobal Huet', 'person'): 5, ('NHL', 'group'): 1}, 'avg': 4.0}}
{'idx': '173', 'sentence': "@TheTiniestVole It is . It 's getting across London that 's the killer . Still miss it , though . Lived there for 20 years .", 'label': "{'London': 'location'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @TheTiniestVole It is . It \'s getting across London that \'s the killer . Still miss it , though . Lived there for 20 years .\nAnswer: ', 'responses': ['[{"London": "location"}]', '[{"London": "location"}]', '[{"London": "location"}]', '[{"London": "location"}]', '[{"London": "location"}]'], 'prediction_per_consist': [{'London': 'location'}, {'London': 'location'}, {'London': 'location'}, {'London': 'location'}, {'London': 'location'}], 'prediction': {'London': 'location'}, 'consistency_score': {'entities': {('London', 'location'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('London', 'location'): 5}, 'avg': 5.0}}
{'idx': '174', 'sentence': 'total 9 for Clark Duke RT @Naathan_B : Just watched hot tub time machine . Funny film ! Quite enjoyable ! Hmm 7.5 /10', 'label': "{'Clark Duke': 'person'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: total 9 for Clark Duke RT @Naathan_B : Just watched hot tub time machine . Funny film ! Quite enjoyable ! Hmm 7.5 /10\nAnswer: ', 'responses': ['[{"Clark Duke": "person"}, {"hot tub time machine": "creative-work"}]', '[{"Clark Duke": "person"}, {"hot tub time machine": "creative-work"}]', '[{"Clark Duke": "person"}, {"hot tub time machine": "creative-work"}]', '[{"Clark Duke": "person"}, {"hot tub time machine": "creative-work"}]', '[{"Clark Duke": "person"}, {"hot tub time machine": "creative-work"}]'], 'prediction_per_consist': [{'Clark Duke': 'person', 'hot tub time machine': 'creative-work'}, {'Clark Duke': 'person', 'hot tub time machine': 'creative-work'}, {'Clark Duke': 'person', 'hot tub time machine': 'creative-work'}, {'Clark Duke': 'person', 'hot tub time machine': 'creative-work'}, {'Clark Duke': 'person', 'hot tub time machine': 'creative-work'}], 'prediction': {'Clark Duke': 'person', 'hot tub time machine': 'creative-work'}, 'consistency_score': {'entities': {('Clark Duke', 'person'): 5, ('hot tub time machine', 'creative-work'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Clark Duke', 'person'): 5, ('hot tub time machine', 'creative-work'): 5}, 'avg': 5.0}}
{'idx': '175', 'sentence': 'This is one of my favorite days on twitter ever . @radhallman and @foofmcewan kudos', 'label': "{'twitter': 'corporation'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: This is one of my favorite days on twitter ever . @radhallman and @foofmcewan kudos\nAnswer: ', 'responses': ['[{"radhallman": "person"}, {"foofmcewan": "person"}]', '[{"radhallman": "person"}, {"foofmcewan": "person"}]', '[{"radhallman": "person"}, {"foofmcewan": "person"}]', '[{"radhallman": "person"}, {"foofmcewan": "person"}]', '[{"radhallman": "person"}, {"foofmcewan": "person"}]'], 'prediction_per_consist': [{'radhallman': 'person', 'foofmcewan': 'person'}, {'radhallman': 'person', 'foofmcewan': 'person'}, {'radhallman': 'person', 'foofmcewan': 'person'}, {'radhallman': 'person', 'foofmcewan': 'person'}, {'radhallman': 'person', 'foofmcewan': 'person'}], 'prediction': {'radhallman': 'person', 'foofmcewan': 'person'}, 'consistency_score': {'entities': {('radhallman', 'person'): 5, ('foofmcewan', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('radhallman', 'person'): 5, ('foofmcewan', 'person'): 5}, 'avg': 5.0}}
{'idx': '176', 'sentence': 'You blink when you breathe and you breathe when you lie . You blink when you lie .', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: You blink when you breathe and you breathe when you lie . You blink when you lie .\nAnswer: ', 'responses': ['[]', '[]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {}, 'avg': 0}}
{'idx': '177', 'sentence': "Takin ' ur hapiness before mine", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Takin \' ur hapiness before mine\nAnswer: ', 'responses': ['[]', '[]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {}, 'avg': 0}}
{'idx': '178', 'sentence': 'RT @DollarVanDemos : #BROOKLYN ! Stay up late tonight to catch the 1 hr special of Demos @ 3AM on BCAT feat @BlissyCakes @YaGirlNicolette ...', 'label': "{'Demos': 'creative-work', 'BCAT': 'group'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: RT @DollarVanDemos : #BROOKLYN ! Stay up late tonight to catch the 1 hr special of Demos @ 3AM on BCAT feat @BlissyCakes @YaGirlNicolette ...\nAnswer: ', 'responses': ['[{"DollarVanDemos": "group"}, {"BROOKLYN": "location"}, {"BCAT": "corporation"}, {"BlissyCakes": "person"}, {"YaGirlNicolette": "person"}]', '[{"DollarVanDemos": "group"}, {"BROOKLYN": "location"}, {"BCAT": "corporation"}, {"BlissyCakes": "person"}, {"YaGirlNicolette": "person"}]', '[{"DollarVanDemos": "group"}, {"BROOKLYN": "location"}, {"BCAT": "corporation"}, {"BlissyCakes": "person"}, {"YaGirlNicolette": "person"}]', '[{"Brooklyn": "location"}, {"Demos": "creative-work"}, {"BCAT": "group"}, {"BlissyCakes": "person"}, {"YaGirlNicolette": "person"}]', '[{"DollarVanDemos": "person"}, {"BROOKLYN": "location"}, {"BCAT": "corporation"}, {"BlissyCakes": "person"}, {"YaGirlNicolette": "person"}]'], 'prediction_per_consist': [{'DollarVanDemos': 'group', 'BROOKLYN': 'location', 'BCAT': 'corporation', 'BlissyCakes': 'person', 'YaGirlNicolette': 'person'}, {'DollarVanDemos': 'group', 'BROOKLYN': 'location', 'BCAT': 'corporation', 'BlissyCakes': 'person', 'YaGirlNicolette': 'person'}, {'DollarVanDemos': 'group', 'BROOKLYN': 'location', 'BCAT': 'corporation', 'BlissyCakes': 'person', 'YaGirlNicolette': 'person'}, {'Brooklyn': 'location', 'Demos': 'creative-work', 'BCAT': 'group', 'BlissyCakes': 'person', 'YaGirlNicolette': 'person'}, {'DollarVanDemos': 'person', 'BROOKLYN': 'location', 'BCAT': 'corporation', 'BlissyCakes': 'person', 'YaGirlNicolette': 'person'}], 'prediction': {'DollarVanDemos': 'group', 'BROOKLYN': 'location', 'BCAT': 'corporation', 'BlissyCakes': 'person', 'YaGirlNicolette': 'person'}, 'consistency_score': {'entities': {('DollarVanDemos', 'group'): 3, ('BROOKLYN', 'location'): 4, ('BCAT', 'corporation'): 4, ('BlissyCakes', 'person'): 5, ('YaGirlNicolette', 'person'): 5}, 'avg': 4.2}, 'consistency_score_SC_all_ans': {'entities': {('DollarVanDemos', 'group'): 3, ('BROOKLYN', 'location'): 4, ('BCAT', 'corporation'): 4, ('BlissyCakes', 'person'): 5, ('YaGirlNicolette', 'person'): 5, ('Brooklyn', 'location'): 1, ('Demos', 'creative-work'): 1, ('BCAT', 'group'): 1, ('DollarVanDemos', 'person'): 1}, 'avg': 2.7777777777777777}}
{'idx': '179', 'sentence': 'AI : DEMAND RELEASE FOR SYRIAN BLOGGER : 17-9-2010Tal al-Mallohi , a 19-year-old Syrian woman , has been held incommun ... http://bit.ly/aDG3ub', 'label': "{'al-Mallohi': 'person'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: AI : DEMAND RELEASE FOR SYRIAN BLOGGER : 17-9-2010Tal al-Mallohi , a 19-year-old Syrian woman , has been held incommun ... http://bit.ly/aDG3ub\nAnswer: ', 'responses': ['[{"Tal al-Mallohi": "person"}, {"Syrian": "location"}]', '[{"Tal al-Mallohi": "person"}, {"Syrian": "location"}]', '[{"Tal al-Mallohi": "person"}, {"Syrian": "location"}]', '[{"Tal al-Mallohi": "person"}, {"Syrian": "location"}]', '[{"Tal al-Mallohi": "person"}, {"Syria": "location"}]'], 'prediction_per_consist': [{'Tal al-Mallohi': 'person', 'Syrian': 'location'}, {'Tal al-Mallohi': 'person', 'Syrian': 'location'}, {'Tal al-Mallohi': 'person', 'Syrian': 'location'}, {'Tal al-Mallohi': 'person', 'Syrian': 'location'}, {'Tal al-Mallohi': 'person', 'Syria': 'location'}], 'prediction': {'Tal al-Mallohi': 'person', 'Syrian': 'location'}, 'consistency_score': {'entities': {('Tal al-Mallohi', 'person'): 5, ('Syrian', 'location'): 4}, 'avg': 4.5}, 'consistency_score_SC_all_ans': {'entities': {('Tal al-Mallohi', 'person'): 5, ('Syrian', 'location'): 4, ('Syria', 'location'): 1}, 'avg': 3.3333333333333335}}
{'idx': '180', 'sentence': 'Hope to see you tonight at Morgan Le Fays !! Great time :)', 'label': "{'Morgan Le Fays': 'location'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Hope to see you tonight at Morgan Le Fays !! Great time :)\nAnswer: ', 'responses': ['[{"Morgan Le Fays": "location"}]', '[{"Morgan Le Fays": "location"}]', '[{"Morgan Le Fays": "location"}]', '[{"Morgan Le Fays": "location"}]', '[{"Morgan Le Fays": "location"}]'], 'prediction_per_consist': [{'Morgan Le Fays': 'location'}, {'Morgan Le Fays': 'location'}, {'Morgan Le Fays': 'location'}, {'Morgan Le Fays': 'location'}, {'Morgan Le Fays': 'location'}], 'prediction': {'Morgan Le Fays': 'location'}, 'consistency_score': {'entities': {('Morgan Le Fays', 'location'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Morgan Le Fays', 'location'): 5}, 'avg': 5.0}}
{'idx': '181', 'sentence': 'A week in New Jersey , of all places , and I never want to hear a *Boston* accent again .', 'label': "{'New Jersey': 'location', '*Boston*': 'location'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: A week in New Jersey , of all places , and I never want to hear a *Boston* accent again .\nAnswer: ', 'responses': ['[{"New Jersey": "location"}, {"Boston": "location"}]', '[{"New Jersey": "location"}, {"Boston": "location"}]', '[{"New Jersey": "location"}, {"Boston": "location"}]', '[{"New Jersey": "location"}, {"Boston": "location"}]', '[{"New Jersey": "location"}, {"Boston": "location"}]'], 'prediction_per_consist': [{'New Jersey': 'location', 'Boston': 'location'}, {'New Jersey': 'location', 'Boston': 'location'}, {'New Jersey': 'location', 'Boston': 'location'}, {'New Jersey': 'location', 'Boston': 'location'}, {'New Jersey': 'location', 'Boston': 'location'}], 'prediction': {'New Jersey': 'location', 'Boston': 'location'}, 'consistency_score': {'entities': {('New Jersey', 'location'): 5, ('Boston', 'location'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('New Jersey', 'location'): 5, ('Boston', 'location'): 5}, 'avg': 5.0}}
{'idx': '182', 'sentence': 'RT @MarioBB9 : Pope says atheists pick and choose their morals . Correct . Today I will be frowning on child abuse and not having a proble ...', 'label': "{'Pope': 'person'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: RT @MarioBB9 : Pope says atheists pick and choose their morals . Correct . Today I will be frowning on child abuse and not having a proble ...\nAnswer: ', 'responses': ['[{"Pope": "person"}]', '[{"Pope": "person"}]', '[{"Pope": "person"}]', '[{"Pope": "person"}]', '[{"Pope": "person"}]'], 'prediction_per_consist': [{'Pope': 'person'}, {'Pope': 'person'}, {'Pope': 'person'}, {'Pope': 'person'}, {'Pope': 'person'}], 'prediction': {'Pope': 'person'}, 'consistency_score': {'entities': {('Pope', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Pope', 'person'): 5}, 'avg': 5.0}}
{'idx': '183', 'sentence': '@SaviiISJAPAN nooo - i have when people ask me so i dont ask people lool .', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @SaviiISJAPAN nooo - i have when people ask me so i dont ask people lool .\nAnswer: ', 'responses': ['[]', '[]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {}, 'avg': 0}}
{'idx': '184', 'sentence': 'Now time too do my hair ! New look on deck !', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Now time too do my hair ! New look on deck !\nAnswer: ', 'responses': ['[{"New look": "product"}]', '[{"New look": "creative-work"}]', '[]', '[{"New look on deck": "product"}]', '[{"New look": "product"}]'], 'prediction_per_consist': [{'New look': 'product'}, {'New look': 'creative-work'}, {}, {'New look on deck': 'product'}, {'New look': 'product'}], 'prediction': {'New look': 'product'}, 'consistency_score': {'entities': {('New look', 'product'): 2}, 'avg': 2.0}, 'consistency_score_SC_all_ans': {'entities': {('New look', 'product'): 2, ('New look', 'creative-work'): 1, ('New look on deck', 'product'): 1}, 'avg': 1.3333333333333333}}
{'idx': '185', 'sentence': '@ConorMc_Ginty GaGa played here a few weeks back . She spoke out against SB1070 during the show . God bless her for that .', 'label': "{'GaGa': 'person', 'SB1070': 'product'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @ConorMc_Ginty GaGa played here a few weeks back . She spoke out against SB1070 during the show . God bless her for that .\nAnswer: ', 'responses': ['[{"ConorMc_Ginty": "person"}, {"GaGa": "person"}, {"SB1070": "creative-work"}]', '[{"ConorMc_Ginty": "person"}, {"GaGa": "person"}, {"SB1070": "group"}]', '[{"ConorMc_Ginty": "person"}, {"GaGa": "person"}, {"SB1070": "group"}]', '[{"ConorMc_Ginty": "person"}, {"GaGa": "person"}, {"SB1070": "group"}]', '[{"ConorMc_Ginty": "person"}, {"GaGa": "person"}, {"SB1070": "group"}]'], 'prediction_per_consist': [{'ConorMc_Ginty': 'person', 'GaGa': 'person', 'SB1070': 'creative-work'}, {'ConorMc_Ginty': 'person', 'GaGa': 'person', 'SB1070': 'group'}, {'ConorMc_Ginty': 'person', 'GaGa': 'person', 'SB1070': 'group'}, {'ConorMc_Ginty': 'person', 'GaGa': 'person', 'SB1070': 'group'}, {'ConorMc_Ginty': 'person', 'GaGa': 'person', 'SB1070': 'group'}], 'prediction': {'ConorMc_Ginty': 'person', 'GaGa': 'person', 'SB1070': 'group'}, 'consistency_score': {'entities': {('ConorMc_Ginty', 'person'): 5, ('GaGa', 'person'): 5, ('SB1070', 'group'): 4}, 'avg': 4.666666666666667}, 'consistency_score_SC_all_ans': {'entities': {('ConorMc_Ginty', 'person'): 5, ('GaGa', 'person'): 5, ('SB1070', 'creative-work'): 1, ('SB1070', 'group'): 4}, 'avg': 3.75}}
{'idx': '186', 'sentence': 'Dems to voters : You may hate us , but GOP is worse ( AP ) AP - With just six weeks to avoid a possible election catastrophe , http://tiny.ly/wc5', 'label': "{'Dems': 'group', 'GOP': 'group'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Dems to voters : You may hate us , but GOP is worse ( AP ) AP - With just six weeks to avoid a possible election catastrophe , http://tiny.ly/wc5\nAnswer: ', 'responses': ['[{"Dems": "group"}, {"GOP": "group"}, {"AP": "corporation"}]', '[{"Dems": "group"}, {"GOP": "group"}, {"AP": "corporation"}]', '[{"AP": "corporation"}]', '[{"Dems": "group"}, {"GOP": "group"}, {"AP": "corporation"}]', '[{"AP": "corporation"}]'], 'prediction_per_consist': [{'Dems': 'group', 'GOP': 'group', 'AP': 'corporation'}, {'Dems': 'group', 'GOP': 'group', 'AP': 'corporation'}, {'AP': 'corporation'}, {'Dems': 'group', 'GOP': 'group', 'AP': 'corporation'}, {'AP': 'corporation'}], 'prediction': {'Dems': 'group', 'GOP': 'group', 'AP': 'corporation'}, 'consistency_score': {'entities': {('Dems', 'group'): 3, ('GOP', 'group'): 3, ('AP', 'corporation'): 5}, 'avg': 3.6666666666666665}, 'consistency_score_SC_all_ans': {'entities': {('Dems', 'group'): 3, ('GOP', 'group'): 3, ('AP', 'corporation'): 5}, 'avg': 3.6666666666666665}}
{'idx': '187', 'sentence': '@singingislife15 Follow Friday :)', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @singingislife15 Follow Friday :)\nAnswer: ', 'responses': ['[]', '[]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {}, 'avg': 0}}
{'idx': '188', 'sentence': 'RT @rocsidiaz : @Wale ill be in DC tonight where u at ?? Ill be at muse 717 6th St Nw Dc to party', 'label': "{'DC': 'location', 'muse': 'location'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: RT @rocsidiaz : @Wale ill be in DC tonight where u at ?? Ill be at muse 717 6th St Nw Dc to party\nAnswer: ', 'responses': ['[{"rocsidiaz": "person"}, {"Wale": "person"}, {"muse 717 6th St Nw Dc": "location"}]', '[{"rocsidiaz": "person"}, {"Wale": "person"}, {"DC": "location"}, {"muse 717 6th St Nw Dc": "location"}]', '[{"rocsidiaz": "person"}, {"Wale": "person"}, {"DC": "location"}, {"muse 717 6th St Nw Dc": "location"}]', '[{"rocsidiaz": "person"}, {"Wale": "person"}, {"DC": "location"}, {"muse 717 6th St Nw Dc": "location"}]', '[{"rocsidiaz": "person"}, {"Wale": "person"}, {"DC": "location"}, {"muse 717 6th St Nw Dc": "location"}]'], 'prediction_per_consist': [{'rocsidiaz': 'person', 'Wale': 'person', 'muse 717 6th St Nw Dc': 'location'}, {'rocsidiaz': 'person', 'Wale': 'person', 'DC': 'location', 'muse 717 6th St Nw Dc': 'location'}, {'rocsidiaz': 'person', 'Wale': 'person', 'DC': 'location', 'muse 717 6th St Nw Dc': 'location'}, {'rocsidiaz': 'person', 'Wale': 'person', 'DC': 'location', 'muse 717 6th St Nw Dc': 'location'}, {'rocsidiaz': 'person', 'Wale': 'person', 'DC': 'location', 'muse 717 6th St Nw Dc': 'location'}], 'prediction': {'rocsidiaz': 'person', 'Wale': 'person', 'muse 717 6th St Nw Dc': 'location', 'DC': 'location'}, 'consistency_score': {'entities': {('rocsidiaz', 'person'): 5, ('Wale', 'person'): 5, ('muse 717 6th St Nw Dc', 'location'): 5, ('DC', 'location'): 4}, 'avg': 4.75}, 'consistency_score_SC_all_ans': {'entities': {('rocsidiaz', 'person'): 5, ('Wale', 'person'): 5, ('muse 717 6th St Nw Dc', 'location'): 5, ('DC', 'location'): 4}, 'avg': 4.75}}
{'idx': '189', 'sentence': 'Sooo I jus found out that the rising senior class of The @Oprah Leadership Academy is comin to my skool nxt Saturday yeeee !!! :)', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Sooo I jus found out that the rising senior class of The @Oprah Leadership Academy is comin to my skool nxt Saturday yeeee !!! :)\nAnswer: ', 'responses': ['[{"Oprah Leadership Academy": "group"}]', '[{"Oprah Leadership Academy": "group"}]', '[{"Oprah Leadership Academy": "group"}]', '[{"Oprah Leadership Academy": "group"}]', '[{"Oprah Leadership Academy": "group"}]'], 'prediction_per_consist': [{'Oprah Leadership Academy': 'group'}, {'Oprah Leadership Academy': 'group'}, {'Oprah Leadership Academy': 'group'}, {'Oprah Leadership Academy': 'group'}, {'Oprah Leadership Academy': 'group'}], 'prediction': {'Oprah Leadership Academy': 'group'}, 'consistency_score': {'entities': {('Oprah Leadership Academy', 'group'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Oprah Leadership Academy', 'group'): 5}, 'avg': 5.0}}
{'idx': '190', 'sentence': "@MrzEndy tru tru I 'm leavin again on Tuesday yo", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @MrzEndy tru tru I \'m leavin again on Tuesday yo\nAnswer: ', 'responses': ['[{"MrzEndy": "person"}]', '[{"MrzEndy": "person"}, {"Tuesday": "location"}]', '[{"MrzEndy": "person"}]', '[{"MrzEndy": "person"}]', '[{"MrzEndy": "person"}, {"Tuesday": "location"}]'], 'prediction_per_consist': [{'MrzEndy': 'person'}, {'MrzEndy': 'person', 'Tuesday': 'location'}, {'MrzEndy': 'person'}, {'MrzEndy': 'person'}, {'MrzEndy': 'person', 'Tuesday': 'location'}], 'prediction': {'MrzEndy': 'person'}, 'consistency_score': {'entities': {('MrzEndy', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('MrzEndy', 'person'): 5, ('Tuesday', 'location'): 2}, 'avg': 3.5}}
{'idx': '191', 'sentence': '@carolermp ;) did you read about my mealworm prank the other day ? ;)', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @carolermp ;) did you read about my mealworm prank the other day ? ;)\nAnswer: ', 'responses': ['[]', '[{"carolermp": "person"}]', '[{"carolermp": "person"}]', '[{"carolermp": "person"}]', '[{"carolermp": "person"}]'], 'prediction_per_consist': [{}, {'carolermp': 'person'}, {'carolermp': 'person'}, {'carolermp': 'person'}, {'carolermp': 'person'}], 'prediction': {'carolermp': 'person'}, 'consistency_score': {'entities': {('carolermp', 'person'): 4}, 'avg': 4.0}, 'consistency_score_SC_all_ans': {'entities': {('carolermp', 'person'): 4}, 'avg': 4.0}}
{'idx': '192', 'sentence': 'Oh PEI , i always forget how beautiful you are . Especially when you stop hanging out with tourists .', 'label': "{'PEI': 'person'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Oh PEI , i always forget how beautiful you are . Especially when you stop hanging out with tourists .\nAnswer: ', 'responses': ['[{"PEI": "location"}]', '[{"PEI": "location"}]', '[{"PEI": "location"}]', '[{"PEI": "location"}]', '[{"PEI": "location"}]'], 'prediction_per_consist': [{'PEI': 'location'}, {'PEI': 'location'}, {'PEI': 'location'}, {'PEI': 'location'}, {'PEI': 'location'}], 'prediction': {'PEI': 'location'}, 'consistency_score': {'entities': {('PEI', 'location'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('PEI', 'location'): 5}, 'avg': 5.0}}
{'idx': '193', 'sentence': 'I think that today the party has been canceled makes too much air in the street loll . miss u twitfriends . xx', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: I think that today the party has been canceled makes too much air in the street loll . miss u twitfriends . xx\nAnswer: ', 'responses': ['[]', '[{"twitfriends": "group"}]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {'twitfriends': 'group'}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {('twitfriends', 'group'): 1}, 'avg': 1.0}}
{'idx': '194', 'sentence': "Thank you for all your support . Best wishes from DUKETERS'S..have a nice day", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Thank you for all your support . Best wishes from DUKETERS\'S..have a nice day\nAnswer: ', 'responses': ['[{"DUKETERS\'S": "group"}]', '[{"DUKETERS\'S": "group"}]', '[{"DUKETERS\'S": "group"}]', '[{"DUKETERS\'S": "group"}]', '[{"DUKETERS\'S": "group"}]'], 'prediction_per_consist': [{"DUKETERS'S": 'group'}, {"DUKETERS'S": 'group'}, {"DUKETERS'S": 'group'}, {"DUKETERS'S": 'group'}, {"DUKETERS'S": 'group'}], 'prediction': {"DUKETERS'S": 'group'}, 'consistency_score': {'entities': {("DUKETERS'S", 'group'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {("DUKETERS'S", 'group'): 5}, 'avg': 5.0}}
{'idx': '195', 'sentence': "I'm a little too excited to be a social media goy tomorrow .", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: I\'m a little too excited to be a social media goy tomorrow .\nAnswer: ', 'responses': ['[{"social media": "group"}]', '[{"social media goy": "group"}]', '[{"social media": "group"}]', '[{"social media goy": "group"}]', '[{"social media goy": "group"}]'], 'prediction_per_consist': [{'social media': 'group'}, {'social media goy': 'group'}, {'social media': 'group'}, {'social media goy': 'group'}, {'social media goy': 'group'}], 'prediction': {'social media goy': 'group'}, 'consistency_score': {'entities': {('social media goy', 'group'): 3}, 'avg': 3.0}, 'consistency_score_SC_all_ans': {'entities': {('social media', 'group'): 2, ('social media goy', 'group'): 3}, 'avg': 2.5}}
{'idx': '196', 'sentence': 'So happy this hellish week is over ! Nothing that some sushi and sake can fix ;)', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: So happy this hellish week is over ! Nothing that some sushi and sake can fix ;)\nAnswer: ', 'responses': ['[{"sushi": "product"}, {"sake": "product"}]', '[{"sushi": "product"}, {"sake": "product"}]', '[{"sushi": "product"}, {"sake": "product"}]', '[{"sushi": "product"}, {"sake": "product"}]', '[{"sushi": "product"}, {"sake": "product"}]'], 'prediction_per_consist': [{'sushi': 'product', 'sake': 'product'}, {'sushi': 'product', 'sake': 'product'}, {'sushi': 'product', 'sake': 'product'}, {'sushi': 'product', 'sake': 'product'}, {'sushi': 'product', 'sake': 'product'}], 'prediction': {'sushi': 'product', 'sake': 'product'}, 'consistency_score': {'entities': {('sushi', 'product'): 5, ('sake', 'product'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('sushi', 'product'): 5, ('sake', 'product'): 5}, 'avg': 5.0}}
{'idx': '197', 'sentence': '@JennyVeronica92 thats whassup . when u posed to be comin out here', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @JennyVeronica92 thats whassup . when u posed to be comin out here\nAnswer: ', 'responses': ['[{"JennyVeronica92": "person"}]', '[{"JennyVeronica92": "person"}]', '[{"JennyVeronica92": "person"}]', '[{"JennyVeronica92": "person"}]', '[{"JennyVeronica92": "person"}]'], 'prediction_per_consist': [{'JennyVeronica92': 'person'}, {'JennyVeronica92': 'person'}, {'JennyVeronica92': 'person'}, {'JennyVeronica92': 'person'}, {'JennyVeronica92': 'person'}], 'prediction': {'JennyVeronica92': 'person'}, 'consistency_score': {'entities': {('JennyVeronica92', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('JennyVeronica92', 'person'): 5}, 'avg': 5.0}}
{'idx': '198', 'sentence': 'Shoutout to @HarryReid for his help with DADT . Thanks for following . Good luck on Tuesday !', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Shoutout to @HarryReid for his help with DADT . Thanks for following . Good luck on Tuesday !\nAnswer: ', 'responses': ['[{"HarryReid": "person"}, {"DADT": "creative-work"}]', '[{"HarryReid": "person"}, {"DADT": "creative-work"}]', '[{"HarryReid": "person"}, {"DADT": "creative-work"}]', '[{"HarryReid": "person"}, {"DADT": "product"}, {"Tuesday": "location"}]', '[{"HarryReid": "person"}, {"DADT": "creative-work"}]'], 'prediction_per_consist': [{'HarryReid': 'person', 'DADT': 'creative-work'}, {'HarryReid': 'person', 'DADT': 'creative-work'}, {'HarryReid': 'person', 'DADT': 'creative-work'}, {'HarryReid': 'person', 'DADT': 'product', 'Tuesday': 'location'}, {'HarryReid': 'person', 'DADT': 'creative-work'}], 'prediction': {'HarryReid': 'person', 'DADT': 'creative-work'}, 'consistency_score': {'entities': {('HarryReid', 'person'): 5, ('DADT', 'creative-work'): 4}, 'avg': 4.5}, 'consistency_score_SC_all_ans': {'entities': {('HarryReid', 'person'): 5, ('DADT', 'creative-work'): 4, ('DADT', 'product'): 1, ('Tuesday', 'location'): 1}, 'avg': 2.75}}
{'idx': '199', 'sentence': 'Tomorrow is Saturday . Aka #dreadlock day . Bring on the twist n rip ... #TnR #reggae #rasta #marley #bobmarley', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Tomorrow is Saturday . Aka #dreadlock day . Bring on the twist n rip ... #TnR #reggae #rasta #marley #bobmarley\nAnswer: ', 'responses': ['[{"Saturday": "location"}, {"dreadlock": "product"}, {"TnR": "product"}, {"reggae": "group"}, {"rasta": "group"}, {"marley": "person"}, {"bobmarley": "person"}]', '[{"Saturday": "location"}, {"dreadlock": "creative-work"}, {"TnR": "product"}, {"reggae": "group"}, {"rasta": "group"}, {"marley": "group"}, {"Bob Marley": "person"}]', '[{"Saturday": "location"}, {"TnR": "product"}, {"reggae": "group"}, {"rasta": "group"}, {"marley": "group"}, {"bobmarley": "person"}]', '[{"Saturday": "location"}, {"dreadlock": "product"}, {"twist n rip": "creative-work"}, {"reggae": "group"}, {"rasta": "group"}, {"marley": "person"}, {"bob marley": "person"}]', '[{"Saturday": "location"}, {"TnR": "product"}, {"reggae": "group"}, {"rasta": "group"}, {"marley": "group"}, {"bobmarley": "person"}]'], 'prediction_per_consist': [{'Saturday': 'location', 'dreadlock': 'product', 'TnR': 'product', 'reggae': 'group', 'rasta': 'group', 'marley': 'person', 'bobmarley': 'person'}, {'Saturday': 'location', 'dreadlock': 'creative-work', 'TnR': 'product', 'reggae': 'group', 'rasta': 'group', 'marley': 'group', 'Bob Marley': 'person'}, {'Saturday': 'location', 'TnR': 'product', 'reggae': 'group', 'rasta': 'group', 'marley': 'group', 'bobmarley': 'person'}, {'Saturday': 'location', 'dreadlock': 'product', 'twist n rip': 'creative-work', 'reggae': 'group', 'rasta': 'group', 'marley': 'person', 'bob marley': 'person'}, {'Saturday': 'location', 'TnR': 'product', 'reggae': 'group', 'rasta': 'group', 'marley': 'group', 'bobmarley': 'person'}], 'prediction': {'Saturday': 'location', 'dreadlock': 'product', 'TnR': 'product', 'reggae': 'group', 'rasta': 'group', 'marley': 'group', 'bobmarley': 'person'}, 'consistency_score': {'entities': {('Saturday', 'location'): 5, ('dreadlock', 'product'): 2, ('TnR', 'product'): 4, ('reggae', 'group'): 5, ('rasta', 'group'): 5, ('marley', 'group'): 3, ('bobmarley', 'person'): 3}, 'avg': 3.857142857142857}, 'consistency_score_SC_all_ans': {'entities': {('Saturday', 'location'): 5, ('dreadlock', 'product'): 2, ('TnR', 'product'): 4, ('reggae', 'group'): 5, ('rasta', 'group'): 5, ('marley', 'person'): 2, ('bobmarley', 'person'): 3, ('dreadlock', 'creative-work'): 1, ('marley', 'group'): 3, ('Bob Marley', 'person'): 1, ('twist n rip', 'creative-work'): 1, ('bob marley', 'person'): 1}, 'avg': 2.75}}
{'idx': '200', 'sentence': 'Saw some people from my past over at the school today . They all remembered me . :)', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Saw some people from my past over at the school today . They all remembered me . :)\nAnswer: ', 'responses': ['[{"school": "location"}]', '[{"school": "location"}]', '[{"school": "location"}]', '[{"people": "group"}, {"school": "location"}]', '[{"past": "location"}, {"school": "location"}]'], 'prediction_per_consist': [{'school': 'location'}, {'school': 'location'}, {'school': 'location'}, {'people': 'group', 'school': 'location'}, {'past': 'location', 'school': 'location'}], 'prediction': {'school': 'location'}, 'consistency_score': {'entities': {('school', 'location'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('school', 'location'): 5, ('people', 'group'): 1, ('past', 'location'): 1}, 'avg': 2.3333333333333335}}
{'idx': '201', 'sentence': "@snarkobabble I'll look for you tonight ! #wineparty", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @snarkobabble I\'ll look for you tonight ! #wineparty\nAnswer: ', 'responses': ['[{"snarkobabble": "person"}]', '[{"snarkobabble": "person"}]', '[{"snarkobabble": "person"}]', '[{"snarkobabble": "person"}]', '[{"snarkobabble": "person"}]'], 'prediction_per_consist': [{'snarkobabble': 'person'}, {'snarkobabble': 'person'}, {'snarkobabble': 'person'}, {'snarkobabble': 'person'}, {'snarkobabble': 'person'}], 'prediction': {'snarkobabble': 'person'}, 'consistency_score': {'entities': {('snarkobabble', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('snarkobabble', 'person'): 5}, 'avg': 5.0}}
{'idx': '202', 'sentence': 'We thank you for your interest and consideration and we look forward to working with you this year at the 20 ... http://tinyurl.com/27ypv4o', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: We thank you for your interest and consideration and we look forward to working with you this year at the 20 ... http://tinyurl.com/27ypv4o\nAnswer: ', 'responses': ['[]', '[]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {}, 'avg': 0}}
{'idx': '203', 'sentence': "@sarahk47 Okay The doc 's saying Keep it tamped down a coupla days then bring her out early ?", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @sarahk47 Okay The doc \'s saying Keep it tamped down a coupla days then bring her out early ?\nAnswer: ', 'responses': ['[{"sarahk47": "person"}]', '[{"sarahk47": "person"}]', '[{"sarahk47": "person"}]', '[{"sarahk47": "person"}, {"doc": "person"}]', '[{"sarahk47": "person"}]'], 'prediction_per_consist': [{'sarahk47': 'person'}, {'sarahk47': 'person'}, {'sarahk47': 'person'}, {'sarahk47': 'person', 'doc': 'person'}, {'sarahk47': 'person'}], 'prediction': {'sarahk47': 'person'}, 'consistency_score': {'entities': {('sarahk47', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('sarahk47', 'person'): 5, ('doc', 'person'): 1}, 'avg': 3.0}}
{'idx': '204', 'sentence': 'Rep . Bono Mack to criticize fellow desert dweller Barbara Boxer at event today . http://tinyurl.com/2bhyuq7', 'label': "{'Bono Mack': 'person', 'Barbara Boxer': 'person'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Rep . Bono Mack to criticize fellow desert dweller Barbara Boxer at event today . http://tinyurl.com/2bhyuq7\nAnswer: ', 'responses': ['[{"Bono Mack": "person"}, {"Barbara Boxer": "person"}]', '[{"Bono Mack": "person"}, {"Barbara Boxer": "person"}]', '[{"Bono Mack": "person"}, {"Barbara Boxer": "person"}]', '[{"Bono Mack": "person"}, {"Barbara Boxer": "person"}]', '[{"Bono Mack": "person"}, {"Barbara Boxer": "person"}]'], 'prediction_per_consist': [{'Bono Mack': 'person', 'Barbara Boxer': 'person'}, {'Bono Mack': 'person', 'Barbara Boxer': 'person'}, {'Bono Mack': 'person', 'Barbara Boxer': 'person'}, {'Bono Mack': 'person', 'Barbara Boxer': 'person'}, {'Bono Mack': 'person', 'Barbara Boxer': 'person'}], 'prediction': {'Bono Mack': 'person', 'Barbara Boxer': 'person'}, 'consistency_score': {'entities': {('Bono Mack', 'person'): 5, ('Barbara Boxer', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Bono Mack', 'person'): 5, ('Barbara Boxer', 'person'): 5}, 'avg': 5.0}}
{'idx': '205', 'sentence': "@rishi_syd hey , I'm fine !! Thanx :) u too have a great day ;)", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @rishi_syd hey , I\'m fine !! Thanx :) u too have a great day ;)\nAnswer: ', 'responses': ['[{"rishi_syd": "person"}]', '[{"rishi_syd": "person"}]', '[{"rishi_syd": "person"}]', '[{"rishi_syd": "person"}]', '[{"rishi_syd": "person"}]'], 'prediction_per_consist': [{'rishi_syd': 'person'}, {'rishi_syd': 'person'}, {'rishi_syd': 'person'}, {'rishi_syd': 'person'}, {'rishi_syd': 'person'}], 'prediction': {'rishi_syd': 'person'}, 'consistency_score': {'entities': {('rishi_syd', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('rishi_syd', 'person'): 5}, 'avg': 5.0}}
{'idx': '206', 'sentence': 'Football game tonight !!!!! V-I-K-I-N-G-S !!!!!!!', 'label': "{'V-I-K-I-N-G-S': 'group'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Football game tonight !!!!! V-I-K-I-N-G-S !!!!!!!\nAnswer: ', 'responses': ['[{"V-I-K-I-N-G-S": "group"}]', '[{"V-I-K-I-N-G-S": "group"}]', '[{"V-I-K-I-N-G-S": "group"}]', '[{"V-I-K-I-N-G-S": "group"}]', '[]'], 'prediction_per_consist': [{'V-I-K-I-N-G-S': 'group'}, {'V-I-K-I-N-G-S': 'group'}, {'V-I-K-I-N-G-S': 'group'}, {'V-I-K-I-N-G-S': 'group'}, {}], 'prediction': {'V-I-K-I-N-G-S': 'group'}, 'consistency_score': {'entities': {('V-I-K-I-N-G-S', 'group'): 4}, 'avg': 4.0}, 'consistency_score_SC_all_ans': {'entities': {('V-I-K-I-N-G-S', 'group'): 4}, 'avg': 4.0}}
{'idx': '207', 'sentence': 'Goodnight and may peace be upon you and yours . &lt; 3', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Goodnight and may peace be upon you and yours . &lt; 3\nAnswer: ', 'responses': ['[]', '[]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {}, 'avg': 0}}
{'idx': '208', 'sentence': 'I just took " After getting trampled at a Justin Bieber concert , yoiu wake up and ..." and got : Part 6 :) ! Try it : http://tinyurl.com/26zeju5', 'label': "{'Justin Bieber': 'person'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: I just took " After getting trampled at a Justin Bieber concert , yoiu wake up and ..." and got : Part 6 :) ! Try it : http://tinyurl.com/26zeju5\nAnswer: ', 'responses': ['[{"Justin Bieber": "person"}]', '[{"Justin Bieber": "person"}]', '[{"Justin Bieber": "person"}]', '[{"Justin Bieber": "person"}]', '[{"Justin Bieber": "person"}]'], 'prediction_per_consist': [{'Justin Bieber': 'person'}, {'Justin Bieber': 'person'}, {'Justin Bieber': 'person'}, {'Justin Bieber': 'person'}, {'Justin Bieber': 'person'}], 'prediction': {'Justin Bieber': 'person'}, 'consistency_score': {'entities': {('Justin Bieber', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Justin Bieber', 'person'): 5}, 'avg': 5.0}}
{'idx': '209', 'sentence': '@ls_n perhaps , but folks may find something in the gallery that is helpful in their day-to-day work as well . Even just to use it .', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @ls_n perhaps , but folks may find something in the gallery that is helpful in their day-to-day work as well . Even just to use it .\nAnswer: ', 'responses': ['[]', '[]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {}, 'avg': 0}}
{'idx': '210', 'sentence': "@LightBringer87 I'm too busy asking @leestanleyinnqy formspring questions , I may get around to you later ;)", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @LightBringer87 I\'m too busy asking @leestanleyinnqy formspring questions , I may get around to you later ;)\nAnswer: ', 'responses': ['[{"LightBringer87": "person"}, {"leestanleyinnqy": "person"}]', '[{"LightBringer87": "person"}, {"leestanleyinnqy": "person"}]', '[{"LightBringer87": "person"}, {"leestanleyinnqy": "person"}]', '[{"LightBringer87": "person"}, {"leestanleyinnqy": "person"}]', '[{"LightBringer87": "person"}, {"leestanleyinnqy": "person"}]'], 'prediction_per_consist': [{'LightBringer87': 'person', 'leestanleyinnqy': 'person'}, {'LightBringer87': 'person', 'leestanleyinnqy': 'person'}, {'LightBringer87': 'person', 'leestanleyinnqy': 'person'}, {'LightBringer87': 'person', 'leestanleyinnqy': 'person'}, {'LightBringer87': 'person', 'leestanleyinnqy': 'person'}], 'prediction': {'LightBringer87': 'person', 'leestanleyinnqy': 'person'}, 'consistency_score': {'entities': {('LightBringer87', 'person'): 5, ('leestanleyinnqy', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('LightBringer87', 'person'): 5, ('leestanleyinnqy', 'person'): 5}, 'avg': 5.0}}
{'idx': '211', 'sentence': "Oscar 's new favorite pass time is running as fast as he can from one end of the house to another yelling BuhBYYYYYE", 'label': "{'Oscar': 'person'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Oscar \'s new favorite pass time is running as fast as he can from one end of the house to another yelling BuhBYYYYYE\nAnswer: ', 'responses': ['[{"Oscar": "person"}]', '[{"Oscar": "person"}]', '[{"Oscar": "person"}]', '[{"Oscar": "person"}]', '[{"Oscar": "person"}]'], 'prediction_per_consist': [{'Oscar': 'person'}, {'Oscar': 'person'}, {'Oscar': 'person'}, {'Oscar': 'person'}, {'Oscar': 'person'}], 'prediction': {'Oscar': 'person'}, 'consistency_score': {'entities': {('Oscar', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Oscar', 'person'): 5}, 'avg': 5.0}}
{'idx': '212', 'sentence': 'Asprin , check , cup of tea , check , pillow , check , warm sleeping bag , check , fanfiction on the laptop , check . Time to settle down and relax', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Asprin , check , cup of tea , check , pillow , check , warm sleeping bag , check , fanfiction on the laptop , check . Time to settle down and relax\nAnswer: ', 'responses': ['[{"Asprin": "product"}, {"cup of tea": "product"}, {"pillow": "product"}, {"warm sleeping bag": "product"}, {"fanfiction on the laptop": "creative-work"}]', '[{"Asprin": "product"}, {"cup of tea": "product"}, {"pillow": "product"}, {"warm sleeping bag": "product"}, {"fanfiction on the laptop": "creative-work"}]', '[{"Asprin": "product"}, {"cup of tea": "product"}, {"pillow": "product"}, {"warm sleeping bag": "product"}, {"fanfiction on the laptop": "creative-work"}]', '[{"Asprin": "product"}, {"cup of tea": "product"}, {"pillow": "product"}, {"warm sleeping bag": "product"}, {"fanfiction on the laptop": "creative-work"}]', '[{"Asprin": "product"}, {"cup of tea": "product"}, {"pillow": "product"}, {"warm sleeping bag": "product"}, {"fanfiction on the laptop": "creative-work"}]'], 'prediction_per_consist': [{'Asprin': 'product', 'cup of tea': 'product', 'pillow': 'product', 'warm sleeping bag': 'product', 'fanfiction on the laptop': 'creative-work'}, {'Asprin': 'product', 'cup of tea': 'product', 'pillow': 'product', 'warm sleeping bag': 'product', 'fanfiction on the laptop': 'creative-work'}, {'Asprin': 'product', 'cup of tea': 'product', 'pillow': 'product', 'warm sleeping bag': 'product', 'fanfiction on the laptop': 'creative-work'}, {'Asprin': 'product', 'cup of tea': 'product', 'pillow': 'product', 'warm sleeping bag': 'product', 'fanfiction on the laptop': 'creative-work'}, {'Asprin': 'product', 'cup of tea': 'product', 'pillow': 'product', 'warm sleeping bag': 'product', 'fanfiction on the laptop': 'creative-work'}], 'prediction': {'Asprin': 'product', 'cup of tea': 'product', 'pillow': 'product', 'warm sleeping bag': 'product', 'fanfiction on the laptop': 'creative-work'}, 'consistency_score': {'entities': {('Asprin', 'product'): 5, ('cup of tea', 'product'): 5, ('pillow', 'product'): 5, ('warm sleeping bag', 'product'): 5, ('fanfiction on the laptop', 'creative-work'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Asprin', 'product'): 5, ('cup of tea', 'product'): 5, ('pillow', 'product'): 5, ('warm sleeping bag', 'product'): 5, ('fanfiction on the laptop', 'creative-work'): 5}, 'avg': 5.0}}
{'idx': '213', 'sentence': "Maybe it 's compulsary .. when you're over the age of 30 and an unemployed wrestler you have to act like a total tool . http://fb.me/GpyFjTgp", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Maybe it \'s compulsary .. when you\'re over the age of 30 and an unemployed wrestler you have to act like a total tool . http://fb.me/GpyFjTgp\nAnswer: ', 'responses': ['[{"wrestler": "person"}]', '[{"wrestler": "person"}]', '[{"wrestler": "person"}]', '[{"wrestler": "person"}]', '[{"wrestler": "person"}]'], 'prediction_per_consist': [{'wrestler': 'person'}, {'wrestler': 'person'}, {'wrestler': 'person'}, {'wrestler': 'person'}, {'wrestler': 'person'}], 'prediction': {'wrestler': 'person'}, 'consistency_score': {'entities': {('wrestler', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('wrestler', 'person'): 5}, 'avg': 5.0}}
{'idx': '214', 'sentence': '@bougiemagazine You are really showing out today lol .', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @bougiemagazine You are really showing out today lol .\nAnswer: ', 'responses': ['[]', '[{"@bougiemagazine": "person"}]', '[{"bougiemagazine": "person"}]', '[]', '[]'], 'prediction_per_consist': [{}, {'@bougiemagazine': 'person'}, {'bougiemagazine': 'person'}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {('@bougiemagazine', 'person'): 1, ('bougiemagazine', 'person'): 1}, 'avg': 1.0}}
{'idx': '215', 'sentence': 'going to tucson tonight :/', 'label': "{'tucson': 'location'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: going to tucson tonight :/\nAnswer: ', 'responses': ['[{"tucson": "location"}]', '[{"tucson": "location"}]', '[{"tucson": "location"}]', '[{"tucson": "location"}]', '[{"tucson": "location"}]'], 'prediction_per_consist': [{'tucson': 'location'}, {'tucson': 'location'}, {'tucson': 'location'}, {'tucson': 'location'}, {'tucson': 'location'}], 'prediction': {'tucson': 'location'}, 'consistency_score': {'entities': {('tucson', 'location'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('tucson', 'location'): 5}, 'avg': 5.0}}
{'idx': '216', 'sentence': 'going now guiseeeee ... if i dont see you through the week ill see you through the window :) :)', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: going now guiseeeee ... if i dont see you through the week ill see you through the window :) :)\nAnswer: ', 'responses': ['[]', '[]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {}, 'avg': 0}}
{'idx': '217', 'sentence': 'even better than cocktail friday ! http://is.gd/ffDb9', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: even better than cocktail friday ! http://is.gd/ffDb9\nAnswer: ', 'responses': ['[]', '[]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {}, 'avg': 0}}
{'idx': '218', 'sentence': 'Going to the country fair today :)', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Going to the country fair today :)\nAnswer: ', 'responses': ['[]', '[]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {}, 'avg': 0}}
{'idx': '219', 'sentence': "@angelajames @roxannestclaire I have n't tried MAC . Next time !", 'label': "{'MAC': 'corporation'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @angelajames @roxannestclaire I have n\'t tried MAC . Next time !\nAnswer: ', 'responses': ['[{"MAC": "product"}]', '[{"MAC": "product"}]', '[{"MAC": "product"}]', '[]', '[]'], 'prediction_per_consist': [{'MAC': 'product'}, {'MAC': 'product'}, {'MAC': 'product'}, {}, {}], 'prediction': {'MAC': 'product'}, 'consistency_score': {'entities': {('MAC', 'product'): 3}, 'avg': 3.0}, 'consistency_score_SC_all_ans': {'entities': {('MAC', 'product'): 3}, 'avg': 3.0}}
{'idx': '220', 'sentence': 'RT @CantBeliebIt : When Justin gets a girlfriend That Should Be Me is gonna be #1 on iTunes .', 'label': "{'Justin': 'person', 'iTunes': 'product'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: RT @CantBeliebIt : When Justin gets a girlfriend That Should Be Me is gonna be #1 on iTunes .\nAnswer: ', 'responses': ['[{"Justin": "person"}, {"That Should Be Me": "creative-work"}, {"iTunes": "product"}]', '[{"Justin": "person"}, {"That Should Be Me": "creative-work"}, {"iTunes": "product"}]', '[{"Justin": "person"}, {"That Should Be Me": "creative-work"}, {"iTunes": "product"}]', '[{"Justin": "person"}, {"That Should Be Me": "creative-work"}, {"iTunes": "product"}]', '[{"Justin": "person"}, {"That Should Be Me": "creative-work"}, {"iTunes": "product"}]'], 'prediction_per_consist': [{'Justin': 'person', 'That Should Be Me': 'creative-work', 'iTunes': 'product'}, {'Justin': 'person', 'That Should Be Me': 'creative-work', 'iTunes': 'product'}, {'Justin': 'person', 'That Should Be Me': 'creative-work', 'iTunes': 'product'}, {'Justin': 'person', 'That Should Be Me': 'creative-work', 'iTunes': 'product'}, {'Justin': 'person', 'That Should Be Me': 'creative-work', 'iTunes': 'product'}], 'prediction': {'Justin': 'person', 'That Should Be Me': 'creative-work', 'iTunes': 'product'}, 'consistency_score': {'entities': {('Justin', 'person'): 5, ('That Should Be Me', 'creative-work'): 5, ('iTunes', 'product'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Justin', 'person'): 5, ('That Should Be Me', 'creative-work'): 5, ('iTunes', 'product'): 5}, 'avg': 5.0}}
{'idx': '221', 'sentence': "RT @BorisKodjoe : Okaaay ! RT @NBC_Undercovers : Want a chance 2 meet Boris Kodjoe ? He'll be in NYC for a meet n greet next Wednesday ! http ...", 'label': "{'Boris Kodjoe': 'person', 'NYC': 'location'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: RT @BorisKodjoe : Okaaay ! RT @NBC_Undercovers : Want a chance 2 meet Boris Kodjoe ? He\'ll be in NYC for a meet n greet next Wednesday ! http ...\nAnswer: ', 'responses': ['[{"Boris Kodjoe": "person"}, {"NYC": "location"}]', '[{"Boris Kodjoe": "person"}, {"NBC_Undercovers": "creative-work"}, {"NYC": "location"}]', '[{"Boris Kodjoe": "person"}, {"NBC_Undercovers": "creative-work"}, {"NYC": "location"}]', '[{"Boris Kodjoe": "person"}, {"NBC_Undercovers": "group"}, {"NYC": "location"}]', '[{"Boris Kodjoe": "person"}, {"NBC_Undercovers": "group"}, {"NYC": "location"}]'], 'prediction_per_consist': [{'Boris Kodjoe': 'person', 'NYC': 'location'}, {'Boris Kodjoe': 'person', 'NBC_Undercovers': 'creative-work', 'NYC': 'location'}, {'Boris Kodjoe': 'person', 'NBC_Undercovers': 'creative-work', 'NYC': 'location'}, {'Boris Kodjoe': 'person', 'NBC_Undercovers': 'group', 'NYC': 'location'}, {'Boris Kodjoe': 'person', 'NBC_Undercovers': 'group', 'NYC': 'location'}], 'prediction': {'Boris Kodjoe': 'person', 'NYC': 'location', 'NBC_Undercovers': 'creative-work'}, 'consistency_score': {'entities': {('Boris Kodjoe', 'person'): 5, ('NYC', 'location'): 5, ('NBC_Undercovers', 'creative-work'): 2}, 'avg': 4.0}, 'consistency_score_SC_all_ans': {'entities': {('Boris Kodjoe', 'person'): 5, ('NYC', 'location'): 5, ('NBC_Undercovers', 'creative-work'): 2, ('NBC_Undercovers', 'group'): 2}, 'avg': 3.5}}
{'idx': '222', 'sentence': 'OMFresh man he has a body yes i finally saw it today lolz during gym he was lifting up his shirt ;) #TeamWonder', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: OMFresh man he has a body yes i finally saw it today lolz during gym he was lifting up his shirt ;) #TeamWonder\nAnswer: ', 'responses': ['[{"OMFresh man": "person"}, {"TeamWonder": "group"}]', '[{"OMFresh": "group"}, {"TeamWonder": "group"}]', '[{"OMFresh man": "person"}, {"TeamWonder": "group"}]', '[{"OMFresh man": "person"}, {"TeamWonder": "group"}]', '[{"OMFresh": "corporation"}, {"TeamWonder": "group"}]'], 'prediction_per_consist': [{'OMFresh man': 'person', 'TeamWonder': 'group'}, {'OMFresh': 'group', 'TeamWonder': 'group'}, {'OMFresh man': 'person', 'TeamWonder': 'group'}, {'OMFresh man': 'person', 'TeamWonder': 'group'}, {'OMFresh': 'corporation', 'TeamWonder': 'group'}], 'prediction': {'OMFresh man': 'person', 'TeamWonder': 'group'}, 'consistency_score': {'entities': {('OMFresh man', 'person'): 3, ('TeamWonder', 'group'): 5}, 'avg': 4.0}, 'consistency_score_SC_all_ans': {'entities': {('OMFresh man', 'person'): 3, ('TeamWonder', 'group'): 5, ('OMFresh', 'group'): 1, ('OMFresh', 'corporation'): 1}, 'avg': 2.5}}
{'idx': '223', 'sentence': '@jaredleto ... ive been to 13 30stm concerts now and you never got me on stage during/before kings and queens :( ((', 'label': "{'30stm': 'group', 'kings and queens': 'group'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @jaredleto ... ive been to 13 30stm concerts now and you never got me on stage during/before kings and queens :( ((\nAnswer: ', 'responses': ['[{"jaredleto": "person"}, {"kings and queens": "creative-work"}]', '[{"jaredleto": "person"}, {"kings and queens": "creative-work"}]', '[{"jaredleto": "person"}, {"kings and queens": "creative-work"}]', '[{"jaredleto": "person"}, {"kings and queens": "creative-work"}]', '[{"jaredleto": "person"}, {"kings and queens": "creative-work"}]'], 'prediction_per_consist': [{'jaredleto': 'person', 'kings and queens': 'creative-work'}, {'jaredleto': 'person', 'kings and queens': 'creative-work'}, {'jaredleto': 'person', 'kings and queens': 'creative-work'}, {'jaredleto': 'person', 'kings and queens': 'creative-work'}, {'jaredleto': 'person', 'kings and queens': 'creative-work'}], 'prediction': {'jaredleto': 'person', 'kings and queens': 'creative-work'}, 'consistency_score': {'entities': {('jaredleto', 'person'): 5, ('kings and queens', 'creative-work'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('jaredleto', 'person'): 5, ('kings and queens', 'creative-work'): 5}, 'avg': 5.0}}
{'idx': '224', 'sentence': 'Halo Reach was a bit crap tonight', 'label': "{'Halo Reach': 'product'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Halo Reach was a bit crap tonight\nAnswer: ', 'responses': ['[{"Halo Reach": "creative-work"}]', '[{"Halo Reach": "creative-work"}]', '[{"Halo Reach": "creative-work"}]', '[{"Halo Reach": "creative-work"}]', '[{"Halo Reach": "product"}]'], 'prediction_per_consist': [{'Halo Reach': 'creative-work'}, {'Halo Reach': 'creative-work'}, {'Halo Reach': 'creative-work'}, {'Halo Reach': 'creative-work'}, {'Halo Reach': 'product'}], 'prediction': {'Halo Reach': 'creative-work'}, 'consistency_score': {'entities': {('Halo Reach', 'creative-work'): 4}, 'avg': 4.0}, 'consistency_score_SC_all_ans': {'entities': {('Halo Reach', 'creative-work'): 4, ('Halo Reach', 'product'): 1}, 'avg': 2.5}}
{'idx': '225', 'sentence': 'George N . Parks , UMass band director , dies after performance in Ohio : George N . Parks , for 33 years the dire ... http://tinyurl.com/2femvgq', 'label': "{'George N . Parks': 'person', 'UMass': 'corporation', 'Ohio': 'location'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: George N . Parks , UMass band director , dies after performance in Ohio : George N . Parks , for 33 years the dire ... http://tinyurl.com/2femvgq\nAnswer: ', 'responses': ['[{"George N. Parks": "person"}, {"Ohio": "location"}]', '[{"George N. Parks": "person"}, {"Ohio": "location"}]', '[{"George N . Parks": "person"}, {"Ohio": "location"}, {"UMass": "corporation"}]', '[{"George N . Parks": "person"}, {"UMass": "corporation"}, {"Ohio": "location"}]', '[{"George N . Parks": "person"}, {"Ohio": "location"}]'], 'prediction_per_consist': [{'George N. Parks': 'person', 'Ohio': 'location'}, {'George N. Parks': 'person', 'Ohio': 'location'}, {'George N . Parks': 'person', 'Ohio': 'location', 'UMass': 'corporation'}, {'George N . Parks': 'person', 'UMass': 'corporation', 'Ohio': 'location'}, {'George N . Parks': 'person', 'Ohio': 'location'}], 'prediction': {'Ohio': 'location', 'George N . Parks': 'person'}, 'consistency_score': {'entities': {('Ohio', 'location'): 5, ('George N . Parks', 'person'): 3}, 'avg': 4.0}, 'consistency_score_SC_all_ans': {'entities': {('George N. Parks', 'person'): 2, ('Ohio', 'location'): 5, ('George N . Parks', 'person'): 3, ('UMass', 'corporation'): 2}, 'avg': 3.0}}
{'idx': '226', 'sentence': 'yupp ! RT @TrentShelton have u ever met some1 that when u tell a story THEY HAVE to tell their story 2 overshadow yours to feel superior', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: yupp ! RT @TrentShelton have u ever met some1 that when u tell a story THEY HAVE to tell their story 2 overshadow yours to feel superior\nAnswer: ', 'responses': ['[{"TrentShelton": "person"}]', '[{"TrentShelton": "person"}]', '[{"TrentShelton": "person"}]', '[{"TrentShelton": "person"}]', '[{"TrentShelton": "person"}]'], 'prediction_per_consist': [{'TrentShelton': 'person'}, {'TrentShelton': 'person'}, {'TrentShelton': 'person'}, {'TrentShelton': 'person'}, {'TrentShelton': 'person'}], 'prediction': {'TrentShelton': 'person'}, 'consistency_score': {'entities': {('TrentShelton', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('TrentShelton', 'person'): 5}, 'avg': 5.0}}
{'idx': '227', 'sentence': 'After 2 months not even a word . Guess ure fine .. thanks for being nothing but a fake . Seriously cycling ?', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: After 2 months not even a word . Guess ure fine .. thanks for being nothing but a fake . Seriously cycling ?\nAnswer: ', 'responses': ['[{"fake": "group"}]', '[{"fake": "creative-work"}]', '[]', '[{"fake": "group"}]', '[{"fake": "creative-work"}]'], 'prediction_per_consist': [{'fake': 'group'}, {'fake': 'creative-work'}, {}, {'fake': 'group'}, {'fake': 'creative-work'}], 'prediction': {'fake': 'group'}, 'consistency_score': {'entities': {('fake', 'group'): 2}, 'avg': 2.0}, 'consistency_score_SC_all_ans': {'entities': {('fake', 'group'): 2, ('fake', 'creative-work'): 2}, 'avg': 2.0}}
{'idx': '228', 'sentence': 'Quick Question : Chink-A-Link Have You Ever Scratched Before ? Lls', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Quick Question : Chink-A-Link Have You Ever Scratched Before ? Lls\nAnswer: ', 'responses': ['[{"Chink-A-Link": "product"}]', '[{"Chink-A-Link": "product"}]', '[{"Chink-A-Link": "creative-work"}]', '[{"Chink-A-Link": "product"}]', '[{"Chink-A-Link": "creative-work"}]'], 'prediction_per_consist': [{'Chink-A-Link': 'product'}, {'Chink-A-Link': 'product'}, {'Chink-A-Link': 'creative-work'}, {'Chink-A-Link': 'product'}, {'Chink-A-Link': 'creative-work'}], 'prediction': {'Chink-A-Link': 'product'}, 'consistency_score': {'entities': {('Chink-A-Link', 'product'): 3}, 'avg': 3.0}, 'consistency_score_SC_all_ans': {'entities': {('Chink-A-Link', 'product'): 3, ('Chink-A-Link', 'creative-work'): 2}, 'avg': 2.5}}
{'idx': '229', 'sentence': "Ugh I DO N'T HAVE MY EARPHONES I GUESS I WO N'T B TALKING AND DRIVING TODAY LOL .... Excuses Excuses Excuses SMH", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Ugh I DO N\'T HAVE MY EARPHONES I GUESS I WO N\'T B TALKING AND DRIVING TODAY LOL .... Excuses Excuses Excuses SMH\nAnswer: ', 'responses': ['[]', '[]', '[]', '[{"EARPHONES": "product"}]', '[]'], 'prediction_per_consist': [{}, {}, {}, {'EARPHONES': 'product'}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {('EARPHONES', 'product'): 1}, 'avg': 1.0}}
{'idx': '230', 'sentence': '@sardesairajdeep I can see three kinds of reactions after Ayodhya verdict .', 'label': "{'Ayodhya': 'person'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @sardesairajdeep I can see three kinds of reactions after Ayodhya verdict .\nAnswer: ', 'responses': ['[{"sardesairajdeep": "person"}, {"Ayodhya": "location"}]', '[{"sardesairajdeep": "person"}, {"Ayodhya": "location"}]', '[{"sardesairajdeep": "person"}, {"Ayodhya": "location"}]', '[{"sardesairajdeep": "person"}, {"Ayodhya": "location"}]', '[{"sardesairajdeep": "person"}, {"Ayodhya": "location"}]'], 'prediction_per_consist': [{'sardesairajdeep': 'person', 'Ayodhya': 'location'}, {'sardesairajdeep': 'person', 'Ayodhya': 'location'}, {'sardesairajdeep': 'person', 'Ayodhya': 'location'}, {'sardesairajdeep': 'person', 'Ayodhya': 'location'}, {'sardesairajdeep': 'person', 'Ayodhya': 'location'}], 'prediction': {'sardesairajdeep': 'person', 'Ayodhya': 'location'}, 'consistency_score': {'entities': {('sardesairajdeep', 'person'): 5, ('Ayodhya', 'location'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('sardesairajdeep', 'person'): 5, ('Ayodhya', 'location'): 5}, 'avg': 5.0}}
{'idx': '231', 'sentence': "Checking out this weeks tell ' em Steve Dave Podcast", 'label': "{'Steve Dave': 'person'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Checking out this weeks tell \' em Steve Dave Podcast\nAnswer: ', 'responses': ['[{"Steve Dave Podcast": "creative-work"}]', '[{"Steve Dave Podcast": "creative-work"}]', '[{"Steve Dave Podcast": "creative-work"}]', '[{"Steve Dave Podcast": "creative-work"}]', '[]'], 'prediction_per_consist': [{'Steve Dave Podcast': 'creative-work'}, {'Steve Dave Podcast': 'creative-work'}, {'Steve Dave Podcast': 'creative-work'}, {'Steve Dave Podcast': 'creative-work'}, {}], 'prediction': {'Steve Dave Podcast': 'creative-work'}, 'consistency_score': {'entities': {('Steve Dave Podcast', 'creative-work'): 4}, 'avg': 4.0}, 'consistency_score_SC_all_ans': {'entities': {('Steve Dave Podcast', 'creative-work'): 4}, 'avg': 4.0}}
{'idx': '232', 'sentence': 'RT @Sn00ki : Haha yes !!! I love that you knew that :) RT @trishamelissa @Sn00ki Is phenomenal the word of the day ?', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: RT @Sn00ki : Haha yes !!! I love that you knew that :) RT @trishamelissa @Sn00ki Is phenomenal the word of the day ?\nAnswer: ', 'responses': ['[]', '[]', '[{"Sn00ki": "person"}, {"trishamelissa": "person"}]', '[{"Sn00ki": "person"}, {"trishamelissa": "person"}]', '[]'], 'prediction_per_consist': [{}, {}, {'Sn00ki': 'person', 'trishamelissa': 'person'}, {'Sn00ki': 'person', 'trishamelissa': 'person'}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {('Sn00ki', 'person'): 2, ('trishamelissa', 'person'): 2}, 'avg': 2.0}}
{'idx': '233', 'sentence': "New Trailer For Platinum Games ' Vanquish for PS3 , Xbox 360 : by Widro - September 17 , 2010 | Email the author Direc ... http://bit.ly/aCPM2x", 'label': "{'Vanquish': 'product', 'PS3': 'product', 'Xbox 360': 'product', 'Widro': 'corporation'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: New Trailer For Platinum Games \' Vanquish for PS3 , Xbox 360 : by Widro - September 17 , 2010 | Email the author Direc ... http://bit.ly/aCPM2x\nAnswer: ', 'responses': ['[{"Platinum Games": "corporation"}, {"Vanquish": "product"}, {"PS3": "product"}, {"Xbox 360": "product"}, {"Widro": "person"}]', '[{"Platinum Games": "corporation"}, {"Vanquish": "creative-work"}, {"PS3": "product"}, {"Xbox 360": "product"}, {"Widro": "person"}]', '[{"Platinum Games": "corporation"}, {"Vanquish": "product"}, {"PS3": "product"}, {"Xbox 360": "product"}, {"Widro": "person"}]', '[{"Platinum Games": "corporation"}, {"Vanquish": "product"}, {"PS3": "product"}, {"Xbox 360": "product"}, {"Widro": "person"}]', '[{"Platinum Games": "corporation"}, {"Vanquish": "product"}, {"PS3": "product"}, {"Xbox 360": "product"}, {"Widro": "person"}]'], 'prediction_per_consist': [{'Platinum Games': 'corporation', 'Vanquish': 'product', 'PS3': 'product', 'Xbox 360': 'product', 'Widro': 'person'}, {'Platinum Games': 'corporation', 'Vanquish': 'creative-work', 'PS3': 'product', 'Xbox 360': 'product', 'Widro': 'person'}, {'Platinum Games': 'corporation', 'Vanquish': 'product', 'PS3': 'product', 'Xbox 360': 'product', 'Widro': 'person'}, {'Platinum Games': 'corporation', 'Vanquish': 'product', 'PS3': 'product', 'Xbox 360': 'product', 'Widro': 'person'}, {'Platinum Games': 'corporation', 'Vanquish': 'product', 'PS3': 'product', 'Xbox 360': 'product', 'Widro': 'person'}], 'prediction': {'Platinum Games': 'corporation', 'Vanquish': 'product', 'PS3': 'product', 'Xbox 360': 'product', 'Widro': 'person'}, 'consistency_score': {'entities': {('Platinum Games', 'corporation'): 5, ('Vanquish', 'product'): 4, ('PS3', 'product'): 5, ('Xbox 360', 'product'): 5, ('Widro', 'person'): 5}, 'avg': 4.8}, 'consistency_score_SC_all_ans': {'entities': {('Platinum Games', 'corporation'): 5, ('Vanquish', 'product'): 4, ('PS3', 'product'): 5, ('Xbox 360', 'product'): 5, ('Widro', 'person'): 5, ('Vanquish', 'creative-work'): 1}, 'avg': 4.166666666666667}}
{'idx': '234', 'sentence': "@playavolta haha it 's not that bad now but when i was little i used to freak out so i would use the chewables that tasted like chalk .", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @playavolta haha it \'s not that bad now but when i was little i used to freak out so i would use the chewables that tasted like chalk .\nAnswer: ', 'responses': ['[]', '[]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {}, 'avg': 0}}
{'idx': '235', 'sentence': 'Whats goin on ( in tally ) tonight twitter !!', 'label': "{'twitter': 'corporation'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Whats goin on ( in tally ) tonight twitter !!\nAnswer: ', 'responses': ['[{"tally": "location"}]', '[{"tally": "location"}, {"twitter": "group"}]', '[{"tally": "location"}]', '[{"twitter": "group"}]', '[{"tally": "location"}]'], 'prediction_per_consist': [{'tally': 'location'}, {'tally': 'location', 'twitter': 'group'}, {'tally': 'location'}, {'twitter': 'group'}, {'tally': 'location'}], 'prediction': {'tally': 'location'}, 'consistency_score': {'entities': {('tally', 'location'): 4}, 'avg': 4.0}, 'consistency_score_SC_all_ans': {'entities': {('tally', 'location'): 4, ('twitter', 'group'): 2}, 'avg': 3.0}}
{'idx': '236', 'sentence': 'Soulja Boy | TheDeAndreWay . com - The DeAndre Way in stores Nov 2 , 2010 http://t.co/8XvVWHz via @SouljaBoy', 'label': "{'Soulja Boy': 'person', 'TheDeAndreWay': 'creative-work', 'The DeAndre Way': 'creative-work'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Soulja Boy | TheDeAndreWay . com - The DeAndre Way in stores Nov 2 , 2010 http://t.co/8XvVWHz via @SouljaBoy\nAnswer: ', 'responses': ['[{"Soulja Boy": "person"}, {"TheDeAndreWay": "creative-work"}, {"Nov 2 , 2010": "product"}, {"SouljaBoy": "person"}]', '[{"Soulja Boy": "person"}, {"TheDeAndreWay": "product"}, {"The DeAndre Way": "product"}]', '[{"Soulja Boy": "person"}, {"TheDeAndreWay": "creative-work"}, {"DeAndre Way": "product"}]', '[{"Soulja Boy": "person"}, {"TheDeAndreWay": "creative-work"}]', '[{"Soulja Boy": "person"}, {"TheDeAndreWay": "creative-work"}, {"The DeAndre Way": "creative-work"}]'], 'prediction_per_consist': [{'Soulja Boy': 'person', 'TheDeAndreWay': 'creative-work', 'Nov 2 , 2010': 'product', 'SouljaBoy': 'person'}, {'Soulja Boy': 'person', 'TheDeAndreWay': 'product', 'The DeAndre Way': 'product'}, {'Soulja Boy': 'person', 'TheDeAndreWay': 'creative-work', 'DeAndre Way': 'product'}, {'Soulja Boy': 'person', 'TheDeAndreWay': 'creative-work'}, {'Soulja Boy': 'person', 'TheDeAndreWay': 'creative-work', 'The DeAndre Way': 'creative-work'}], 'prediction': {'Soulja Boy': 'person', 'TheDeAndreWay': 'creative-work'}, 'consistency_score': {'entities': {('Soulja Boy', 'person'): 5, ('TheDeAndreWay', 'creative-work'): 4}, 'avg': 4.5}, 'consistency_score_SC_all_ans': {'entities': {('Soulja Boy', 'person'): 5, ('TheDeAndreWay', 'creative-work'): 4, ('Nov 2 , 2010', 'product'): 1, ('SouljaBoy', 'person'): 1, ('TheDeAndreWay', 'product'): 1, ('The DeAndre Way', 'product'): 1, ('DeAndre Way', 'product'): 1, ('The DeAndre Way', 'creative-work'): 1}, 'avg': 1.875}}
{'idx': '237', 'sentence': "Damn all mi niggas havin babies on meh . Nope nope ! I not da step mommy . Time for a new team . I'm talkin #allstarlineup", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Damn all mi niggas havin babies on meh . Nope nope ! I not da step mommy . Time for a new team . I\'m talkin #allstarlineup\nAnswer: ', 'responses': ['[{"allstarlineup": "group"}]', '[{"allstarlineup": "group"}]', '[{"allstarlineup": "group"}]', '[{"allstarlineup": "group"}]', '[{"allstarlineup": "group"}]'], 'prediction_per_consist': [{'allstarlineup': 'group'}, {'allstarlineup': 'group'}, {'allstarlineup': 'group'}, {'allstarlineup': 'group'}, {'allstarlineup': 'group'}], 'prediction': {'allstarlineup': 'group'}, 'consistency_score': {'entities': {('allstarlineup', 'group'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('allstarlineup', 'group'): 5}, 'avg': 5.0}}
{'idx': '238', 'sentence': 'RT @Sexstrology : Pisces tend to escape into fantasy and day dreams . There they are free .', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: RT @Sexstrology : Pisces tend to escape into fantasy and day dreams . There they are free .\nAnswer: ', 'responses': ['[{"Pisces": "group"}]', '[{"Pisces": "group"}]', '[{"Pisces": "group"}]', '[{"Pisces": "group"}]', '[{"Pisces": "group"}]'], 'prediction_per_consist': [{'Pisces': 'group'}, {'Pisces': 'group'}, {'Pisces': 'group'}, {'Pisces': 'group'}, {'Pisces': 'group'}], 'prediction': {'Pisces': 'group'}, 'consistency_score': {'entities': {('Pisces', 'group'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Pisces', 'group'): 5}, 'avg': 5.0}}
{'idx': '239', 'sentence': 'RT @medeadly : 50 tyson droppin a video before you bumass rappers .... i bet they hella mad ... yall niggas been rappin for years and still a ...', 'label': "{'50 tyson': 'person'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: RT @medeadly : 50 tyson droppin a video before you bumass rappers .... i bet they hella mad ... yall niggas been rappin for years and still a ...\nAnswer: ', 'responses': ['[{"50 tyson": "person"}]', '[{"50 tyson": "person"}]', '[{"50 tyson": "person"}]', '[{"50 tyson": "person"}]', '[{"50 tyson": "person"}]'], 'prediction_per_consist': [{'50 tyson': 'person'}, {'50 tyson': 'person'}, {'50 tyson': 'person'}, {'50 tyson': 'person'}, {'50 tyson': 'person'}], 'prediction': {'50 tyson': 'person'}, 'consistency_score': {'entities': {('50 tyson', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('50 tyson', 'person'): 5}, 'avg': 5.0}}
{'idx': '240', 'sentence': 'iz gettin a eye full of pussys tonight .', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: iz gettin a eye full of pussys tonight .\nAnswer: ', 'responses': ['[]', '[{"pussys": "person"}]', '[].', '[]', '[]'], 'prediction_per_consist': [{}, {'pussys': 'person'}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {('pussys', 'person'): 1}, 'avg': 1.0}}
{'idx': '241', 'sentence': '@Loserface_Laura when mike lets me know , I will let you know . I mean everyone might just switch out a lot .', 'label': "{'mike': 'person'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @Loserface_Laura when mike lets me know , I will let you know . I mean everyone might just switch out a lot .\nAnswer: ', 'responses': ['[{"Loserface_Laura": "person"}, {"mike": "person"}]', '[{"Loserface_Laura": "person"}, {"mike": "person"}]', '[{"Loserface_Laura": "person"}, {"mike": "person"}]', '[{"Loserface_Laura": "person"}, {"mike": "person"}]', '[{"Loserface_Laura": "person"}, {"mike": "person"}]'], 'prediction_per_consist': [{'Loserface_Laura': 'person', 'mike': 'person'}, {'Loserface_Laura': 'person', 'mike': 'person'}, {'Loserface_Laura': 'person', 'mike': 'person'}, {'Loserface_Laura': 'person', 'mike': 'person'}, {'Loserface_Laura': 'person', 'mike': 'person'}], 'prediction': {'Loserface_Laura': 'person', 'mike': 'person'}, 'consistency_score': {'entities': {('Loserface_Laura', 'person'): 5, ('mike', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Loserface_Laura', 'person'): 5, ('mike', 'person'): 5}, 'avg': 5.0}}
{'idx': '242', 'sentence': 'RT @Gina_says_xo : Football and partiesss . This is the only thing I love about the school year . &lt; 3', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: RT @Gina_says_xo : Football and partiesss . This is the only thing I love about the school year . &lt; 3\nAnswer: ', 'responses': ['[]', '[]', '[{"Gina_says_xo": "person"}]', '[{"Gina_says_xo": "person"}]', '[{"Gina_says_xo": "person"}]'], 'prediction_per_consist': [{}, {}, {'Gina_says_xo': 'person'}, {'Gina_says_xo': 'person'}, {'Gina_says_xo': 'person'}], 'prediction': {'Gina_says_xo': 'person'}, 'consistency_score': {'entities': {('Gina_says_xo', 'person'): 3}, 'avg': 3.0}, 'consistency_score_SC_all_ans': {'entities': {('Gina_says_xo', 'person'): 3}, 'avg': 3.0}}
{'idx': '243', 'sentence': "Salem Daily Dish// Chef 's Choice Menu at Spoons NW Bistro for tonight ...: Caramalized Onion Tarthousemade tart wit ... http://bit.ly/98QmI9", 'label': "{'Salem': 'location', 'Spoons NW Bistro': 'location'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Salem Daily Dish// Chef \'s Choice Menu at Spoons NW Bistro for tonight ...: Caramalized Onion Tarthousemade tart wit ... http://bit.ly/98QmI9\nAnswer: ', 'responses': ['[{"Salem Daily Dish": "creative-work"}, {"Spoons NW Bistro": "location"}, {"Caramalized Onion Tarthousemade tart": "product"}]', '[{"Salem Daily Dish": "creative-work"}, {"Spoons NW Bistro": "location"}]', '[{"Salem Daily Dish": "creative-work"}, {"Spoons NW Bistro": "location"}]', '[{"Salem Daily Dish": "creative-work"}, {"Spoons NW Bistro": "location"}, {"Caramalized Onion Tart": "product"}]', '[{"Salem Daily Dish": "creative-work"}, {"Spoons NW Bistro": "location"}, {"Caramalized Onion Tart": "product"}]'], 'prediction_per_consist': [{'Salem Daily Dish': 'creative-work', 'Spoons NW Bistro': 'location', 'Caramalized Onion Tarthousemade tart': 'product'}, {'Salem Daily Dish': 'creative-work', 'Spoons NW Bistro': 'location'}, {'Salem Daily Dish': 'creative-work', 'Spoons NW Bistro': 'location'}, {'Salem Daily Dish': 'creative-work', 'Spoons NW Bistro': 'location', 'Caramalized Onion Tart': 'product'}, {'Salem Daily Dish': 'creative-work', 'Spoons NW Bistro': 'location', 'Caramalized Onion Tart': 'product'}], 'prediction': {'Salem Daily Dish': 'creative-work', 'Spoons NW Bistro': 'location'}, 'consistency_score': {'entities': {('Salem Daily Dish', 'creative-work'): 5, ('Spoons NW Bistro', 'location'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Salem Daily Dish', 'creative-work'): 5, ('Spoons NW Bistro', 'location'): 5, ('Caramalized Onion Tarthousemade tart', 'product'): 1, ('Caramalized Onion Tart', 'product'): 2}, 'avg': 3.25}}
{'idx': '244', 'sentence': 'Looks like we will be living in the studio for the next couple of months', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Looks like we will be living in the studio for the next couple of months\nAnswer: ', 'responses': ['[]', '[]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {}, 'avg': 0}}
{'idx': '245', 'sentence': "@johngirvin you've been working on that all night ! I suspect you may even have opened a git manual .", 'label': "{'git': 'product'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @johngirvin you\'ve been working on that all night ! I suspect you may even have opened a git manual .\nAnswer: ', 'responses': ['[{"johngirvin": "person"}, {"git manual": "product"}]', '[{"johngirvin": "person"}]', '[{"johngirvin": "person"}, {"git manual": "product"}]', '[{"johngirvin": "person"}]', '[{"johngirvin": "person"}, {"git": "product"}]'], 'prediction_per_consist': [{'johngirvin': 'person', 'git manual': 'product'}, {'johngirvin': 'person'}, {'johngirvin': 'person', 'git manual': 'product'}, {'johngirvin': 'person'}, {'johngirvin': 'person', 'git': 'product'}], 'prediction': {'johngirvin': 'person'}, 'consistency_score': {'entities': {('johngirvin', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('johngirvin', 'person'): 5, ('git manual', 'product'): 2, ('git', 'product'): 1}, 'avg': 2.6666666666666665}}
{'idx': '246', 'sentence': '@bakontrack I was on a successful business trip !!! I had no time to tweet !!!', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @bakontrack I was on a successful business trip !!! I had no time to tweet !!!\nAnswer: ', 'responses': ['[{"bakontrack": "person"}]', '[{"bakontrack": "person"}]', '[{"bakontrack": "person"}]', '[{"bakontrack": "person"}]', '[{"bakontrack": "person"}]'], 'prediction_per_consist': [{'bakontrack': 'person'}, {'bakontrack': 'person'}, {'bakontrack': 'person'}, {'bakontrack': 'person'}, {'bakontrack': 'person'}], 'prediction': {'bakontrack': 'person'}, 'consistency_score': {'entities': {('bakontrack', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('bakontrack', 'person'): 5}, 'avg': 5.0}}
{'idx': '247', 'sentence': 'datjayycarterkidd asked : omg hey sir ?? omg what color are oyu eyes ?? hit up the ask box when you can !! http://tumblr.com/xn3iud2q8', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: datjayycarterkidd asked : omg hey sir ?? omg what color are oyu eyes ?? hit up the ask box when you can !! http://tumblr.com/xn3iud2q8\nAnswer: ', 'responses': ['[{"datjayycarterkidd": "person"}]', '[{"datjayycarterkidd": "person"}]', '[{"datjayycarterkidd": "person"}]', '[{"datjayycarterkidd": "person"}]', '[{"datjayycarterkidd": "person"}]'], 'prediction_per_consist': [{'datjayycarterkidd': 'person'}, {'datjayycarterkidd': 'person'}, {'datjayycarterkidd': 'person'}, {'datjayycarterkidd': 'person'}, {'datjayycarterkidd': 'person'}], 'prediction': {'datjayycarterkidd': 'person'}, 'consistency_score': {'entities': {('datjayycarterkidd', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('datjayycarterkidd', 'person'): 5}, 'avg': 5.0}}
{'idx': '248', 'sentence': 'Why Your Homepage May Matter Less Than You Think http://t.co/dNyFfPP via @TMGmedia', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Why Your Homepage May Matter Less Than You Think http://t.co/dNyFfPP via @TMGmedia\nAnswer: ', 'responses': ['[{"TMGmedia": "group"}]', '[{"TMGmedia": "group"}]', '[{"TMGmedia": "group"}]', '[{"TMGmedia": "group"}]', '[{"TMGmedia": "group"}]'], 'prediction_per_consist': [{'TMGmedia': 'group'}, {'TMGmedia': 'group'}, {'TMGmedia': 'group'}, {'TMGmedia': 'group'}, {'TMGmedia': 'group'}], 'prediction': {'TMGmedia': 'group'}, 'consistency_score': {'entities': {('TMGmedia', 'group'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('TMGmedia', 'group'): 5}, 'avg': 5.0}}
{'idx': '249', 'sentence': '@angelportugues LMAO ! When is tht one day ?: P', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @angelportugues LMAO ! When is tht one day ?: P\nAnswer: ', 'responses': ['[{"angelportugues": "person"}]', '[{"angelportugues": "person"}]', '[{"angelportugues": "person"}]', '[{"angelportugues": "person"}]', '[]'], 'prediction_per_consist': [{'angelportugues': 'person'}, {'angelportugues': 'person'}, {'angelportugues': 'person'}, {'angelportugues': 'person'}, {}], 'prediction': {'angelportugues': 'person'}, 'consistency_score': {'entities': {('angelportugues', 'person'): 4}, 'avg': 4.0}, 'consistency_score_SC_all_ans': {'entities': {('angelportugues', 'person'): 4}, 'avg': 4.0}}
{'idx': '250', 'sentence': '@emmarose99 hows ur day ?', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @emmarose99 hows ur day ?\nAnswer: ', 'responses': ['[{"emmarose99": "person"}]', '[]', '[]', '[{"emmarose99": "person"}]', '[]'], 'prediction_per_consist': [{'emmarose99': 'person'}, {}, {}, {'emmarose99': 'person'}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {('emmarose99', 'person'): 2}, 'avg': 2.0}}
{'idx': '251', 'sentence': "That 's when you start to laugh . Saying I just want what I can't have . Won't even give me a chance .", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: That \'s when you start to laugh . Saying I just want what I can\'t have . Won\'t even give me a chance .\nAnswer: ', 'responses': ['[]', '[]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {}, 'avg': 0}}
{'idx': '252', 'sentence': 'the tears may have been and gone , but the feeling still stay the same .', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: the tears may have been and gone , but the feeling still stay the same .\nAnswer: ', 'responses': ['[]', '[]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {}, 'avg': 0}}
{'idx': '253', 'sentence': '@BadgerBlogger LOL ! Yes it would have . " Let \'s have one every dang day !"', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @BadgerBlogger LOL ! Yes it would have . " Let \'s have one every dang day !"\nAnswer: ', 'responses': ['[{"BadgerBlogger": "person"}]', '[]', '[{"BadgerBlogger": "person"}]', '[{"BadgerBlogger": "person"}]', '[{"BadgerBlogger": "person"}]'], 'prediction_per_consist': [{'BadgerBlogger': 'person'}, {}, {'BadgerBlogger': 'person'}, {'BadgerBlogger': 'person'}, {'BadgerBlogger': 'person'}], 'prediction': {'BadgerBlogger': 'person'}, 'consistency_score': {'entities': {('BadgerBlogger', 'person'): 4}, 'avg': 4.0}, 'consistency_score_SC_all_ans': {'entities': {('BadgerBlogger', 'person'): 4}, 'avg': 4.0}}
{'idx': '254', 'sentence': "It 's still Friday here so my first #FF goes to @rockmybones - its her birthday today and @Hungryforbones - thank you :)", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: It \'s still Friday here so my first #FF goes to @rockmybones - its her birthday today and @Hungryforbones - thank you :)\nAnswer: ', 'responses': ['[{"rockmybones": "person"}, {"Hungryforbones": "person"}]', '[{"rockmybones": "person"}, {"Hungryforbones": "person"}]', '[{"rockmybones": "person"}, {"Hungryforbones": "person"}]', '[{"rockmybones": "person"}, {"Hungryforbones": "person"}]', '[{"rockmybones": "person"}, {"Hungryforbones": "person"}]'], 'prediction_per_consist': [{'rockmybones': 'person', 'Hungryforbones': 'person'}, {'rockmybones': 'person', 'Hungryforbones': 'person'}, {'rockmybones': 'person', 'Hungryforbones': 'person'}, {'rockmybones': 'person', 'Hungryforbones': 'person'}, {'rockmybones': 'person', 'Hungryforbones': 'person'}], 'prediction': {'rockmybones': 'person', 'Hungryforbones': 'person'}, 'consistency_score': {'entities': {('rockmybones', 'person'): 5, ('Hungryforbones', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('rockmybones', 'person'): 5, ('Hungryforbones', 'person'): 5}, 'avg': 5.0}}
{'idx': '255', 'sentence': 'when did @thecodysimpson last tweet ,? ;)', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: when did @thecodysimpson last tweet ,? ;)\nAnswer: ', 'responses': ['[{"@thecodysimpson": "person"}]', '[{"@thecodysimpson": "person"}]', '[]', '[{"@thecodysimpson": "person"}]', '[]'], 'prediction_per_consist': [{'@thecodysimpson': 'person'}, {'@thecodysimpson': 'person'}, {}, {'@thecodysimpson': 'person'}, {}], 'prediction': {'@thecodysimpson': 'person'}, 'consistency_score': {'entities': {('@thecodysimpson', 'person'): 3}, 'avg': 3.0}, 'consistency_score_SC_all_ans': {'entities': {('@thecodysimpson', 'person'): 3}, 'avg': 3.0}}
{'idx': '256', 'sentence': 'RT @Slijterijmeisje : Kreeg net een bruikbare tip van iemand die vorige week was begonnen met een whiskydieet , hij was nu al 3 dagen kwijt', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: RT @Slijterijmeisje : Kreeg net een bruikbare tip van iemand die vorige week was begonnen met een whiskydieet , hij was nu al 3 dagen kwijt\nAnswer: ', 'responses': ['[{"Slijterijmeisje": "person"}]', '[{"Slijterijmeisje": "person"}]', '[{"Slijterijmeisje": "person"}]', '[{"Slijterijmeisje": "person"}]', '[{"Slijterijmeisje": "person"}]'], 'prediction_per_consist': [{'Slijterijmeisje': 'person'}, {'Slijterijmeisje': 'person'}, {'Slijterijmeisje': 'person'}, {'Slijterijmeisje': 'person'}, {'Slijterijmeisje': 'person'}], 'prediction': {'Slijterijmeisje': 'person'}, 'consistency_score': {'entities': {('Slijterijmeisje', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Slijterijmeisje', 'person'): 5}, 'avg': 5.0}}
{'idx': '257', 'sentence': "Good morning ! Today 's Software Freedom Day . Join us at UP Diliman for a day of great events . Free admission ! http://ow.ly/2FM1n #sfdphils", 'label': "{'UP Diliman': 'location'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Good morning ! Today \'s Software Freedom Day . Join us at UP Diliman for a day of great events . Free admission ! http://ow.ly/2FM1n #sfdphils\nAnswer: ', 'responses': ['[{"Software Freedom Day": "creative-work"}, {"UP Diliman": "location"}]', '[{"Software Freedom Day": "creative-work"}, {"UP Diliman": "location"}]', '[{"Software Freedom Day": "creative-work"}, {"UP Diliman": "location"}]', '[{"Software Freedom Day": "creative-work"}, {"UP Diliman": "location"}]', '[{"Software Freedom Day": "creative-work"}, {"UP Diliman": "location"}]'], 'prediction_per_consist': [{'Software Freedom Day': 'creative-work', 'UP Diliman': 'location'}, {'Software Freedom Day': 'creative-work', 'UP Diliman': 'location'}, {'Software Freedom Day': 'creative-work', 'UP Diliman': 'location'}, {'Software Freedom Day': 'creative-work', 'UP Diliman': 'location'}, {'Software Freedom Day': 'creative-work', 'UP Diliman': 'location'}], 'prediction': {'Software Freedom Day': 'creative-work', 'UP Diliman': 'location'}, 'consistency_score': {'entities': {('Software Freedom Day', 'creative-work'): 5, ('UP Diliman', 'location'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Software Freedom Day', 'creative-work'): 5, ('UP Diliman', 'location'): 5}, 'avg': 5.0}}
{'idx': '258', 'sentence': "No I 'm not saying I 'm sorry One day , maybe 'll meet again No No No No ( 8 )", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: No I \'m not saying I \'m sorry One day , maybe \'ll meet again No No No No ( 8 )\nAnswer: ', 'responses': ['[]', '[]', '[{"No I \'m not saying I \'m sorry One day , maybe \'ll meet again No No No No ( 8 )": "creative-work"}]', '[]', '[{"No I \'m": "person"}]'], 'prediction_per_consist': [{}, {}, {"No I 'm not saying I 'm sorry One day , maybe 'll meet again No No No No ( 8 )": 'creative-work'}, {}, {"No I 'm": 'person'}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {("No I 'm not saying I 'm sorry One day , maybe 'll meet again No No No No ( 8 )", 'creative-work'): 1, ("No I 'm", 'person'): 1}, 'avg': 1.0}}
{'idx': '259', 'sentence': 'Dinner tonight : Gnocchi with Italian Sausage , Swiss Chard and Ripe Tomatoes !', 'label': "{'Gnocchi': 'product', 'Italian Sausage': 'product', 'Swiss Chard': 'product', 'Tomatoes': 'product'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Dinner tonight : Gnocchi with Italian Sausage , Swiss Chard and Ripe Tomatoes !\nAnswer: ', 'responses': ['[{"Italian Sausage": "product"}, {"Swiss Chard": "product"}, {"Ripe Tomatoes": "product"}]', '[{"Gnocchi": "product"}, {"Italian Sausage": "product"}, {"Swiss Chard": "product"}, {"Ripe Tomatoes": "product"}]', '[{"Gnocchi": "product"}, {"Italian Sausage": "product"}, {"Swiss Chard": "product"}, {"Ripe Tomatoes": "product"}]', '[{"Gnocchi": "product"}, {"Italian Sausage": "product"}, {"Swiss Chard": "product"}, {"Ripe Tomatoes": "product"}]', '[{"Gnocchi": "product"}, {"Italian Sausage": "product"}, {"Swiss Chard": "product"}, {"Ripe Tomatoes": "product"}]'], 'prediction_per_consist': [{'Italian Sausage': 'product', 'Swiss Chard': 'product', 'Ripe Tomatoes': 'product'}, {'Gnocchi': 'product', 'Italian Sausage': 'product', 'Swiss Chard': 'product', 'Ripe Tomatoes': 'product'}, {'Gnocchi': 'product', 'Italian Sausage': 'product', 'Swiss Chard': 'product', 'Ripe Tomatoes': 'product'}, {'Gnocchi': 'product', 'Italian Sausage': 'product', 'Swiss Chard': 'product', 'Ripe Tomatoes': 'product'}, {'Gnocchi': 'product', 'Italian Sausage': 'product', 'Swiss Chard': 'product', 'Ripe Tomatoes': 'product'}], 'prediction': {'Italian Sausage': 'product', 'Swiss Chard': 'product', 'Ripe Tomatoes': 'product', 'Gnocchi': 'product'}, 'consistency_score': {'entities': {('Italian Sausage', 'product'): 5, ('Swiss Chard', 'product'): 5, ('Ripe Tomatoes', 'product'): 5, ('Gnocchi', 'product'): 4}, 'avg': 4.75}, 'consistency_score_SC_all_ans': {'entities': {('Italian Sausage', 'product'): 5, ('Swiss Chard', 'product'): 5, ('Ripe Tomatoes', 'product'): 5, ('Gnocchi', 'product'): 4}, 'avg': 4.75}}
{'idx': '260', 'sentence': 'This . RT @bethanyshondark : RT @duchess_rebecca : Twitter is going to be less fun tonight without the snarky Joos . Aw !!', 'label': "{'Twitter': 'corporation'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: This . RT @bethanyshondark : RT @duchess_rebecca : Twitter is going to be less fun tonight without the snarky Joos . Aw !!\nAnswer: ', 'responses': ['[]', '[{"bethanyshondark": "person"}, {"duchess_rebecca": "person"}, {"Twitter": "creative-work"}]', '[]', '[{"bethanyshondark": "person"}, {"duchess_rebecca": "person"}, {"Twitter": "corporation"}]', '[{"Twitter": "corporation"}]'], 'prediction_per_consist': [{}, {'bethanyshondark': 'person', 'duchess_rebecca': 'person', 'Twitter': 'creative-work'}, {}, {'bethanyshondark': 'person', 'duchess_rebecca': 'person', 'Twitter': 'corporation'}, {'Twitter': 'corporation'}], 'prediction': {'Twitter': 'corporation'}, 'consistency_score': {'entities': {('Twitter', 'corporation'): 2}, 'avg': 2.0}, 'consistency_score_SC_all_ans': {'entities': {('bethanyshondark', 'person'): 2, ('duchess_rebecca', 'person'): 2, ('Twitter', 'creative-work'): 1, ('Twitter', 'corporation'): 2}, 'avg': 1.75}}
{'idx': '261', 'sentence': "RT @dengshot Mochi waffles ! @ new Teaze cafe by the library ! Try two for $4 w/ today 's #IndulgeLivingVA deal ! http://tinyurl.com/2fd6yba", 'label': "{'new Teaze cafe': 'location'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: RT @dengshot Mochi waffles ! @ new Teaze cafe by the library ! Try two for $4 w/ today \'s #IndulgeLivingVA deal ! http://tinyurl.com/2fd6yba\nAnswer: ', 'responses': ['[{"dengshot": "person"}, {"Teaze cafe": "location"}, {"IndulgeLivingVA": "group"}]', '[{"Mochi waffles": "product"}, {"Teaze cafe": "location"}, {"IndulgeLivingVA": "group"}]', '[{"Mochi waffles": "product"}, {"Teaze cafe": "location"}, {"IndulgeLivingVA": "group"}]', '[{"Mochi waffles": "product"}, {"Teaze cafe": "location"}, {"IndulgeLivingVA": "group"}]', '[{"Mochi waffles": "product"}, {"Teaze cafe": "location"}, {"IndulgeLivingVA": "group"}]'], 'prediction_per_consist': [{'dengshot': 'person', 'Teaze cafe': 'location', 'IndulgeLivingVA': 'group'}, {'Mochi waffles': 'product', 'Teaze cafe': 'location', 'IndulgeLivingVA': 'group'}, {'Mochi waffles': 'product', 'Teaze cafe': 'location', 'IndulgeLivingVA': 'group'}, {'Mochi waffles': 'product', 'Teaze cafe': 'location', 'IndulgeLivingVA': 'group'}, {'Mochi waffles': 'product', 'Teaze cafe': 'location', 'IndulgeLivingVA': 'group'}], 'prediction': {'Teaze cafe': 'location', 'IndulgeLivingVA': 'group', 'Mochi waffles': 'product'}, 'consistency_score': {'entities': {('Teaze cafe', 'location'): 5, ('IndulgeLivingVA', 'group'): 5, ('Mochi waffles', 'product'): 4}, 'avg': 4.666666666666667}, 'consistency_score_SC_all_ans': {'entities': {('dengshot', 'person'): 1, ('Teaze cafe', 'location'): 5, ('IndulgeLivingVA', 'group'): 5, ('Mochi waffles', 'product'): 4}, 'avg': 3.75}}
{'idx': '262', 'sentence': 'IG | Nieuws : Football Manager 2011 komt op 5 november ( PC ) http://bit.ly/aKe1HL', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: IG | Nieuws : Football Manager 2011 komt op 5 november ( PC ) http://bit.ly/aKe1HL\nAnswer: ', 'responses': ['[{"Football Manager 2011": "product"}, {"PC": "product"}]', '[{"Football Manager 2011": "creative-work"}, {"PC": "product"}]', '[{"Football Manager 2011": "creative-work"}]', '[{"Football Manager 2011": "product"}, {"PC": "product"}]', '[{"Football Manager 2011": "product"}, {"PC": "product"}]'], 'prediction_per_consist': [{'Football Manager 2011': 'product', 'PC': 'product'}, {'Football Manager 2011': 'creative-work', 'PC': 'product'}, {'Football Manager 2011': 'creative-work'}, {'Football Manager 2011': 'product', 'PC': 'product'}, {'Football Manager 2011': 'product', 'PC': 'product'}], 'prediction': {'Football Manager 2011': 'product', 'PC': 'product'}, 'consistency_score': {'entities': {('Football Manager 2011', 'product'): 3, ('PC', 'product'): 4}, 'avg': 3.5}, 'consistency_score_SC_all_ans': {'entities': {('Football Manager 2011', 'product'): 3, ('PC', 'product'): 4, ('Football Manager 2011', 'creative-work'): 2}, 'avg': 3.0}}
{'idx': '263', 'sentence': "I'm being stalked by @thisisiceland . I saw this when I opened flipboard just now . http://yfrog.com/eir70oj", 'label': "{'flipboard': 'corporation'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: I\'m being stalked by @thisisiceland . I saw this when I opened flipboard just now . http://yfrog.com/eir70oj\nAnswer: ', 'responses': ['[{"thisisiceland": "group"}, {"flipboard": "product"}]', '[{"thisisiceland": "group"}, {"flipboard": "product"}]', '[{"thisisiceland": "person"}]', '[{"thisisiceland": "group"}, {"flipboard": "product"}, {"yfrog": "product"}]', '[{"thisisiceland": "group"}, {"flipboard": "product"}, {"yfrog": "product"}]'], 'prediction_per_consist': [{'thisisiceland': 'group', 'flipboard': 'product'}, {'thisisiceland': 'group', 'flipboard': 'product'}, {'thisisiceland': 'person'}, {'thisisiceland': 'group', 'flipboard': 'product', 'yfrog': 'product'}, {'thisisiceland': 'group', 'flipboard': 'product', 'yfrog': 'product'}], 'prediction': {'thisisiceland': 'group', 'flipboard': 'product'}, 'consistency_score': {'entities': {('thisisiceland', 'group'): 4, ('flipboard', 'product'): 4}, 'avg': 4.0}, 'consistency_score_SC_all_ans': {'entities': {('thisisiceland', 'group'): 4, ('flipboard', 'product'): 4, ('thisisiceland', 'person'): 1, ('yfrog', 'product'): 2}, 'avg': 2.75}}
{'idx': '264', 'sentence': "... four fucking years I 've been configuring iBGP and eBGP on Cisco AND Juniper routers for America 's largest wireless ISP ... and I get a 612", 'label': "{'Cisco': 'corporation', 'Juniper': 'corporation', 'America': 'location'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: ... four fucking years I \'ve been configuring iBGP and eBGP on Cisco AND Juniper routers for America \'s largest wireless ISP ... and I get a 612\nAnswer: ', 'responses': ['[{"Cisco": "corporation"}, {"Juniper": "corporation"}, {"America": "location"}, {"ISP": "corporation"}]', '[]', '[{"Cisco": "corporation"}, {"Juniper": "corporation"}, {"America": "location"}, {"ISP": "corporation"}]', '[{"Cisco": "corporation"}, {"Juniper": "corporation"}, {"America": "location"}]', '[{"Cisco": "corporation"}, {"Juniper": "corporation"}, {"America": "location"}]'], 'prediction_per_consist': [{'Cisco': 'corporation', 'Juniper': 'corporation', 'America': 'location', 'ISP': 'corporation'}, {}, {'Cisco': 'corporation', 'Juniper': 'corporation', 'America': 'location', 'ISP': 'corporation'}, {'Cisco': 'corporation', 'Juniper': 'corporation', 'America': 'location'}, {'Cisco': 'corporation', 'Juniper': 'corporation', 'America': 'location'}], 'prediction': {'Cisco': 'corporation', 'Juniper': 'corporation', 'America': 'location'}, 'consistency_score': {'entities': {('Cisco', 'corporation'): 4, ('Juniper', 'corporation'): 4, ('America', 'location'): 4}, 'avg': 4.0}, 'consistency_score_SC_all_ans': {'entities': {('Cisco', 'corporation'): 4, ('Juniper', 'corporation'): 4, ('America', 'location'): 4, ('ISP', 'corporation'): 2}, 'avg': 3.5}}
{'idx': '265', 'sentence': 'RT @RMBWilliams : Here in DC ! About to get some rest ! Looking forward to tonight ! Yes-sir !', 'label': "{'DC': 'location'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: RT @RMBWilliams : Here in DC ! About to get some rest ! Looking forward to tonight ! Yes-sir !\nAnswer: ', 'responses': ['[{"RMBWilliams": "person"}, {"DC": "location"}]', '[{"RMBWilliams": "person"}, {"DC": "location"}]', '[{"DC": "location"}]', '[{"RMBWilliams": "person"}, {"DC": "location"}]', '[{"DC": "location"}]'], 'prediction_per_consist': [{'RMBWilliams': 'person', 'DC': 'location'}, {'RMBWilliams': 'person', 'DC': 'location'}, {'DC': 'location'}, {'RMBWilliams': 'person', 'DC': 'location'}, {'DC': 'location'}], 'prediction': {'RMBWilliams': 'person', 'DC': 'location'}, 'consistency_score': {'entities': {('RMBWilliams', 'person'): 3, ('DC', 'location'): 5}, 'avg': 4.0}, 'consistency_score_SC_all_ans': {'entities': {('RMBWilliams', 'person'): 3, ('DC', 'location'): 5}, 'avg': 4.0}}
{'idx': '266', 'sentence': 'twenty-four days for Costa do Sauipe *-*', 'label': "{'Costa do Sauipe': 'location'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: twenty-four days for Costa do Sauipe *-*\nAnswer: ', 'responses': ['[]', '[{"Costa do Sauipe": "location"}]', '[{"Costa do Sauipe": "location"}]', '[{"Costa do Sauipe": "location"}]', '[{"Costa do Sauipe": "location"}]'], 'prediction_per_consist': [{}, {'Costa do Sauipe': 'location'}, {'Costa do Sauipe': 'location'}, {'Costa do Sauipe': 'location'}, {'Costa do Sauipe': 'location'}], 'prediction': {'Costa do Sauipe': 'location'}, 'consistency_score': {'entities': {('Costa do Sauipe', 'location'): 4}, 'avg': 4.0}, 'consistency_score_SC_all_ans': {'entities': {('Costa do Sauipe', 'location'): 4}, 'avg': 4.0}}
{'idx': '267', 'sentence': '#sp Facebook Job-Hunting App BranchOut Raises $6 Million From Accel And Super Angels : When you want to hang out ... http://migre.me/1kO1K', 'label': "{'Facebook': 'corporation', 'BranchOut': 'product', 'Accel': 'corporation'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: #sp Facebook Job-Hunting App BranchOut Raises $6 Million From Accel And Super Angels : When you want to hang out ... http://migre.me/1kO1K\nAnswer: ', 'responses': ['[{"BranchOut": "product"}, {"Facebook": "corporation"}, {"Accel": "corporation"}]', '[{"Facebook Job-Hunting App BranchOut": "product"}, {"Accel": "corporation"}, {"Super Angels": "group"}]', '[{"Facebook": "corporation"}, {"BranchOut": "product"}, {"Accel": "corporation"}]', '[{"Facebook": "corporation"}, {"BranchOut": "product"}, {"Accel": "corporation"}]', '[{"Facebook": "corporation"}, {"BranchOut": "product"}, {"Accel": "corporation"}]'], 'prediction_per_consist': [{'BranchOut': 'product', 'Facebook': 'corporation', 'Accel': 'corporation'}, {'Facebook Job-Hunting App BranchOut': 'product', 'Accel': 'corporation', 'Super Angels': 'group'}, {'Facebook': 'corporation', 'BranchOut': 'product', 'Accel': 'corporation'}, {'Facebook': 'corporation', 'BranchOut': 'product', 'Accel': 'corporation'}, {'Facebook': 'corporation', 'BranchOut': 'product', 'Accel': 'corporation'}], 'prediction': {'BranchOut': 'product', 'Facebook': 'corporation', 'Accel': 'corporation'}, 'consistency_score': {'entities': {('BranchOut', 'product'): 4, ('Facebook', 'corporation'): 4, ('Accel', 'corporation'): 5}, 'avg': 4.333333333333333}, 'consistency_score_SC_all_ans': {'entities': {('BranchOut', 'product'): 4, ('Facebook', 'corporation'): 4, ('Accel', 'corporation'): 5, ('Facebook Job-Hunting App BranchOut', 'product'): 1, ('Super Angels', 'group'): 1}, 'avg': 3.0}}
{'idx': '268', 'sentence': 'One day the things i say and do is gonna get me a nice slap ..', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: One day the things i say and do is gonna get me a nice slap ..\nAnswer: ', 'responses': ['[]', '[{"One": "person"}]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {'One': 'person'}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {('One', 'person'): 1}, 'avg': 1.0}}
{'idx': '269', 'sentence': "@CHRIS_Daughtry Aw ur cute when u get mad ur songs r Killing me I just Love Ur Voice ! even my bros do which is weird they don't like my stuff", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @CHRIS_Daughtry Aw ur cute when u get mad ur songs r Killing me I just Love Ur Voice ! even my bros do which is weird they don\'t like my stuff\nAnswer: ', 'responses': ['[{"CHRIS_Daughtry": "person"}]', '[{"CHRIS_Daughtry": "person"}]', '[{"CHRIS_Daughtry": "person"}]', '[{"CHRIS_Daughtry": "person"}]', '[{"CHRIS_Daughtry": "person"}]'], 'prediction_per_consist': [{'CHRIS_Daughtry': 'person'}, {'CHRIS_Daughtry': 'person'}, {'CHRIS_Daughtry': 'person'}, {'CHRIS_Daughtry': 'person'}, {'CHRIS_Daughtry': 'person'}], 'prediction': {'CHRIS_Daughtry': 'person'}, 'consistency_score': {'entities': {('CHRIS_Daughtry', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('CHRIS_Daughtry', 'person'): 5}, 'avg': 5.0}}
{'idx': '270', 'sentence': "@peasmom3 and as if I was n't obsessed with AFL already , after Sunday I 've gotten even more so !! I 'm so obsessed with his sexiness !!!!", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @peasmom3 and as if I was n\'t obsessed with AFL already , after Sunday I \'ve gotten even more so !! I \'m so obsessed with his sexiness !!!!\nAnswer: ', 'responses': ['[{"peasmom3": "person"}, {"AFL": "group"}]', '[{"peasmom3": "person"}, {"AFL": "group"}]', '[{"peasmom3": "person"}, {"AFL": "group"}]', '[{"peasmom3": "person"}, {"AFL": "group"}]', '[{"peasmom3": "person"}, {"AFL": "group"}]'], 'prediction_per_consist': [{'peasmom3': 'person', 'AFL': 'group'}, {'peasmom3': 'person', 'AFL': 'group'}, {'peasmom3': 'person', 'AFL': 'group'}, {'peasmom3': 'person', 'AFL': 'group'}, {'peasmom3': 'person', 'AFL': 'group'}], 'prediction': {'peasmom3': 'person', 'AFL': 'group'}, 'consistency_score': {'entities': {('peasmom3', 'person'): 5, ('AFL', 'group'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('peasmom3', 'person'): 5, ('AFL', 'group'): 5}, 'avg': 5.0}}
{'idx': '271', 'sentence': 'I just took " When your mom makes you go live with your dad Scooter Braun , your life ..." and got : Part 7 ! Try it : http://tinyurl.com/27r2pdz', 'label': "{'Scooter Braun': 'person'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: I just took " When your mom makes you go live with your dad Scooter Braun , your life ..." and got : Part 7 ! Try it : http://tinyurl.com/27r2pdz\nAnswer: ', 'responses': ['[{"Scooter Braun": "person"}]', '[{"Scooter Braun": "person"}]', '[{"Scooter Braun": "person"}]', '[{"Scooter Braun": "person"}]', '[{"Scooter Braun": "person"}]'], 'prediction_per_consist': [{'Scooter Braun': 'person'}, {'Scooter Braun': 'person'}, {'Scooter Braun': 'person'}, {'Scooter Braun': 'person'}, {'Scooter Braun': 'person'}], 'prediction': {'Scooter Braun': 'person'}, 'consistency_score': {'entities': {('Scooter Braun', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Scooter Braun', 'person'): 5}, 'avg': 5.0}}
{'idx': '272', 'sentence': 'Tarantula in my lounge last night , hoping i dont get a repeat tonight', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Tarantula in my lounge last night , hoping i dont get a repeat tonight\nAnswer: ', 'responses': ['[{"Tarantula": "creative-work"}]', '[{"Tarantula": "creative-work"}]', '[]', '[{"Tarantula": "creative-work"}]', '[]'], 'prediction_per_consist': [{'Tarantula': 'creative-work'}, {'Tarantula': 'creative-work'}, {}, {'Tarantula': 'creative-work'}, {}], 'prediction': {'Tarantula': 'creative-work'}, 'consistency_score': {'entities': {('Tarantula', 'creative-work'): 3}, 'avg': 3.0}, 'consistency_score_SC_all_ans': {'entities': {('Tarantula', 'creative-work'): 3}, 'avg': 3.0}}
{'idx': '273', 'sentence': '@jackjohnson where can I get the official set list to the show at Berkeley in Oct 6th ?!', 'label': "{'Berkeley': 'location'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @jackjohnson where can I get the official set list to the show at Berkeley in Oct 6th ?!\nAnswer: ', 'responses': ['[{"jackjohnson": "person"}, {"Berkeley": "location"}]', '[{"jackjohnson": "person"}, {"Berkeley": "location"}]', '[{"jackjohnson": "person"}, {"Berkeley": "location"}]', '[{"jackjohnson": "person"}, {"Berkeley": "location"}]', '[{"jackjohnson": "person"}, {"Berkeley": "location"}]'], 'prediction_per_consist': [{'jackjohnson': 'person', 'Berkeley': 'location'}, {'jackjohnson': 'person', 'Berkeley': 'location'}, {'jackjohnson': 'person', 'Berkeley': 'location'}, {'jackjohnson': 'person', 'Berkeley': 'location'}, {'jackjohnson': 'person', 'Berkeley': 'location'}], 'prediction': {'jackjohnson': 'person', 'Berkeley': 'location'}, 'consistency_score': {'entities': {('jackjohnson', 'person'): 5, ('Berkeley', 'location'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('jackjohnson', 'person'): 5, ('Berkeley', 'location'): 5}, 'avg': 5.0}}
{'idx': '274', 'sentence': "Before I proceed into the paradise , let 's not forget the Princess Lover OVA 1 teaser pic , SFW http://yfrog.com/0fg2kfj", 'label': "{'Princess Lover OVA 1': 'creative-work'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Before I proceed into the paradise , let \'s not forget the Princess Lover OVA 1 teaser pic , SFW http://yfrog.com/0fg2kfj\nAnswer: ', 'responses': ['[{"Princess Lover OVA 1": "creative-work"}]', '[{"Princess Lover OVA 1": "creative-work"}]', '[{"Princess Lover OVA 1": "creative-work"}]', '[{"Princess Lover OVA 1": "creative-work"}]', '[{"Princess Lover OVA 1": "creative-work"}]'], 'prediction_per_consist': [{'Princess Lover OVA 1': 'creative-work'}, {'Princess Lover OVA 1': 'creative-work'}, {'Princess Lover OVA 1': 'creative-work'}, {'Princess Lover OVA 1': 'creative-work'}, {'Princess Lover OVA 1': 'creative-work'}], 'prediction': {'Princess Lover OVA 1': 'creative-work'}, 'consistency_score': {'entities': {('Princess Lover OVA 1', 'creative-work'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Princess Lover OVA 1', 'creative-work'): 5}, 'avg': 5.0}}
{'idx': '275', 'sentence': 'Selling a home : Strategies for selling in a slow market : by Denise Calaman The July 2010 housing market sales repo ... http://bit.ly/d1xAoc', 'label': "{'Denise Calaman': 'person'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Selling a home : Strategies for selling in a slow market : by Denise Calaman The July 2010 housing market sales repo ... http://bit.ly/d1xAoc\nAnswer: ', 'responses': ['[{"Denise Calaman": "person"}]', '[{"Denise Calaman": "person"}]', '[{"Denise Calaman": "person"}]', '[{"Denise Calaman": "person"}]', '[{"Denise Calaman": "person"}]'], 'prediction_per_consist': [{'Denise Calaman': 'person'}, {'Denise Calaman': 'person'}, {'Denise Calaman': 'person'}, {'Denise Calaman': 'person'}, {'Denise Calaman': 'person'}], 'prediction': {'Denise Calaman': 'person'}, 'consistency_score': {'entities': {('Denise Calaman', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Denise Calaman', 'person'): 5}, 'avg': 5.0}}
{'idx': '276', 'sentence': "@SweetTartelette Glad to hear they are okay . A drunk ran into the back of my son 's car this week . He said it was frightening . N", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @SweetTartelette Glad to hear they are okay . A drunk ran into the back of my son \'s car this week . He said it was frightening . N\nAnswer: ', 'responses': ['[{"SweetTartelette": "person"}]', '[{"SweetTartelette": "person"}]', '[{"SweetTartelette": "person"}]', '[{"SweetTartelette": "person"}]', '[{"SweetTartelette": "person"}]'], 'prediction_per_consist': [{'SweetTartelette': 'person'}, {'SweetTartelette': 'person'}, {'SweetTartelette': 'person'}, {'SweetTartelette': 'person'}, {'SweetTartelette': 'person'}], 'prediction': {'SweetTartelette': 'person'}, 'consistency_score': {'entities': {('SweetTartelette', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('SweetTartelette', 'person'): 5}, 'avg': 5.0}}
{'idx': '277', 'sentence': 'jus about to get dressed and leave again .... smh a very long day', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: jus about to get dressed and leave again .... smh a very long day\nAnswer: ', 'responses': ['[]', '[]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {}, 'avg': 0}}
{'idx': '278', 'sentence': "U shoulda known ! Its a Friday ! RT @BoRnStar88 Tutoring ppl all day at work on a Friday is already a bore then the students don't show up !!.", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: U shoulda known ! Its a Friday ! RT @BoRnStar88 Tutoring ppl all day at work on a Friday is already a bore then the students don\'t show up !!.\nAnswer: ', 'responses': ['[{"BoRnStar88": "person"}]', '[{"BoRnStar88": "person"}]', '[{"BoRnStar88": "person"}]', '[{"BoRnStar88": "person"}]', '[{"BoRnStar88": "person"}]'], 'prediction_per_consist': [{'BoRnStar88': 'person'}, {'BoRnStar88': 'person'}, {'BoRnStar88': 'person'}, {'BoRnStar88': 'person'}, {'BoRnStar88': 'person'}], 'prediction': {'BoRnStar88': 'person'}, 'consistency_score': {'entities': {('BoRnStar88', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('BoRnStar88', 'person'): 5}, 'avg': 5.0}}
{'idx': '279', 'sentence': "@DahlDana ooooh when 's he releasing it ?", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @DahlDana ooooh when \'s he releasing it ?\nAnswer: ', 'responses': ['[]', '[]', '[{"DahlDana": "person"}]', '[{"DahlDana": "person"}]', '[]'], 'prediction_per_consist': [{}, {}, {'DahlDana': 'person'}, {'DahlDana': 'person'}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {('DahlDana', 'person'): 2}, 'avg': 2.0}}
{'idx': '280', 'sentence': "I called my sister and she asked why i want a mcdonalds at this time of nigh t.i said ' blame rose ' she said ' who 's rose ?' lmao", 'label': "{'mcdonalds': 'corporation', 'rose': 'person'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: I called my sister and she asked why i want a mcdonalds at this time of nigh t.i said \' blame rose \' she said \' who \'s rose ?\' lmao\nAnswer: ', 'responses': ['[{"mcdonalds": "corporation"}, {"rose": "person"}]', '[{"mcdonalds": "corporation"}, {"rose": "person"}]', '[{"mcdonalds": "corporation"}, {"rose": "person"}]', '[{"mcdonalds": "corporation"}, {"rose": "person"}]', '[{"mcdonalds": "corporation"}, {"rose": "person"}]'], 'prediction_per_consist': [{'mcdonalds': 'corporation', 'rose': 'person'}, {'mcdonalds': 'corporation', 'rose': 'person'}, {'mcdonalds': 'corporation', 'rose': 'person'}, {'mcdonalds': 'corporation', 'rose': 'person'}, {'mcdonalds': 'corporation', 'rose': 'person'}], 'prediction': {'mcdonalds': 'corporation', 'rose': 'person'}, 'consistency_score': {'entities': {('mcdonalds', 'corporation'): 5, ('rose', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('mcdonalds', 'corporation'): 5, ('rose', 'person'): 5}, 'avg': 5.0}}
{'idx': '281', 'sentence': 'Train with us for the HCA 8K ! We start tomorrow morning at 7:30 am at the showroom !', 'label': "{'HCA': 'group'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Train with us for the HCA 8K ! We start tomorrow morning at 7:30 am at the showroom !\nAnswer: ', 'responses': ['[{"HCA 8K": "product"}, {"showroom": "location"}]', '[{"HCA 8K": "product"}, {"showroom": "location"}]', '[{"HCA 8K": "product"}, {"showroom": "location"}]', '[{"HCA 8K": "product"}, {"showroom": "location"}]', '[{"HCA 8K": "product"}, {"showroom": "location"}]'], 'prediction_per_consist': [{'HCA 8K': 'product', 'showroom': 'location'}, {'HCA 8K': 'product', 'showroom': 'location'}, {'HCA 8K': 'product', 'showroom': 'location'}, {'HCA 8K': 'product', 'showroom': 'location'}, {'HCA 8K': 'product', 'showroom': 'location'}], 'prediction': {'HCA 8K': 'product', 'showroom': 'location'}, 'consistency_score': {'entities': {('HCA 8K', 'product'): 5, ('showroom', 'location'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('HCA 8K', 'product'): 5, ('showroom', 'location'): 5}, 'avg': 5.0}}
{'idx': '282', 'sentence': "@usnOOzin Ahh Steve , you're so good to me , every week . #FF . Thanks so much . How 's the wife recovering ???", 'label': "{'Steve': 'person'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @usnOOzin Ahh Steve , you\'re so good to me , every week . #FF . Thanks so much . How \'s the wife recovering ???\nAnswer: ', 'responses': ['[{"Steve": "person"}]', '[{"Steve": "person"}]', '[{"Steve": "person"}]', '[{"Steve": "person"}]', '[{"Steve": "person"}]'], 'prediction_per_consist': [{'Steve': 'person'}, {'Steve': 'person'}, {'Steve': 'person'}, {'Steve': 'person'}, {'Steve': 'person'}], 'prediction': {'Steve': 'person'}, 'consistency_score': {'entities': {('Steve', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Steve', 'person'): 5}, 'avg': 5.0}}
{'idx': '283', 'sentence': '@SheSo_Major they giving the nigga a realllllll hard time about it lmfaoo as they should and now his feelings are hurt ... i like him tho LMAO', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @SheSo_Major they giving the nigga a realllllll hard time about it lmfaoo as they should and now his feelings are hurt ... i like him tho LMAO\nAnswer: ', 'responses': ['[{"SheSo_Major": "person"}]', '[{"SheSo_Major": "person"}]', '[{"SheSo_Major": "person"}]', '[{"SheSo_Major": "person"}]', '[{"SheSo_Major": "person"}]'], 'prediction_per_consist': [{'SheSo_Major': 'person'}, {'SheSo_Major': 'person'}, {'SheSo_Major': 'person'}, {'SheSo_Major': 'person'}, {'SheSo_Major': 'person'}], 'prediction': {'SheSo_Major': 'person'}, 'consistency_score': {'entities': {('SheSo_Major', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('SheSo_Major', 'person'): 5}, 'avg': 5.0}}
{'idx': '284', 'sentence': 'Football game tonight :) yeeah boilers .. oh wait , we suck . haha', 'label': "{'boilers': 'group'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Football game tonight :) yeeah boilers .. oh wait , we suck . haha\nAnswer: ', 'responses': ['[]', '[]', '[]', '[{"boilers": "group"}]', '[{"boilers": "group"}]'], 'prediction_per_consist': [{}, {}, {}, {'boilers': 'group'}, {'boilers': 'group'}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {('boilers', 'group'): 2}, 'avg': 2.0}}
{'idx': '285', 'sentence': "@toukie_s i'mgoing to sleep , not feeling very well , see you tomorrow", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @toukie_s i\'mgoing to sleep , not feeling very well , see you tomorrow\nAnswer: ', 'responses': ['[{"toukie_s": "person"}]', '[{"toukie_s": "person"}]', '[{"toukie_s": "person"}]', '[{"toukie_s": "person"}]', '[]'], 'prediction_per_consist': [{'toukie_s': 'person'}, {'toukie_s': 'person'}, {'toukie_s': 'person'}, {'toukie_s': 'person'}, {}], 'prediction': {'toukie_s': 'person'}, 'consistency_score': {'entities': {('toukie_s', 'person'): 4}, 'avg': 4.0}, 'consistency_score_SC_all_ans': {'entities': {('toukie_s', 'person'): 4}, 'avg': 4.0}}
{'idx': '286', 'sentence': "Well had the weigh in today . I've lost a pound !!! I've had no alcohol , no puddings , no crisps , no chocolate &amp; I've only lost a pound !!!!!", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Well had the weigh in today . I\'ve lost a pound !!! I\'ve had no alcohol , no puddings , no crisps , no chocolate &amp; I\'ve only lost a pound !!!!!\nAnswer: ', 'responses': ['[{"Well": "creative-work"}]', '[{"pound": "product"}]', '[]', '[]', '[]'], 'prediction_per_consist': [{'Well': 'creative-work'}, {'pound': 'product'}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {('Well', 'creative-work'): 1, ('pound', 'product'): 1}, 'avg': 1.0}}
{'idx': '287', 'sentence': 'RT @JDay_Sept15 : RT @Ashanie_di_Don : @JDay_Sept15 lol i see someone hyped and ready for #FlavaFridays tonight &lt; every week . Lets get it !', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: RT @JDay_Sept15 : RT @Ashanie_di_Don : @JDay_Sept15 lol i see someone hyped and ready for #FlavaFridays tonight &lt; every week . Lets get it !\nAnswer: ', 'responses': ['[{"JDay_Sept15": "person"}, {"Ashanie_di_Don": "person"}, {"FlavaFridays": "creative-work"}]', '[{"JDay_Sept15": "person"}, {"Ashanie_di_Don": "person"}, {"FlavaFridays": "creative-work"}]', '[{"JDay_Sept15": "person"}, {"Ashanie_di_Don": "person"}, {"FlavaFridays": "creative-work"}]', '[{"JDay_Sept15": "person"}, {"Ashanie_di_Don": "person"}, {"FlavaFridays": "creative-work"}]', '[{"JDay_Sept15": "person"}, {"Ashanie_di_Don": "person"}, {"FlavaFridays": "group"}]'], 'prediction_per_consist': [{'JDay_Sept15': 'person', 'Ashanie_di_Don': 'person', 'FlavaFridays': 'creative-work'}, {'JDay_Sept15': 'person', 'Ashanie_di_Don': 'person', 'FlavaFridays': 'creative-work'}, {'JDay_Sept15': 'person', 'Ashanie_di_Don': 'person', 'FlavaFridays': 'creative-work'}, {'JDay_Sept15': 'person', 'Ashanie_di_Don': 'person', 'FlavaFridays': 'creative-work'}, {'JDay_Sept15': 'person', 'Ashanie_di_Don': 'person', 'FlavaFridays': 'group'}], 'prediction': {'JDay_Sept15': 'person', 'Ashanie_di_Don': 'person', 'FlavaFridays': 'creative-work'}, 'consistency_score': {'entities': {('JDay_Sept15', 'person'): 5, ('Ashanie_di_Don', 'person'): 5, ('FlavaFridays', 'creative-work'): 4}, 'avg': 4.666666666666667}, 'consistency_score_SC_all_ans': {'entities': {('JDay_Sept15', 'person'): 5, ('Ashanie_di_Don', 'person'): 5, ('FlavaFridays', 'creative-work'): 4, ('FlavaFridays', 'group'): 1}, 'avg': 3.75}}
{'idx': '288', 'sentence': 'Maikes hair . School . Webinar at the first job . Changed ... ti second job ... then time with the boy ! What a day .; )', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Maikes hair . School . Webinar at the first job . Changed ... ti second job ... then time with the boy ! What a day .; )\nAnswer: ', 'responses': ['[{"Maikes": "person"}]', '[]', '[]', '[]', '[{"Maikes": "person"}]'], 'prediction_per_consist': [{'Maikes': 'person'}, {}, {}, {}, {'Maikes': 'person'}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {('Maikes', 'person'): 2}, 'avg': 2.0}}
{'idx': '289', 'sentence': '@SinfulSalvatore { drinks slowly from my cup observing your actions before clearing my throat } is -this- your plans for today ?', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @SinfulSalvatore { drinks slowly from my cup observing your actions before clearing my throat } is -this- your plans for today ?\nAnswer: ', 'responses': ['[{"SinfulSalvatore": "person"}]', '[{"SinfulSalvatore": "person"}]', '[{"SinfulSalvatore": "person"}]', '[]', '[]'], 'prediction_per_consist': [{'SinfulSalvatore': 'person'}, {'SinfulSalvatore': 'person'}, {'SinfulSalvatore': 'person'}, {}, {}], 'prediction': {'SinfulSalvatore': 'person'}, 'consistency_score': {'entities': {('SinfulSalvatore', 'person'): 3}, 'avg': 3.0}, 'consistency_score_SC_all_ans': {'entities': {('SinfulSalvatore', 'person'): 3}, 'avg': 3.0}}
{'idx': '290', 'sentence': '@Dazzx I think you may have mentioned it . Once or twice . :)', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @Dazzx I think you may have mentioned it . Once or twice . :)\nAnswer: ', 'responses': ['[]', '[]', '[]', '[].', '[].'], 'prediction_per_consist': [{}, {}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {}, 'avg': 0}}
{'idx': '291', 'sentence': 'Photo : Chillo ?? Trying out for the 1st time this shit !! http://tumblr.com/x0jiuemje', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Photo : Chillo ?? Trying out for the 1st time this shit !! http://tumblr.com/x0jiuemje\nAnswer: ', 'responses': ['[{"Chillo": "person"}]', '[{"Chillo": "person"}]', '[{"Chillo": "person"}]', '[{"Chillo": "person"}]', '[{"Chillo": "person"}]'], 'prediction_per_consist': [{'Chillo': 'person'}, {'Chillo': 'person'}, {'Chillo': 'person'}, {'Chillo': 'person'}, {'Chillo': 'person'}], 'prediction': {'Chillo': 'person'}, 'consistency_score': {'entities': {('Chillo', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Chillo', 'person'): 5}, 'avg': 5.0}}
{'idx': '292', 'sentence': "@abzmedic I 'm missing autumn because of work . :( I must get into the forests tomorrow !", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @abzmedic I \'m missing autumn because of work . :( I must get into the forests tomorrow !\nAnswer: ', 'responses': ['[{"abzmedic": "person"}]', '[{"abzmedic": "person"}]', '[{"abzmedic": "person"}]', '[{"abzmedic": "person"}]', '[{"abzmedic": "person"}]'], 'prediction_per_consist': [{'abzmedic': 'person'}, {'abzmedic': 'person'}, {'abzmedic': 'person'}, {'abzmedic': 'person'}, {'abzmedic': 'person'}], 'prediction': {'abzmedic': 'person'}, 'consistency_score': {'entities': {('abzmedic', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('abzmedic', 'person'): 5}, 'avg': 5.0}}
{'idx': '293', 'sentence': 'waiting one extra day was a STUPID IDEA because now everything is super expensive AAAAAHHH . x_x *freakingoutkhsf*', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: waiting one extra day was a STUPID IDEA because now everything is super expensive AAAAAHHH . x_x *freakingoutkhsf*\nAnswer: ', 'responses': ['[{"STUPID IDEA": "creative-work"}]', '[]', '[]', '[]', '[]'], 'prediction_per_consist': [{'STUPID IDEA': 'creative-work'}, {}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {('STUPID IDEA', 'creative-work'): 1}, 'avg': 1.0}}
{'idx': '294', 'sentence': 'I just took " ( All Parts ) + (* New Season 2 , All Parts*) You\'ve been fri ..." and got : PART 10 , A MILLION YEARS !! Try it : http://bit.ly/bRCD9M', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: I just took " ( All Parts ) + (* New Season 2 , All Parts*) You\'ve been fri ..." and got : PART 10 , A MILLION YEARS !! Try it : http://bit.ly/bRCD9M\nAnswer: ', 'responses': ['[{"New Season 2": "creative-work"}]', '[{"PART 10": "product"}]', '[{"New Season 2": "creative-work"}]', '[{"New Season 2": "product"}]', '[{"New Season 2": "creative-work"}]'], 'prediction_per_consist': [{'New Season 2': 'creative-work'}, {'PART 10': 'product'}, {'New Season 2': 'creative-work'}, {'New Season 2': 'product'}, {'New Season 2': 'creative-work'}], 'prediction': {'New Season 2': 'creative-work'}, 'consistency_score': {'entities': {('New Season 2', 'creative-work'): 3}, 'avg': 3.0}, 'consistency_score_SC_all_ans': {'entities': {('New Season 2', 'creative-work'): 3, ('PART 10', 'product'): 1, ('New Season 2', 'product'): 1}, 'avg': 1.6666666666666667}}
{'idx': '295', 'sentence': 'Companies fixing a problem that \'s wholly their fault and calling it a " one-time courtesy " is insult to injury . They \'re clearly not sorry !', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Companies fixing a problem that \'s wholly their fault and calling it a " one-time courtesy " is insult to injury . They \'re clearly not sorry !\nAnswer: ', 'responses': ['[{"Companies": "corporation"}]', '[{"Companies": "corporation"}]', '[{"Companies": "corporation"}]', '[{"Companies": "corporation"}]', '[{"Companies": "corporation"}]'], 'prediction_per_consist': [{'Companies': 'corporation'}, {'Companies': 'corporation'}, {'Companies': 'corporation'}, {'Companies': 'corporation'}, {'Companies': 'corporation'}], 'prediction': {'Companies': 'corporation'}, 'consistency_score': {'entities': {('Companies', 'corporation'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Companies', 'corporation'): 5}, 'avg': 5.0}}
{'idx': '296', 'sentence': "Its stupid I hate getn a attitude from ppl when I 'm jus tryna be nice n shit . WTF now I 'm mad so dnt talk to me right now", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: Its stupid I hate getn a attitude from ppl when I \'m jus tryna be nice n shit . WTF now I \'m mad so dnt talk to me right now\nAnswer: ', 'responses': ['[{"ppl": "group"}]', '[{"WTF": "group"}]', '[{"ppl": "group"}]', '[{"ppl": "group"}]', '[{"ppl": "group"}]'], 'prediction_per_consist': [{'ppl': 'group'}, {'WTF': 'group'}, {'ppl': 'group'}, {'ppl': 'group'}, {'ppl': 'group'}], 'prediction': {'ppl': 'group'}, 'consistency_score': {'entities': {('ppl', 'group'): 4}, 'avg': 4.0}, 'consistency_score_SC_all_ans': {'entities': {('ppl', 'group'): 4, ('WTF', 'group'): 1}, 'avg': 2.5}}
{'idx': '297', 'sentence': "RT @OMGwhatateen : RT if you are happy it 's friday . #OMGwhatateen", 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: RT @OMGwhatateen : RT if you are happy it \'s friday . #OMGwhatateen\nAnswer: ', 'responses': ['[]', '[]', '[]', '[]', '[]'], 'prediction_per_consist': [{}, {}, {}, {}, {}], 'prediction': {}, 'consistency_score': {'entities': {}, 'avg': 0}, 'consistency_score_SC_all_ans': {'entities': {}, 'avg': 0}}
{'idx': '298', 'sentence': '@bowlerhatlover Been trying to find a copy of " Nostalgia " for years . http://hollisframpton.org.uk/', 'label': "{'Nostalgia': 'product'}", 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @bowlerhatlover Been trying to find a copy of " Nostalgia " for years . http://hollisframpton.org.uk/\nAnswer: ', 'responses': ['[{"Nostalgia": "creative-work"}]', '[{"Nostalgia": "creative-work"}]', '[{"Nostalgia": "creative-work"}]', '[{"Nostalgia": "creative-work"}]', '[{"bowlerhatlover": "person"}, {"Nostalgia": "creative-work"}]'], 'prediction_per_consist': [{'Nostalgia': 'creative-work'}, {'Nostalgia': 'creative-work'}, {'Nostalgia': 'creative-work'}, {'Nostalgia': 'creative-work'}, {'bowlerhatlover': 'person', 'Nostalgia': 'creative-work'}], 'prediction': {'Nostalgia': 'creative-work'}, 'consistency_score': {'entities': {('Nostalgia', 'creative-work'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('Nostalgia', 'creative-work'): 5, ('bowlerhatlover', 'person'): 1}, 'avg': 3.0}}
{'idx': '299', 'sentence': '@jeffpulver @wildman94 @MusicIsGood4U thanks for hitting me and @shoewolf up . Let me know when that DM with all the info has been sent .', 'label': '{}', 'prompt': 'You are an expert in named entity recognition. You are good at information extraction.\nGiven entity label set: [\'person\', \'location\', \'corporation\', \'product\', \'creative-work\', \'group\']\nPlease recognize the named entities in the given text. Based on the given entity label set, provide answer in the following JSON format: [{"Entity Name": "Entity Label"}]. If there is no entity in the text, return the following empty list: []. Person: Names of people (e.g. Virginia Wade). Don’t mark people that don’t have their own name. Include punctuation in the middle of names. Fictional people can be included, as long as they’re referred to by name (e.g. Harry Potter). Location: Names that are locations (e.g. France). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names. Fictional locations can be included, as long as they’re referred to by name (e.g. Hogwarts). Product: Name of products (e.g. iPhone). Don’t mark products that don’t have their own name. Include punctuation in the middle of names. Fictional products can be included, as long as they’re referred to by name (e.g. Everlasting Gobstopper). It’s got to be something you can touch, and it’s got to be the official name Creative-work: Names of creative works (e.g. Bohemian Rhapsody). Include punctuation in the middle of names. The work should be created by a human, and referred to by its specific name. Group: Names of groups (e.g. Nirvana, San Diego Padres). Don’t mark groups that don’t have a specific, unique name, or companies (which should be marked corporation) Corporation: Names of corporations (e.g. Google). Don’t mark locations that don’t have their own name. Include punctuation in the middle of names.\n Example: Input Text:Boi Ching Lang is providing cancer Answer:[{"Boi Ching Lang": "person"}] Input Text:its a glitch the rc var thing Answer:[{"rc var": "product"}] Text:Game of Thrones is not based on earth js Answer:[{"Game of Thrones": "creative-work"}, {"earth": "location"}]\nText: @jeffpulver @wildman94 @MusicIsGood4U thanks for hitting me and @shoewolf up . Let me know when that DM with all the info has been sent .\nAnswer: ', 'responses': ['[{"jeffpulver": "person"}, {"wildman94": "person"}, {"MusicIsGood4U": "person"}, {"shoewolf": "person"}]', '[{"jeffpulver": "person"}, {"wildman94": "person"}, {"MusicIsGood4U": "person"}, {"shoewolf": "person"}]', '[{"jeffpulver": "person"}, {"wildman94": "person"}, {"MusicIsGood4U": "person"}, {"shoewolf": "person"}]', '[{"jeffpulver": "person"}, {"wildman94": "person"}, {"MusicIsGood4U": "person"}, {"shoewolf": "person"}]', '[{"jeffpulver": "person"}, {"wildman94": "person"}, {"MusicIsGood4U": "person"}, {"shoewolf": "person"}]'], 'prediction_per_consist': [{'jeffpulver': 'person', 'wildman94': 'person', 'MusicIsGood4U': 'person', 'shoewolf': 'person'}, {'jeffpulver': 'person', 'wildman94': 'person', 'MusicIsGood4U': 'person', 'shoewolf': 'person'}, {'jeffpulver': 'person', 'wildman94': 'person', 'MusicIsGood4U': 'person', 'shoewolf': 'person'}, {'jeffpulver': 'person', 'wildman94': 'person', 'MusicIsGood4U': 'person', 'shoewolf': 'person'}, {'jeffpulver': 'person', 'wildman94': 'person', 'MusicIsGood4U': 'person', 'shoewolf': 'person'}], 'prediction': {'jeffpulver': 'person', 'wildman94': 'person', 'MusicIsGood4U': 'person', 'shoewolf': 'person'}, 'consistency_score': {'entities': {('jeffpulver', 'person'): 5, ('wildman94', 'person'): 5, ('MusicIsGood4U', 'person'): 5, ('shoewolf', 'person'): 5}, 'avg': 5.0}, 'consistency_score_SC_all_ans': {'entities': {('jeffpulver', 'person'): 5, ('wildman94', 'person'): 5, ('MusicIsGood4U', 'person'): 5, ('shoewolf', 'person'): 5}, 'avg': 5.0}}
